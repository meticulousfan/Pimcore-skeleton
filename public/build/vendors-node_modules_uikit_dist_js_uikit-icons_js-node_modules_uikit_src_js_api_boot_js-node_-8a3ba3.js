(self["webpackChunk_w_vision_pimcore_skeleton"] = self["webpackChunk_w_vision_pimcore_skeleton"] || []).push([["vendors-node_modules_uikit_dist_js_uikit-icons_js-node_modules_uikit_src_js_api_boot_js-node_-8a3ba3"],{

/***/ "./node_modules/uikit/dist/js/uikit-icons.js":
/*!***************************************************!*\
  !*** ./node_modules/uikit/dist/js/uikit-icons.js ***!
  \***************************************************/
/***/ (function(module) {

/*! UIkit 3.10.1 | https://www.getuikit.com | (c) 2014 - 2022 YOOtheme | MIT License */
(function (global, factory) {
   true ? module.exports = factory() : 0;
})(this, function () {
  'use strict';

  function plugin(UIkit) {
    if (plugin.installed) {
      return;
    }

    UIkit.icon.add({
      "500px": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719 c0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449 c-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045 c-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z\"/><path d=\"M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066 c0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564 c0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271 c0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z\"/><path d=\"M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521 c-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53 c-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203 c-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604 c0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645 c1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z\"/><path d=\"M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461 c0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882 c0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881 c-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461 c-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915 C5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0 c0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408 c0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406 c-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799 c0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468 c-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607 c0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038 c-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113 c-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z\"/></svg>",
      "album": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"5\" y=\"2\" width=\"10\" height=\"1\"/><rect x=\"3\" y=\"4\" width=\"14\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"6.5\" width=\"17\" height=\"11\"/></svg>",
      "arrow-down": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66\"/><line fill=\"none\" stroke=\"#000\" x1=\"10.5\" y1=\"4\" x2=\"10.5\" y2=\"15\"/></svg>",
      "arrow-left": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"10 14 5 9.5 10 5\"/><line fill=\"none\" stroke=\"#000\" x1=\"16\" y1=\"9.5\" x2=\"5\" y2=\"9.52\"/></svg>",
      "arrow-right": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"10 5 15 9.5 10 14\"/><line fill=\"none\" stroke=\"#000\" x1=\"4\" y1=\"9.5\" x2=\"15\" y2=\"9.5\"/></svg>",
      "arrow-up": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4\"/><line fill=\"none\" stroke=\"#000\" x1=\"10.5\" y1=\"16\" x2=\"10.5\" y2=\"5\"/></svg>",
      "bag": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M7.5,7.5V4A2.48,2.48,0,0,1,10,1.5,2.54,2.54,0,0,1,12.5,4V7.5\"/><polygon fill=\"none\" stroke=\"#000\" points=\"16.5 7.5 3.5 7.5 2.5 18.5 17.5 18.5 16.5 7.5\"/></svg>",
      "ban": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"4\" y1=\"3.5\" x2=\"16\" y2=\"16.5\"/></svg>",
      "behance": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z\"/><path d=\"M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z\"/><rect x=\"13\" y=\"4\" width=\"5\" height=\"1.4\"/></svg>",
      "bell": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16\"/></svg>",
      "bold": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z\"/></svg>",
      "bolt": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z\"/></svg>",
      "bookmark": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" points=\"5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5\"/></svg>",
      "calendar": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z\"/><rect width=\"1\" height=\"3\" x=\"6\" y=\"2\"/><rect width=\"1\" height=\"3\" x=\"13\" y=\"2\"/></svg>",
      "camera": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10.8\" r=\"3.8\"/><path fill=\"none\" stroke=\"#000\" d=\"M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z\"/></svg>",
      "cart": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"7.3\" cy=\"17.3\" r=\"1.4\"/><circle cx=\"13.3\" cy=\"17.3\" r=\"1.4\"/><polyline fill=\"none\" stroke=\"#000\" points=\"0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5\"/></svg>",
      "check": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"/></svg>",
      "chevron-double-left": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"10 14 6 10 10 6\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"14 14 10 10 14 6\"/></svg>",
      "chevron-double-right": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"10 6 14 10 10 14\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"6 6 10 10 6 14\"/></svg>",
      "chevron-down": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"16 7 10 13 4 7\"/></svg>",
      "chevron-left": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"13 16 7 10 13 4\"/></svg>",
      "chevron-right": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"7 4 13 10 7 16\"/></svg>",
      "chevron-up": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"4 13 10 7 16 13\"/></svg>",
      "clock": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.018,14.197 L9.445,10.625\"/></svg>",
      "close": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.06\" d=\"M16,16 L4,4\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.06\" d=\"M16,4 L4,16\"/></svg>",
      "cloud-download": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\"/><polyline fill=\"none\" stroke=\"#000\" points=\"11.75 16 9.5 18.25 7.25 16\"/><path fill=\"none\" stroke=\"#000\" d=\"M9.5,18 L9.5,9.5\"/></svg>",
      "cloud-upload": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\"/><polyline fill=\"none\" stroke=\"#000\" points=\"7.25 11.75 9.5 9.5 11.75 11.75\"/><path fill=\"none\" stroke=\"#000\" d=\"M9.5,18 L9.5,9.5\"/></svg>",
      "code": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"13,4 19,10 13,16\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"7,4 1,10 7,16\"/></svg>",
      "cog": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" cx=\"9.997\" cy=\"10\" r=\"3.31\"/><path fill=\"none\" stroke=\"#000\" d=\"M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z\"/></svg>",
      "comment": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z\"/></svg>",
      "commenting": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" points=\"1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5\"/><circle cx=\"10\" cy=\"8\" r=\"1\"/><circle cx=\"6\" cy=\"8\" r=\"1\"/><circle cx=\"14\" cy=\"8\" r=\"1\"/></svg>",
      "comments": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"2 0.5 19.5 0.5 19.5 13\"/><path d=\"M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z\"/></svg>",
      "copy": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"2.5\" width=\"12\" height=\"16\"/><polyline fill=\"none\" stroke=\"#000\" points=\"5 0.5 17.5 0.5 17.5 17\"/></svg>",
      "credit-card": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"4.5\" width=\"17\" height=\"12\"/><rect x=\"1\" y=\"7\" width=\"18\" height=\"3\"/></svg>",
      "database": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><ellipse fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"4.64\" rx=\"7.5\" ry=\"3.14\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64\"/></svg>",
      "desktop": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"8\" y=\"15\" width=\"1\" height=\"2\"/><rect x=\"11\" y=\"15\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"16\" width=\"10\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"3.5\" width=\"17\" height=\"11\"/></svg>",
      "discord": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M16.074,4.361a14.243,14.243,0,0,0-3.61-1.134,10.61,10.61,0,0,0-.463.96,13.219,13.219,0,0,0-4,0,10.138,10.138,0,0,0-.468-.96A14.206,14.206,0,0,0,3.919,4.364,15.146,15.146,0,0,0,1.324,14.5a14.435,14.435,0,0,0,4.428,2.269A10.982,10.982,0,0,0,6.7,15.21a9.294,9.294,0,0,1-1.494-.727c.125-.093.248-.19.366-.289a10.212,10.212,0,0,0,8.854,0c.119.1.242.2.366.289a9.274,9.274,0,0,1-1.5.728,10.8,10.8,0,0,0,.948,1.562,14.419,14.419,0,0,0,4.431-2.27A15.128,15.128,0,0,0,16.074,4.361Zm-8.981,8.1a1.7,1.7,0,0,1-1.573-1.79A1.689,1.689,0,0,1,7.093,8.881a1.679,1.679,0,0,1,1.573,1.791A1.687,1.687,0,0,1,7.093,12.462Zm5.814,0a1.7,1.7,0,0,1-1.573-1.79,1.689,1.689,0,0,1,1.573-1.791,1.679,1.679,0,0,1,1.573,1.791A1.688,1.688,0,0,1,12.907,12.462Z\"/></svg>",
      "download": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"14,10 9.5,14.5 5,10\"/><rect x=\"3\" y=\"17\" width=\"13\" height=\"1\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"13.91\" x2=\"9.5\" y2=\"3\"/></svg>",
      "dribbble": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>",
      "etsy": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M8,4.26C8,4.07,8,4,8.31,4h4.46c.79,0,1.22.67,1.53,1.91l.25,1h.76c.14-2.82.26-4,.26-4S13.65,3,12.52,3H6.81L3.75,2.92v.84l1,.2c.73.11.9.27,1,1,0,0,.06,2,.06,5.17s-.06,5.14-.06,5.14c0,.59-.23.81-1,.94l-1,.2v.84l3.06-.1h5.11c1.15,0,3.82.1,3.82.1,0-.7.45-3.88.51-4.22h-.73l-.76,1.69a2.25,2.25,0,0,1-2.45,1.47H9.4c-1,0-1.44-.4-1.44-1.24V10.44s2.16,0,2.86.06c.55,0,.85.19,1.06,1l.23,1H13L12.9,9.94,13,7.41h-.85l-.28,1.13c-.16.74-.28.84-1,1-1,.1-2.89.09-2.89.09Z\"/></svg>",
      "expand": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"13 2 18 2 18 7 17 7 17 3 13 3\"/><polygon points=\"2 13 3 13 3 17 7 17 7 18 2 18\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M11,9 L17,3\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M3,17 L9,11\"/></svg>",
      "facebook": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z\"/></svg>",
      "file-edit": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z\"/><polyline fill=\"none\" stroke=\"#000\" points=\"16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5\"/></svg>",
      "file-pdf": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" width=\"13\" height=\"17\" x=\"3.5\" y=\"1.5\"/><path d=\"M14.65 11.67c-.48.3-1.37-.19-1.79-.37a4.65 4.65 0 0 1 1.49.06c.35.1.36.28.3.31zm-6.3.06l.43-.79a14.7 14.7 0 0 0 .75-1.64 5.48 5.48 0 0 0 1.25 1.55l.2.15a16.36 16.36 0 0 0-2.63.73zM9.5 5.32c.2 0 .32.5.32.97a1.99 1.99 0 0 1-.23 1.04 5.05 5.05 0 0 1-.17-1.3s0-.71.08-.71zm-3.9 9a4.35 4.35 0 0 1 1.21-1.46l.24-.22a4.35 4.35 0 0 1-1.46 1.68zm9.23-3.3a2.05 2.05 0 0 0-1.32-.3 11.07 11.07 0 0 0-1.58.11 4.09 4.09 0 0 1-.74-.5 5.39 5.39 0 0 1-1.32-2.06 10.37 10.37 0 0 0 .28-2.62 1.83 1.83 0 0 0-.07-.25.57.57 0 0 0-.52-.4H9.4a.59.59 0 0 0-.6.38 6.95 6.95 0 0 0 .37 3.14c-.26.63-1 2.12-1 2.12-.3.58-.57 1.08-.82 1.5l-.8.44A3.11 3.11 0 0 0 5 14.16a.39.39 0 0 0 .15.42l.24.13c1.15.56 2.28-1.74 2.66-2.42a23.1 23.1 0 0 1 3.59-.85 4.56 4.56 0 0 0 2.91.8.5.5 0 0 0 .3-.21 1.1 1.1 0 0 0 .12-.75.84.84 0 0 0-.14-.25z\"/></svg>",
      "file-text": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" width=\"13\" height=\"17\" x=\"3.5\" y=\"1.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"12\" y1=\"12.5\" y2=\"12.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"8.5\" y2=\"8.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"6.5\" y2=\"6.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"10.5\" y2=\"10.5\"/></svg>",
      "file": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"1.5\" width=\"13\" height=\"17\"/></svg>",
      "flickr": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"5.5\" cy=\"9.5\" r=\"3.5\"/><circle cx=\"14.5\" cy=\"9.5\" r=\"3.5\"/></svg>",
      "folder": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" points=\"9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5\"/></svg>",
      "forward": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z\"/></svg>",
      "foursquare": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z\"/></svg>",
      "future": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline points=\"19 2 18 2 18 6 14 6 14 7 19 7 19 2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path d=\"M13.018,14.197 L9.445,10.625\" fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\"/></svg>",
      "git-branch": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"7\" cy=\"3\" r=\"2\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"14\" cy=\"6\" r=\"2\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"7\" cy=\"17\" r=\"2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"2\" d=\"M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5\"/></svg>",
      "git-fork": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"5.79\" cy=\"2.79\" r=\"1.79\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"14.19\" cy=\"2.79\" r=\"1.79\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"10.03\" cy=\"16.79\" r=\"1.79\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"2\" d=\"M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57\"/></svg>",
      "github-alt": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z\"/></svg>",
      "github": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z\"/></svg>",
      "gitter": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"3.5\" y=\"1\" width=\"1.531\" height=\"11.471\"/><rect x=\"7.324\" y=\"4.059\" width=\"1.529\" height=\"15.294\"/><rect x=\"11.148\" y=\"4.059\" width=\"1.527\" height=\"15.294\"/><rect x=\"14.971\" y=\"4.059\" width=\"1.529\" height=\"8.412\"/></svg>",
      "google": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z\"/></svg>",
      "grid": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"2\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"2\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"2\" y=\"14\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"14\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"14\" width=\"3\" height=\"3\"/></svg>",
      "happy": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"13\" cy=\"7\" r=\"1\"/><circle cx=\"7\" cy=\"7\" r=\"1\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"8.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4\"/></svg>",
      "hashtag": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z\"/></svg>",
      "heart": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" d=\"M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z\"/></svg>",
      "history": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"#000\" points=\"1 2 2 2 2 6 6 6 6 7 1 7 1 2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.018,14.197 L9.445,10.625\"/></svg>",
      "home": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65\"/><polygon points=\"15 4 18 4 18 7 17 7 17 5 15 5\"/><polygon points=\"3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19\"/></svg>",
      "image": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"16.1\" cy=\"6.1\" r=\"1.1\"/><rect fill=\"none\" stroke=\"#000\" x=\".5\" y=\"2.5\" width=\"19\" height=\"15\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"4,13 8,9 13,14\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"11,12 12.5,10.5 16,14\"/></svg>",
      "info": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>",
      "instagram": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z\"/><circle cx=\"14.87\" cy=\"5.26\" r=\"1.09\"/><path d=\"M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z\"/></svg>",
      "italic": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z\"/></svg>",
      "joomla": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z\"/><path d=\"M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8\"/><path d=\"M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8\"/><path d=\"M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7\"/></svg>",
      "laptop": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect y=\"16\" width=\"20\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"2.5\" y=\"4.5\" width=\"15\" height=\"10\"/></svg>",
      "lifesaver": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,0.5 C4.76,0.5 0.5,4.76 0.5,10 C0.5,15.24 4.76,19.5 10,19.5 C15.24,19.5 19.5,15.24 19.5,10 C19.5,4.76 15.24,0.5 10,0.5 L10,0.5 Z M10,1.5 C11.49,1.5 12.89,1.88 14.11,2.56 L11.85,4.82 C11.27,4.61 10.65,4.5 10,4.5 C9.21,4.5 8.47,4.67 7.79,4.96 L5.58,2.75 C6.87,1.95 8.38,1.5 10,1.5 L10,1.5 Z M4.96,7.8 C4.67,8.48 4.5,9.21 4.5,10 C4.5,10.65 4.61,11.27 4.83,11.85 L2.56,14.11 C1.88,12.89 1.5,11.49 1.5,10 C1.5,8.38 1.95,6.87 2.75,5.58 L4.96,7.79 L4.96,7.8 L4.96,7.8 Z M10,18.5 C8.25,18.5 6.62,17.97 5.27,17.06 L7.46,14.87 C8.22,15.27 9.08,15.5 10,15.5 C10.79,15.5 11.53,15.33 12.21,15.04 L14.42,17.25 C13.13,18.05 11.62,18.5 10,18.5 L10,18.5 Z M10,14.5 C7.52,14.5 5.5,12.48 5.5,10 C5.5,7.52 7.52,5.5 10,5.5 C12.48,5.5 14.5,7.52 14.5,10 C14.5,12.48 12.48,14.5 10,14.5 L10,14.5 Z M15.04,12.21 C15.33,11.53 15.5,10.79 15.5,10 C15.5,9.08 15.27,8.22 14.87,7.46 L17.06,5.27 C17.97,6.62 18.5,8.25 18.5,10 C18.5,11.62 18.05,13.13 17.25,14.42 L15.04,12.21 L15.04,12.21 Z\"/></svg>",
      "link": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M7.925,11.875 L11.925,7.975\"/></svg>",
      "linkedin": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z\"/><path d=\"M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z\"/></svg>",
      "list": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"6\" y=\"4\" width=\"12\" height=\"1\"/><rect x=\"6\" y=\"9\" width=\"12\" height=\"1\"/><rect x=\"6\" y=\"14\" width=\"12\" height=\"1\"/><rect x=\"2\" y=\"4\" width=\"2\" height=\"1\"/><rect x=\"2\" y=\"9\" width=\"2\" height=\"1\"/><rect x=\"2\" y=\"14\" width=\"2\" height=\"1\"/></svg>",
      "location": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" d=\"M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"6.8\" r=\"2.3\"/></svg>",
      "lock": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" height=\"10\" width=\"13\" y=\"8.5\" x=\"3.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8\"/></svg>",
      "mail": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"1.4,6.5 10,11 18.6,6.5\"/><path d=\"M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z\"/></svg>",
      "menu": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"2\" y=\"4\" width=\"16\" height=\"1\"/><rect x=\"2\" y=\"9\" width=\"16\" height=\"1\"/><rect x=\"2\" y=\"14\" width=\"16\" height=\"1\"/></svg>",
      "microphone": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><line fill=\"none\" stroke=\"#000\" x1=\"10\" x2=\"10\" y1=\"16.44\" y2=\"18.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"7\" x2=\"13\" y1=\"18.5\" y2=\"18.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.5 4.89v5.87a3.5 3.5 0 0 1-7 0V4.89a3.5 3.5 0 0 1 7 0z\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M15.5 10.36V11a5.5 5.5 0 0 1-11 0v-.6\"/></svg>",
      "minus-circle": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.5\" cy=\"9.5\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" x1=\"5\" y1=\"9.5\" x2=\"14\" y2=\"9.5\"/></svg>",
      "minus": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"1\" width=\"18\" y=\"9\" x=\"1\"/></svg>",
      "more-vertical": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"3\" r=\"2\"/><circle cx=\"10\" cy=\"10\" r=\"2\"/><circle cx=\"10\" cy=\"17\" r=\"2\"/></svg>",
      "more": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3\" cy=\"10\" r=\"2\"/><circle cx=\"10\" cy=\"10\" r=\"2\"/><circle cx=\"17\" cy=\"10\" r=\"2\"/></svg>",
      "move": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"4,5 1,5 1,9 2,9 2,6 4,6\"/><polygon points=\"1,16 2,16 2,18 4,18 4,19 1,19\"/><polygon points=\"14,16 14,19 11,19 11,18 13,18 13,16\"/><rect fill=\"none\" stroke=\"#000\" x=\"5.5\" y=\"1.5\" width=\"13\" height=\"13\"/><rect x=\"1\" y=\"11\" width=\"1\" height=\"3\"/><rect x=\"6\" y=\"18\" width=\"3\" height=\"1\"/></svg>",
      "nut": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" points=\"2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"3.5\"/></svg>",
      "pagekit": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19\"/></svg>",
      "paint-bucket": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.21,1 L0,11.21 L8.1,19.31 L18.31,9.1 L10.21,1 L10.21,1 Z M16.89,9.1 L15,11 L1.7,11 L10.21,2.42 L16.89,9.1 Z\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M6.42,2.33 L11.7,7.61\"/><path d=\"M18.49,12 C18.49,12 20,14.06 20,15.36 C20,16.28 19.24,17 18.49,17 L18.49,17 C17.74,17 17,16.28 17,15.36 C17,14.06 18.49,12 18.49,12 L18.49,12 Z\"/></svg>",
      "pencil": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M15.98,7.268 L13.851,5.148\"/></svg>",
      "phone-landscape": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z\"/><circle cx=\"3.8\" cy=\"10.5\" r=\".8\"/></svg>",
      "phone": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z\"/><circle cx=\"10.5\" cy=\"16.5\" r=\".8\"/></svg>",
      "pinterest": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1\"/></svg>",
      "play-circle": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"8.5 7 13.5 10 8.5 13\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>",
      "play": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" points=\"6.5,5 14.5,10 6.5,15\"/></svg>",
      "plus-circle": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.5\" cy=\"9.5\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"5\" x2=\"9.5\" y2=\"14\"/><line fill=\"none\" stroke=\"#000\" x1=\"5\" y1=\"9.5\" x2=\"14\" y2=\"9.5\"/></svg>",
      "plus": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"9\" y=\"1\" width=\"1\" height=\"17\"/><rect x=\"1\" y=\"9\" width=\"17\" height=\"1\"/></svg>",
      "print": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"4.5 13.5 1.5 13.5 1.5 6.5 18.5 6.5 18.5 13.5 15.5 13.5\"/><polyline fill=\"none\" stroke=\"#000\" points=\"15.5 6.5 15.5 2.5 4.5 2.5 4.5 6.5\"/><rect fill=\"none\" stroke=\"#000\" width=\"11\" height=\"6\" x=\"4.5\" y=\"11.5\"/><rect width=\"8\" height=\"1\" x=\"6\" y=\"13\"/><rect width=\"8\" height=\"1\" x=\"6\" y=\"15\"/></svg>",
      "pull": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"11\" x2=\"9.5\" y2=\"2\"/><polyline fill=\"none\" stroke=\"#000\" points=\"6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5\"/></svg>",
      "push": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"10\" x2=\"9.5\" y2=\"1\"/><polyline fill=\"none\" stroke=\"#000\" points=\"6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5\"/></svg>",
      "question": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><circle cx=\"10.44\" cy=\"14.42\" r=\"1.05\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" d=\"M8.17,7.79 C8.17,4.75 12.72,4.73 12.72,7.72 C12.72,8.67 11.81,9.15 11.23,9.75 C10.75,10.24 10.51,10.73 10.45,11.4 C10.44,11.53 10.43,11.64 10.43,11.75\"/></svg>",
      "quote-right": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z\"/><path d=\"M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z\"/></svg>",
      "receiver": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" d=\"M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611\"/></svg>",
      "reddit": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 9.05a2.56 2.56 0 0 0-2.56-2.56 2.59 2.59 0 0 0-1.88.82 10.63 10.63 0 0 0-4.14-1v-.08c.58-1.62 1.58-3.89 2.7-4.1.38-.08.77.12 1.19.57a1.15 1.15 0 0 0-.06.37 1.48 1.48 0 1 0 1.51-1.45 1.43 1.43 0 0 0-.76.19A2.29 2.29 0 0 0 12.91 1c-2.11.43-3.39 4.38-3.63 5.19 0 0 0 .11-.06.11a10.65 10.65 0 0 0-3.75 1A2.56 2.56 0 0 0 1 9.05a2.42 2.42 0 0 0 .72 1.76A5.18 5.18 0 0 0 1.24 13c0 3.66 3.92 6.64 8.73 6.64s8.74-3 8.74-6.64a5.23 5.23 0 0 0-.46-2.13A2.58 2.58 0 0 0 19 9.05zm-16.88 0a1.44 1.44 0 0 1 2.27-1.19 7.68 7.68 0 0 0-2.07 1.91 1.33 1.33 0 0 1-.2-.72zM10 18.4c-4.17 0-7.55-2.4-7.55-5.4S5.83 7.53 10 7.53 17.5 10 17.5 13s-3.38 5.4-7.5 5.4zm7.69-8.61a7.62 7.62 0 0 0-2.09-1.91 1.41 1.41 0 0 1 .84-.28 1.47 1.47 0 0 1 1.44 1.45 1.34 1.34 0 0 1-.21.72z\"/><path d=\"M6.69 12.58a1.39 1.39 0 1 1 1.39-1.39 1.38 1.38 0 0 1-1.38 1.39z\"/><path d=\"M14.26 11.2a1.39 1.39 0 1 1-1.39-1.39 1.39 1.39 0 0 1 1.39 1.39z\"/><path d=\"M13.09 14.88a.54.54 0 0 1-.09.77 5.3 5.3 0 0 1-3.26 1.19 5.61 5.61 0 0 1-3.4-1.22.55.55 0 1 1 .73-.83 4.09 4.09 0 0 0 5.25 0 .56.56 0 0 1 .77.09z\"/></svg>",
      "refresh": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5\"/><polyline fill=\"none\" stroke=\"#000\" points=\"9.9 2 12.79 4.89 9.79 7.9\"/></svg>",
      "reply": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z\"/></svg>",
      "rss": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"3.12\" cy=\"16.8\" r=\"1.85\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5\"/></svg>",
      "search": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9\" cy=\"9\" r=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M14,14 L18,18 L14,14 Z\"/></svg>",
      "server": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"3\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"7\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"16\" y=\"3\" width=\"1\" height=\"1\"/><rect x=\"16\" y=\"10\" width=\"1\" height=\"1\"/><circle fill=\"none\" stroke=\"#000\" cx=\"9.9\" cy=\"17.4\" r=\"1.4\"/><rect x=\"3\" y=\"10\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"10\" width=\"1\" height=\"2\"/><rect x=\"9.5\" y=\"14\" width=\"1\" height=\"2\"/><rect x=\"3\" y=\"17\" width=\"6\" height=\"1\"/><rect x=\"11\" y=\"17\" width=\"6\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"1.5\" width=\"17\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"8.5\" width=\"17\" height=\"5\"/></svg>",
      "settings": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><ellipse fill=\"none\" stroke=\"#000\" cx=\"6.11\" cy=\"3.55\" rx=\"2.11\" ry=\"2.15\"/><ellipse fill=\"none\" stroke=\"#000\" cx=\"6.11\" cy=\"15.55\" rx=\"2.11\" ry=\"2.15\"/><circle fill=\"none\" stroke=\"#000\" cx=\"13.15\" cy=\"9.55\" r=\"2.15\"/><rect x=\"1\" y=\"3\" width=\"3\" height=\"1\"/><rect x=\"10\" y=\"3\" width=\"8\" height=\"1\"/><rect x=\"1\" y=\"9\" width=\"8\" height=\"1\"/><rect x=\"15\" y=\"9\" width=\"3\" height=\"1\"/><rect x=\"1\" y=\"15\" width=\"3\" height=\"1\"/><rect x=\"10\" y=\"15\" width=\"8\" height=\"1\"/></svg>",
      "shrink": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"11 4 12 4 12 8 16 8 16 9 11 9\"/><polygon points=\"4 11 9 11 9 16 8 16 8 12 4 12\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M12,8 L18,2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M2,18 L8,12\"/></svg>",
      "sign-in": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3\"/><polygon points=\"9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5\"/></svg>",
      "sign-out": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5\"/><polygon points=\"13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3\"/></svg>",
      "social": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13.4\" y1=\"14\" x2=\"6.3\" y2=\"10.7\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13.5\" y1=\"5.5\" x2=\"6.5\" y2=\"8.8\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"15.5\" cy=\"4.6\" r=\"2.3\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"15.5\" cy=\"14.8\" r=\"2.3\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"4.5\" cy=\"9.8\" r=\"2.3\"/></svg>",
      "soundcloud": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z\"/><rect x=\"6\" y=\"6.5\" width=\"1.5\" height=\"8.5\"/><rect x=\"3\" y=\"8\" width=\"1.5\" height=\"7\"/><rect y=\"10\" width=\"1.5\" height=\"5\"/></svg>",
      "star": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27\"/></svg>",
      "strikethrough": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z\"/><rect x=\"3\" y=\"10\" width=\"15\" height=\"1\"/></svg>",
      "table": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"1\" y=\"3\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"7\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"11\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"15\" width=\"18\" height=\"1\"/></svg>",
      "tablet-landscape": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z\"/><circle cx=\"3.7\" cy=\"10.5\" r=\".8\"/></svg>",
      "tablet": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z\"/><circle cx=\"10.5\" cy=\"16.3\" r=\".8\"/></svg>",
      "tag": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z\"/><circle cx=\"14\" cy=\"6\" r=\"1\"/></svg>",
      "thumbnails": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"3.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"11.5\" y=\"3.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"11.5\" y=\"11.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"11.5\" width=\"5\" height=\"5\"/></svg>",
      "tiktok": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17.24,6V8.82a6.79,6.79,0,0,1-4-1.28v5.81A5.26,5.26,0,1,1,8,8.1a4.36,4.36,0,0,1,.72.05v2.9A2.57,2.57,0,0,0,7.64,11a2.4,2.4,0,1,0,2.77,2.38V2h2.86a4,4,0,0,0,1.84,3.38A4,4,0,0,0,17.24,6Z\"/></svg>",
      "trash": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"6.5 3 6.5 1.5 13.5 1.5 13.5 3\"/><polyline fill=\"none\" stroke=\"#000\" points=\"4.5 4 4.5 18.5 15.5 18.5 15.5 4\"/><rect x=\"8\" y=\"7\" width=\"1\" height=\"9\"/><rect x=\"11\" y=\"7\" width=\"1\" height=\"9\"/><rect x=\"2\" y=\"3\" width=\"16\" height=\"1\"/></svg>",
      "triangle-down": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"5 7 15 7 10 12\"/></svg>",
      "triangle-left": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"12 5 7 10 12 15\"/></svg>",
      "triangle-right": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"8 5 13 10 8 15\"/></svg>",
      "triangle-up": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"5 13 10 8 15 13\"/></svg>",
      "tripadvisor": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z\"/></svg>",
      "tumblr": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z\"/></svg>",
      "tv": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"7\" y=\"16\" width=\"6\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\".5\" y=\"3.5\" width=\"19\" height=\"11\"/></svg>",
      "twitch": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.23,1,2,4.23V15.85H5.88v3.23L9.1,15.85h2.59L17.5,10V1Zm11,8.4L13.62,12H11L8.78,14.24V12H5.88V2.29H16.21Z\"/><rect x=\"12.98\" y=\"4.55\" width=\"1.29\" height=\"3.88\"/><rect x=\"9.43\" y=\"4.55\" width=\"1.29\" height=\"3.88\"/></svg>",
      "twitter": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74\"/></svg>",
      "uikit": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3\"/><polygon points=\"9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3\"/></svg>",
      "unlock": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"8.5\" width=\"13\" height=\"10\"/><path fill=\"none\" stroke=\"#000\" d=\"M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9\"/></svg>",
      "upload": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#000\" points=\"5 8 9.5 3.5 14 8\"/><rect x=\"3\" y=\"17\" width=\"13\" height=\"1\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"15\" x2=\"9.5\" y2=\"4\"/></svg>",
      "user": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.9\" cy=\"6.4\" r=\"4.4\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2\"/></svg>",
      "users": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"7.7\" cy=\"8.6\" r=\"3.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1\"/></svg>",
      "video-camera": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><polygon fill=\"none\" stroke=\"#000\" points=\"17.5 6.9 17.5 13.1 13.5 10.4 13.5 14.5 2.5 14.5 2.5 5.5 13.5 5.5 13.5 9.6 17.5 6.9\"/></svg>",
      "vimeo": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z\"/></svg>",
      "warning": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"14\" r=\"1\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><path d=\"M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z\"/></svg>",
      "whatsapp": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9\"/></svg>",
      "wordpress": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z\"/></svg>",
      "world": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#000\" d=\"M1,10.5 L19,10.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M2.35,15.5 L17.65,15.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M2.35,5.5 L17.523,5.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10.5\" r=\"9\"/></svg>",
      "xing": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z\"/><path d=\"M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z\"/></svg>",
      "yelp": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z\"/></svg>",
      "youtube": "<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z\"/></svg>"
    });
  }

  if (typeof window !== 'undefined' && window.UIkit) {
    window.UIkit.use(plugin);
  }

  return plugin;
});

/***/ }),

/***/ "./node_modules/uikit/src/js/api/boot.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/api/boot.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component */ "./node_modules/uikit/src/js/api/component.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(UIkit) {
  const {
    connect,
    disconnect
  } = UIkit;

  if (!uikit_util__WEBPACK_IMPORTED_MODULE_0__.inBrowser || !window.MutationObserver) {
    return;
  }

  uikit_util__WEBPACK_IMPORTED_MODULE_1__.fastdom.read(function () {
    if (document.body) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.apply)(document.body, connect);
    }

    new MutationObserver(records => records.forEach(applyChildListMutation)).observe(document, {
      childList: true,
      subtree: true
    });
    new MutationObserver(records => records.forEach(applyAttributeMutation)).observe(document, {
      attributes: true,
      subtree: true
    });
    UIkit._initialized = true;
  });

  function applyChildListMutation(_ref) {
    let {
      addedNodes,
      removedNodes
    } = _ref;

    for (let i = 0; i < addedNodes.length; i++) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.apply)(addedNodes[i], connect);
    }

    for (let i = 0; i < removedNodes.length; i++) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.apply)(removedNodes[i], disconnect);
    }
  }

  function applyAttributeMutation(_ref2) {
    let {
      target,
      attributeName
    } = _ref2;
    const name = (0,_component__WEBPACK_IMPORTED_MODULE_3__.getComponentName)(attributeName);

    if (!name || !(name in UIkit)) {
      return;
    }

    if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasAttr)(target, attributeName)) {
      UIkit[name](target);
      return;
    }

    const component = UIkit.getComponent(target, name);

    if (component) {
      component.$destroy();
    }
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/api/component.js":
/*!****************************************************!*\
  !*** ./node_modules/uikit/src/js/api/component.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "getComponentName": () => (/* binding */ getComponentName)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(UIkit) {
  const DATA = UIkit.data;
  const components = {};

  UIkit.component = function (name, options) {
    const id = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hyphenate)(name);
    name = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.camelize)(id);

    if (!options) {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(components[name])) {
        components[name] = UIkit.extend(components[name]);
      }

      return components[name];
    }

    UIkit[name] = function (element, data) {
      const component = UIkit.component(name);
      return component.options.functional ? new component({
        data: (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(element) ? element : [...arguments]
      }) : !element ? init(element) : (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$$)(element).map(init)[0];

      function init(element) {
        const instance = UIkit.getComponent(element, name);

        if (instance) {
          if (data) {
            instance.$destroy();
          } else {
            return instance;
          }
        }

        return new component({
          el: element,
          data
        });
      }
    };

    const opt = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(options) ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.assign)({}, options) : options.options;
    opt.name = name;

    if (opt.install) {
      opt.install(UIkit, opt, name);
    }

    if (UIkit._initialized && !opt.functional) {
      uikit_util__WEBPACK_IMPORTED_MODULE_4__.fastdom.read(() => UIkit[name]("[uk-".concat(id, "],[data-uk-").concat(id, "]")));
    }

    return components[name] = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(options) ? opt : options;
  };

  UIkit.getComponents = element => element && element[DATA] || {};

  UIkit.getComponent = (element, name) => UIkit.getComponents(element)[name];

  UIkit.connect = node => {
    if (node[DATA]) {
      for (const name in node[DATA]) {
        node[DATA][name]._callConnected();
      }
    }

    for (let i = 0; i < node.attributes.length; i++) {
      const name = getComponentName(node.attributes[i].name);

      if (name && name in components) {
        UIkit[name](node);
      }
    }
  };

  UIkit.disconnect = node => {
    for (const name in node[DATA]) {
      node[DATA][name]._callDisconnected();
    }
  };
}
const getComponentName = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.memoize)(attribute => {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.startsWith)(attribute, 'uk-') || (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.startsWith)(attribute, 'data-uk-') ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.camelize)(attribute.replace('data-uk-', '').replace('uk-', '')) : false;
});

/***/ }),

/***/ "./node_modules/uikit/src/js/api/global.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/api/global.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/options.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(UIkit) {
  const DATA = UIkit.data;

  UIkit.use = function (plugin) {
    if (plugin.installed) {
      return;
    }

    plugin.call(null, this);
    plugin.installed = true;
    return this;
  };

  UIkit.mixin = function (mixin, component) {
    component = ((0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.isString)(component) ? UIkit.component(component) : component) || this;
    component.options = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.mergeOptions)(component.options, mixin);
  };

  UIkit.extend = function (options) {
    options = options || {};
    const Super = this;

    const Sub = function UIkitComponent(options) {
      this._init(options);
    };

    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.options = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.mergeOptions)(Super.options, options);
    Sub.super = Super;
    Sub.extend = Super.extend;
    return Sub;
  };

  UIkit.update = function (element, e) {
    element = element ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.toNode)(element) : document.body;
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parents)(element).reverse().forEach(element => update(element[DATA], e));
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.apply)(element, element => update(element[DATA], e));
  };

  let container;
  Object.defineProperty(UIkit, 'container', {
    get() {
      return container || document.body;
    },

    set(element) {
      container = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)(element);
    }

  });

  function update(data, e) {
    if (!data) {
      return;
    }

    for (const name in data) {
      if (data[name]._connected) {
        data[name]._callUpdate(e);
      }
    }
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/api/hooks.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/api/hooks.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(UIkit) {
  UIkit.prototype._callHook = function (hook) {
    const handlers = this.$options[hook];

    if (handlers) {
      handlers.forEach(handler => handler.call(this));
    }
  };

  UIkit.prototype._callConnected = function () {
    if (this._connected) {
      return;
    }

    this._data = {};
    this._computeds = {};

    this._initProps();

    this._callHook('beforeConnect');

    this._connected = true;

    this._initEvents();

    this._initObservers();

    this._callHook('connected');

    this._callUpdate();
  };

  UIkit.prototype._callDisconnected = function () {
    if (!this._connected) {
      return;
    }

    this._callHook('beforeDisconnect');

    this._disconnectObservers();

    this._unbindEvents();

    this._callHook('disconnected');

    this._connected = false;
    delete this._watch;
  };

  UIkit.prototype._callUpdate = function () {
    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'update';

    if (!this._connected) {
      return;
    }

    if (e === 'update' || e === 'resize') {
      this._callWatches();
    }

    if (!this.$options.update) {
      return;
    }

    if (!this._updates) {
      this._updates = new Set();
      uikit_util__WEBPACK_IMPORTED_MODULE_1__.fastdom.read(() => {
        if (this._connected) {
          runUpdates.call(this, this._updates);
        }

        delete this._updates;
      });
    }

    this._updates.add(e.type || e);
  };

  UIkit.prototype._callWatches = function () {
    if (this._watch) {
      return;
    }

    const initial = !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasOwn)(this, '_watch');
    this._watch = uikit_util__WEBPACK_IMPORTED_MODULE_1__.fastdom.read(() => {
      if (this._connected) {
        runWatches.call(this, initial);
      }

      this._watch = null;
    });
  };

  function runUpdates(types) {
    const updates = this.$options.update;

    for (let i = 0; i < updates.length; i++) {
      const {
        read,
        write,
        events
      } = updates[i];

      if (!types.has('update') && (!events || !events.some(type => types.has(type)))) {
        continue;
      }

      let result;

      if (read) {
        result = read.call(this, this._data, types);

        if (result && (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(result)) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.assign)(this._data, result);
        }
      }

      if (write && result !== false) {
        uikit_util__WEBPACK_IMPORTED_MODULE_1__.fastdom.write(() => write.call(this, this._data, types));
      }
    }
  }

  function runWatches(initial) {
    const {
      $options: {
        computed
      },
      _computeds
    } = this;

    for (const key in computed) {
      const hasPrev = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasOwn)(_computeds, key);
      const prev = _computeds[key];
      delete _computeds[key];
      const {
        watch,
        immediate
      } = computed[key];

      if (watch && (initial && immediate || hasPrev && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isEqual)(prev, this[key]))) {
        watch.call(this, this[key], prev);
      }
    }
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/api/index.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/api/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global */ "./node_modules/uikit/src/js/api/global.js");
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hooks */ "./node_modules/uikit/src/js/api/hooks.js");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./state */ "./node_modules/uikit/src/js/api/state.js");
/* harmony import */ var _instance__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./instance */ "./node_modules/uikit/src/js/api/instance.js");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./component */ "./node_modules/uikit/src/js/api/component.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/index.js");







const UIkit = function (options) {
  this._init(options);
};

UIkit.util = uikit_util__WEBPACK_IMPORTED_MODULE_0__;
UIkit.data = '__uikit__';
UIkit.prefix = 'uk-';
UIkit.options = {};
UIkit.version = "3.10.1";
(0,_global__WEBPACK_IMPORTED_MODULE_1__["default"])(UIkit);
(0,_hooks__WEBPACK_IMPORTED_MODULE_2__["default"])(UIkit);
(0,_state__WEBPACK_IMPORTED_MODULE_3__["default"])(UIkit);
(0,_component__WEBPACK_IMPORTED_MODULE_4__["default"])(UIkit);
(0,_instance__WEBPACK_IMPORTED_MODULE_5__["default"])(UIkit);
/* harmony default export */ __webpack_exports__["default"] = (UIkit);

/***/ }),

/***/ "./node_modules/uikit/src/js/api/instance.js":
/*!***************************************************!*\
  !*** ./node_modules/uikit/src/js/api/instance.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(UIkit) {
  const DATA = UIkit.data;

  UIkit.prototype.$create = function (component, element, data) {
    return UIkit[component](element, data);
  };

  UIkit.prototype.$mount = function (el) {
    const {
      name
    } = this.$options;

    if (!el[DATA]) {
      el[DATA] = {};
    }

    if (el[DATA][name]) {
      return;
    }

    el[DATA][name] = this;
    this.$el = this.$options.el = this.$options.el || el;

    if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.within)(el, document)) {
      this._callConnected();
    }
  };

  UIkit.prototype.$reset = function () {
    this._callDisconnected();

    this._callConnected();
  };

  UIkit.prototype.$destroy = function () {
    let removeEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    const {
      el,
      name
    } = this.$options;

    if (el) {
      this._callDisconnected();
    }

    this._callHook('destroy');

    if (!el || !el[DATA]) {
      return;
    }

    delete el[DATA][name];

    if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.isEmpty)(el[DATA])) {
      delete el[DATA];
    }

    if (removeEl) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.remove)(this.$el);
    }
  };

  UIkit.prototype.$emit = function (e) {
    this._callUpdate(e);
  };

  UIkit.prototype.$update = function () {
    let element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.$el;
    let e = arguments.length > 1 ? arguments[1] : undefined;
    UIkit.update(element, e);
  };

  UIkit.prototype.$getComponent = UIkit.getComponent;
  const componentName = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.memoize)(name => UIkit.prefix + (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(name));
  Object.defineProperties(UIkit.prototype, {
    $container: Object.getOwnPropertyDescriptor(UIkit, 'container'),
    $name: {
      get() {
        return componentName(this.$options.name);
      }

    }
  });
}

/***/ }),

/***/ "./node_modules/uikit/src/js/api/state.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/api/state.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/options.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(UIkit) {
  let uid = 0;

  UIkit.prototype._init = function (options) {
    options = options || {};
    options.data = normalizeData(options, this.constructor.options);
    this.$options = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.mergeOptions)(this.constructor.options, options, this);
    this.$el = null;
    this.$props = {};
    this._uid = uid++;

    this._initData();

    this._initMethods();

    this._initComputeds();

    this._callHook('created');

    if (options.el) {
      this.$mount(options.el);
    }
  };

  UIkit.prototype._initData = function () {
    const {
      data = {}
    } = this.$options;

    for (const key in data) {
      this.$props[key] = this[key] = data[key];
    }
  };

  UIkit.prototype._initMethods = function () {
    const {
      methods
    } = this.$options;

    if (methods) {
      for (const key in methods) {
        this[key] = methods[key].bind(this);
      }
    }
  };

  UIkit.prototype._initComputeds = function () {
    const {
      computed
    } = this.$options;
    this._computeds = {};

    if (computed) {
      for (const key in computed) {
        registerComputed(this, key, computed[key]);
      }
    }
  };

  UIkit.prototype._initProps = function (props) {
    let key;
    props = props || getProps(this.$options, this.$name);

    for (key in props) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(props[key])) {
        this.$props[key] = props[key];
      }
    }

    const exclude = [this.$options.computed, this.$options.methods];

    for (key in this.$props) {
      if (key in props && notIn(exclude, key)) {
        this[key] = this.$props[key];
      }
    }
  };

  UIkit.prototype._initEvents = function () {
    this._events = [];
    const {
      events
    } = this.$options;

    if (events) {
      events.forEach(event => {
        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasOwn)(event, 'handler')) {
          registerEvent(this, event);
        } else {
          for (const key in event) {
            registerEvent(this, event[key], key);
          }
        }
      });
    }
  };

  UIkit.prototype._unbindEvents = function () {
    this._events.forEach(unbind => unbind());

    delete this._events;
  };

  UIkit.prototype._initObservers = function () {
    this._observers = [initChildListObserver(this), initPropsObserver(this)];
  };

  UIkit.prototype._disconnectObservers = function () {
    this._observers.forEach(observer => observer && observer.disconnect());
  };

  function getProps(opts, name) {
    const data = {};
    const {
      args = [],
      props = {},
      el
    } = opts;

    if (!props) {
      return data;
    }

    for (const key in props) {
      const prop = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hyphenate)(key);
      let value = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.data)(el, prop);

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(value)) {
        continue;
      }

      value = props[key] === Boolean && value === '' ? true : coerce(props[key], value);

      if (prop === 'target' && (!value || (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.startsWith)(value, '_'))) {
        continue;
      }

      data[key] = value;
    }

    const options = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.parseOptions)((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.data)(el, name), args);

    for (const key in options) {
      const prop = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.camelize)(key);

      if (props[prop] !== undefined) {
        data[prop] = coerce(props[prop], options[key]);
      }
    }

    return data;
  }

  function registerComputed(component, key, cb) {
    Object.defineProperty(component, key, {
      enumerable: true,

      get() {
        const {
          _computeds,
          $props,
          $el
        } = component;

        if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasOwn)(_computeds, key)) {
          _computeds[key] = (cb.get || cb).call(component, $props, $el);
        }

        return _computeds[key];
      },

      set(value) {
        const {
          _computeds
        } = component;
        _computeds[key] = cb.set ? cb.set.call(component, value) : value;

        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(_computeds[key])) {
          delete _computeds[key];
        }
      }

    });
  }

  function registerEvent(component, event, key) {
    if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(event)) {
      event = {
        name: key,
        handler: event
      };
    }

    let {
      name,
      el,
      handler,
      capture,
      passive,
      delegate,
      filter,
      self
    } = event;
    el = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isFunction)(el) ? el.call(component) : el || component.$el;

    if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isArray)(el)) {
      el.forEach(el => registerEvent(component, (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.assign)({}, event, {
        el
      }), key));
      return;
    }

    if (!el || filter && !filter.call(component)) {
      return;
    }

    component._events.push((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.on)(el, name, !delegate ? null : (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isString)(delegate) ? delegate : delegate.call(component), (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isString)(handler) ? component[handler] : handler.bind(component), {
      passive,
      capture,
      self
    }));
  }

  function notIn(options, key) {
    return options.every(arr => !arr || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasOwn)(arr, key));
  }

  function coerce(type, value) {
    if (type === Boolean) {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(value);
    } else if (type === Number) {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);
    } else if (type === 'list') {
      return toList(value);
    }

    return type ? type(value) : value;
  }

  function toList(value) {
    return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isArray)(value) ? value : (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isString)(value) ? value.split(/,(?![^(]*\))/).map(value => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(value) ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value) : (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toBoolean)(value.trim())) : [value];
  }

  function normalizeData(_ref, _ref2) {
    let {
      data
    } = _ref;
    let {
      args,
      props = {}
    } = _ref2;
    data = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isArray)(data) ? !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isEmpty)(args) ? data.slice(0, args.length).reduce((data, value, index) => {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(value)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.assign)(data, value);
      } else {
        data[args[index]] = value;
      }

      return data;
    }, {}) : undefined : data;

    if (data) {
      for (const key in data) {
        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data[key])) {
          delete data[key];
        } else {
          data[key] = props[key] ? coerce(props[key], data[key]) : data[key];
        }
      }
    }

    return data;
  }

  function initChildListObserver(component) {
    const {
      el
    } = component.$options;
    const observer = new MutationObserver(() => component.$emit());
    observer.observe(el, {
      childList: true,
      subtree: true
    });
    return observer;
  }

  function initPropsObserver(component) {
    const {
      $name,
      $options,
      $props
    } = component;
    const {
      attrs,
      props,
      el
    } = $options;

    if (!props || attrs === false) {
      return;
    }

    const attributes = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isArray)(attrs) ? attrs : Object.keys(props);
    const filter = attributes.map(key => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hyphenate)(key)).concat($name);
    const observer = new MutationObserver(records => {
      const data = getProps($options, $name);

      if (records.some(_ref3 => {
        let {
          attributeName
        } = _ref3;
        const prop = attributeName.replace('data-', '');
        return (prop === $name ? attributes : [(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.camelize)(prop), (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.camelize)(attributeName)]).some(prop => !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data[prop]) && data[prop] !== $props[prop]);
      })) {
        component.$reset();
      }
    });
    observer.observe(el, {
      attributes: true,
      attributeFilter: filter.concat(filter.map(key => "data-".concat(key)))
    });
    return observer;
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/countdown.js":
/*!***********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/countdown.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_1__["default"]],
  props: {
    date: String,
    clsWrapper: String
  },
  data: {
    date: '',
    clsWrapper: '.uk-countdown-%unit%'
  },
  computed: {
    date(_ref) {
      let {
        date
      } = _ref;
      return Date.parse(date);
    },

    days(_ref2, $el) {
      let {
        clsWrapper
      } = _ref2;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(clsWrapper.replace('%unit%', 'days'), $el);
    },

    hours(_ref3, $el) {
      let {
        clsWrapper
      } = _ref3;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(clsWrapper.replace('%unit%', 'hours'), $el);
    },

    minutes(_ref4, $el) {
      let {
        clsWrapper
      } = _ref4;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(clsWrapper.replace('%unit%', 'minutes'), $el);
    },

    seconds(_ref5, $el) {
      let {
        clsWrapper
      } = _ref5;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(clsWrapper.replace('%unit%', 'seconds'), $el);
    },

    units() {
      return ['days', 'hours', 'minutes', 'seconds'].filter(unit => this[unit]);
    }

  },

  connected() {
    this.start();
  },

  disconnected() {
    this.stop();
    this.units.forEach(unit => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.empty)(this[unit]));
  },

  events: [{
    name: 'visibilitychange',

    el() {
      return document;
    },

    handler() {
      if (document.hidden) {
        this.stop();
      } else {
        this.start();
      }
    }

  }],
  update: {
    write() {
      const timespan = getTimeSpan(this.date);

      if (timespan.total <= 0) {
        this.stop();
        timespan.days = timespan.hours = timespan.minutes = timespan.seconds = 0;
      }

      this.units.forEach(unit => {
        let digits = String(Math.floor(timespan[unit]));
        digits = digits.length < 2 ? "0".concat(digits) : digits;
        const el = this[unit];

        if (el.textContent !== digits) {
          digits = digits.split('');

          if (digits.length !== el.children.length) {
            (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.html)(el, digits.map(() => '<span></span>').join(''));
          }

          digits.forEach((digit, i) => el.children[i].textContent = digit);
        }
      });
    }

  },
  methods: {
    start() {
      this.stop();

      if (this.date && this.units.length) {
        this.$update();
        this.timer = setInterval(this.$update, 1000);
      }
    },

    stop() {
      if (this.timer) {
        clearInterval(this.timer);
        this.timer = null;
      }
    }

  }
});

function getTimeSpan(date) {
  const total = date - Date.now();
  return {
    total,
    seconds: total / 1000 % 60,
    minutes: total / 1000 / 60 % 60,
    hours: total / 1000 / 60 / 60 % 24,
    days: total / 1000 / 60 / 60 / 24
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/filter.js":
/*!********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/filter.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mixin_animate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/animate */ "./node_modules/uikit/src/js/mixin/animate.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/options.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_animate__WEBPACK_IMPORTED_MODULE_1__["default"]],
  args: 'target',
  props: {
    target: Boolean,
    selActive: Boolean
  },
  data: {
    target: null,
    selActive: false,
    attrItem: 'uk-filter-control',
    cls: 'uk-active',
    duration: 250
  },
  computed: {
    toggles: {
      get(_ref, $el) {
        let {
          attrItem
        } = _ref;
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$$)("[".concat(attrItem, "],[data-").concat(attrItem, "]"), $el);
      },

      watch() {
        this.updateState();

        if (this.selActive !== false) {
          const actives = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$$)(this.selActive, this.$el);
          this.toggles.forEach(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(el, this.cls, (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.includes)(actives, el)));
        }
      },

      immediate: true
    },
    children: {
      get(_ref2, $el) {
        let {
          target
        } = _ref2;
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$$)("".concat(target, " > *"), $el);
      },

      watch(list, old) {
        if (old && !isEqualList(list, old)) {
          this.updateState();
        }
      },

      immediate: true
    }
  },
  events: [{
    name: 'click',

    delegate() {
      return "[".concat(this.attrItem, "],[data-").concat(this.attrItem, "]");
    },

    handler(e) {
      e.preventDefault();
      this.apply(e.current);
    }

  }],
  methods: {
    apply(el) {
      const prevState = this.getState();
      const newState = mergeState(el, this.attrItem, this.getState());

      if (!isEqualState(prevState, newState)) {
        this.setState(newState);
      }
    },

    getState() {
      return this.toggles.filter(item => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.hasClass)(item, this.cls)).reduce((state, el) => mergeState(el, this.attrItem, state), {
        filter: {
          '': ''
        },
        sort: []
      });
    },

    setState(state) {
      let animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      state = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.assign)({
        filter: {
          '': ''
        },
        sort: []
      }, state);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(this.$el, 'beforeFilter', [this, state]);
      this.toggles.forEach(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(el, this.cls, !!matchFilter(el, this.attrItem, state)));
      uikit_util__WEBPACK_IMPORTED_MODULE_6__.Promise.all((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$$)(this.target, this.$el).map(target => {
        const filterFn = () => {
          applyState(state, target, (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(target));
          this.$update(this.$el);
        };

        return animate ? this.animate(filterFn, target) : filterFn();
      })).then(() => (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(this.$el, 'afterFilter', [this]));
    },

    updateState() {
      uikit_util__WEBPACK_IMPORTED_MODULE_8__.fastdom.write(() => this.setState(this.getState(), false));
    }

  }
});

function getFilter(el, attr) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.parseOptions)((0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.data)(el, attr), ['filter']);
}

function isEqualState(stateA, stateB) {
  return ['filter', 'sort'].every(prop => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isEqual)(stateA[prop], stateB[prop]));
}

function applyState(state, target, children) {
  const selector = getSelector(state);
  children.forEach(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.css)(el, 'display', selector && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.matches)(el, selector) ? 'none' : ''));
  const [sort, order] = state.sort;

  if (sort) {
    const sorted = sortItems(children, sort, order);

    if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isEqual)(sorted, children)) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.append)(target, sorted);
    }
  }
}

function mergeState(el, attr, state) {
  const filterBy = getFilter(el, attr);
  const {
    filter,
    group,
    sort,
    order = 'asc'
  } = filterBy;

  if (filter || (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(sort)) {
    if (group) {
      if (filter) {
        delete state.filter[''];
        state.filter[group] = filter;
      } else {
        delete state.filter[group];

        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isEmpty)(state.filter) || '' in state.filter) {
          state.filter = {
            '': filter || ''
          };
        }
      }
    } else {
      state.filter = {
        '': filter || ''
      };
    }
  }

  if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(sort)) {
    state.sort = [sort, order];
  }

  return state;
}

function matchFilter(el, attr, _ref3) {
  let {
    filter: stateFilter = {
      '': ''
    },
    sort: [stateSort, stateOrder]
  } = _ref3;
  const {
    filter = '',
    group = '',
    sort,
    order = 'asc'
  } = getFilter(el, attr);
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(sort) ? group in stateFilter && filter === stateFilter[group] || !filter && group && !(group in stateFilter) && !stateFilter[''] : stateSort === sort && stateOrder === order;
}

function isEqualList(listA, listB) {
  return listA.length === listB.length && listA.every(el => ~listB.indexOf(el));
}

function getSelector(_ref4) {
  let {
    filter
  } = _ref4;
  let selector = '';
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.each)(filter, value => selector += value || '');
  return selector;
}

function sortItems(nodes, sort, order) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.assign)([], nodes).sort((a, b) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.data)(a, sort).localeCompare((0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.data)(b, sort), undefined, {
    numeric: true
  }) * (order === 'asc' || -1));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/internal/lightbox-animations.js":
/*!******************************************************************************!*\
  !*** ./node_modules/uikit/src/js/components/internal/lightbox-animations.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../mixin/internal/slideshow-animations */ "./node_modules/uikit/src/js/mixin/internal/slideshow-animations.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");


/* harmony default export */ __webpack_exports__["default"] = ((0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.assign)({}, _mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__["default"], {
  fade: {
    show() {
      return [{
        opacity: 0
      }, {
        opacity: 1
      }];
    },

    percent(current) {
      return 1 - (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(current, 'opacity');
    },

    translate(percent) {
      return [{
        opacity: 1 - percent
      }, {
        opacity: percent
      }];
    }

  },
  scale: {
    show() {
      return [{
        opacity: 0,
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.scale3d)(1 - .2)
      }, {
        opacity: 1,
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.scale3d)(1)
      }];
    },

    percent(current) {
      return 1 - (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(current, 'opacity');
    },

    translate(percent) {
      return [{
        opacity: 1 - percent,
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.scale3d)(1 - .2 * percent)
      }, {
        opacity: percent,
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.scale3d)(1 - .2 + .2 * percent)
      }];
    }

  }
}));

/***/ }),

/***/ "./node_modules/uikit/src/js/components/internal/slider-transitioner.js":
/*!******************************************************************************!*\
  !*** ./node_modules/uikit/src/js/components/internal/slider-transitioner.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "getMax": () => (/* binding */ getMax),
/* harmony export */   "getWidth": () => (/* binding */ getWidth),
/* harmony export */   "getElLeft": () => (/* binding */ getElLeft)
/* harmony export */ });
/* harmony import */ var _mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixin/internal/slideshow-animations */ "./node_modules/uikit/src/js/mixin/internal/slideshow-animations.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(prev, next, dir, _ref) {
  let {
    center,
    easing,
    list
  } = _ref;
  const deferred = new uikit_util__WEBPACK_IMPORTED_MODULE_0__.Deferred();
  const from = prev ? getLeft(prev, list, center) : getLeft(next, list, center) + (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(next).width * dir;
  const to = next ? getLeft(next, list, center) : from + (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(prev).width * dir * (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? -1 : 1);
  return {
    dir,

    show(duration) {
      let percent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      let linear = arguments.length > 2 ? arguments[2] : undefined;
      const timing = linear ? 'linear' : easing;
      duration -= Math.round(duration * (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.clamp)(percent, -1, 1));
      this.translate(percent);
      percent = prev ? percent : (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.clamp)(percent, 0, 1);
      triggerUpdate(this.getItemIn(), 'itemin', {
        percent,
        duration,
        timing,
        dir
      });
      prev && triggerUpdate(this.getItemIn(true), 'itemout', {
        percent: 1 - percent,
        duration,
        timing,
        dir
      });
      uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.start(list, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_5__.translate)(-to * (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? -1 : 1), 'px')
      }, duration, timing).then(deferred.resolve, uikit_util__WEBPACK_IMPORTED_MODULE_3__.noop);
      return deferred.promise;
    },

    cancel() {
      uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.cancel(list);
    },

    reset() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(list, 'transform', '');
    },

    forward(duration) {
      let percent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.percent();
      uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.cancel(list);
      return this.show(duration, percent, true);
    },

    translate(percent) {
      const distance = this.getDistance() * dir * (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? -1 : 1);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(list, 'transform', (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_5__.translate)((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.clamp)(-to + (distance - distance * percent), -getWidth(list), (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(list).width) * (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? -1 : 1), 'px'));
      const actives = this.getActives();
      const itemIn = this.getItemIn();
      const itemOut = this.getItemIn(true);
      percent = prev ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.clamp)(percent, -1, 1) : 0;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(list).forEach(slide => {
        const isActive = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.includes)(actives, slide);
        const isIn = slide === itemIn;
        const isOut = slide === itemOut;
        const translateIn = isIn || !isOut && (isActive || dir * (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? -1 : 1) === -1 ^ getElLeft(slide, list) > getElLeft(prev || next));
        triggerUpdate(slide, "itemtranslate".concat(translateIn ? 'in' : 'out'), {
          dir,
          percent: isOut ? 1 - percent : isIn ? percent : isActive ? 1 : 0
        });
      });
    },

    percent() {
      return Math.abs(((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(list, 'transform').split(',')[4] * (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? -1 : 1) + from) / (to - from));
    },

    getDistance() {
      return Math.abs(to - from);
    },

    getItemIn() {
      let out = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      let actives = this.getActives();
      let nextActives = inView(list, getLeft(next || prev, list, center));

      if (out) {
        const temp = actives;
        actives = nextActives;
        nextActives = temp;
      }

      return nextActives[(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.findIndex)(nextActives, el => !(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.includes)(actives, el))];
    },

    getActives() {
      return inView(list, getLeft(prev || next, list, center));
    }

  };
}

function getLeft(el, list, center) {
  const left = getElLeft(el, list);
  return center ? left - centerEl(el, list) : Math.min(left, getMax(list));
}

function getMax(list) {
  return Math.max(0, getWidth(list) - (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(list).width);
}
function getWidth(list) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(list).reduce((right, el) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(el).width + right, 0);
}

function centerEl(el, list) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(list).width / 2 - (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(el).width / 2;
}

function getElLeft(el, list) {
  return el && ((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.position)(el).left + (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(el).width - (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(list).width : 0)) * (uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? -1 : 1) || 0;
}

function inView(list, listLeft) {
  listLeft -= 1;
  const listWidth = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(list).width;
  const listRight = listLeft + listWidth + 2;
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(list).filter(slide => {
    const slideLeft = getElLeft(slide, list);
    const slideRight = slideLeft + Math.min((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.dimensions)(slide).width, listWidth);
    return slideLeft >= listLeft && slideRight <= listRight;
  });
}

function triggerUpdate(el, type, data) {
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.trigger)(el, (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.createEvent)(type, false, false, data));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/internal/slideshow-animations.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/uikit/src/js/components/internal/slideshow-animations.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../mixin/internal/slideshow-animations */ "./node_modules/uikit/src/js/mixin/internal/slideshow-animations.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");


/* harmony default export */ __webpack_exports__["default"] = ((0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.assign)({}, _mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__["default"], {
  fade: {
    show() {
      return [{
        opacity: 0,
        zIndex: 0
      }, {
        zIndex: -1
      }];
    },

    percent(current) {
      return 1 - (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(current, 'opacity');
    },

    translate(percent) {
      return [{
        opacity: 1 - percent,
        zIndex: 0
      }, {
        zIndex: -1
      }];
    }

  },
  scale: {
    show() {
      return [{
        opacity: 0,
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.scale3d)(1 + .5),
        zIndex: 0
      }, {
        zIndex: -1
      }];
    },

    percent(current) {
      return 1 - (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(current, 'opacity');
    },

    translate(percent) {
      return [{
        opacity: 1 - percent,
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.scale3d)(1 + .5 * percent),
        zIndex: 0
      }, {
        zIndex: -1
      }];
    }

  },
  pull: {
    show(dir) {
      return dir < 0 ? [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(30),
        zIndex: -1
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(),
        zIndex: 0
      }] : [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(-100),
        zIndex: 0
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(),
        zIndex: -1
      }];
    },

    percent(current, next, dir) {
      return dir < 0 ? 1 - (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translated)(next) : (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translated)(current);
    },

    translate(percent, dir) {
      return dir < 0 ? [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(30 * percent),
        zIndex: -1
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(-100 * (1 - percent)),
        zIndex: 0
      }] : [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(-percent * 100),
        zIndex: 0
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(30 * (1 - percent)),
        zIndex: -1
      }];
    }

  },
  push: {
    show(dir) {
      return dir < 0 ? [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(100),
        zIndex: 0
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(),
        zIndex: -1
      }] : [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(-30),
        zIndex: -1
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(),
        zIndex: 0
      }];
    },

    percent(current, next, dir) {
      return dir > 0 ? 1 - (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translated)(next) : (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translated)(current);
    },

    translate(percent, dir) {
      return dir < 0 ? [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(percent * 100),
        zIndex: 0
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(-30 * (1 - percent)),
        zIndex: -1
      }] : [{
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(-30 * percent),
        zIndex: -1
      }, {
        transform: (0,_mixin_internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__.translate)(100 * (1 - percent)),
        zIndex: 0
      }];
    }

  }
}));

/***/ }),

/***/ "./node_modules/uikit/src/js/components/lightbox-panel.js":
/*!****************************************************************!*\
  !*** ./node_modules/uikit/src/js/components/lightbox-panel.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_lightbox_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/lightbox-animations */ "./node_modules/uikit/src/js/components/internal/lightbox-animations.js");
/* harmony import */ var _mixin_container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/container */ "./node_modules/uikit/src/js/mixin/container.js");
/* harmony import */ var _mixin_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/modal */ "./node_modules/uikit/src/js/mixin/modal.js");
/* harmony import */ var _mixin_slideshow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mixin/slideshow */ "./node_modules/uikit/src/js/mixin/slideshow.js");
/* harmony import */ var _mixin_togglable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/ajax.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");






/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_container__WEBPACK_IMPORTED_MODULE_0__["default"], _mixin_modal__WEBPACK_IMPORTED_MODULE_1__["default"], _mixin_togglable__WEBPACK_IMPORTED_MODULE_2__["default"], _mixin_slideshow__WEBPACK_IMPORTED_MODULE_3__["default"]],
  functional: true,
  props: {
    delayControls: Number,
    preload: Number,
    videoAutoplay: Boolean,
    template: String
  },
  data: () => ({
    preload: 1,
    videoAutoplay: false,
    delayControls: 3000,
    items: [],
    cls: 'uk-open',
    clsPage: 'uk-lightbox-page',
    selList: '.uk-lightbox-items',
    attrItem: 'uk-lightbox-item',
    selClose: '.uk-close-large',
    selCaption: '.uk-lightbox-caption',
    pauseOnHover: false,
    velocity: 2,
    Animations: _internal_lightbox_animations__WEBPACK_IMPORTED_MODULE_4__["default"],
    template: "<div class=\"uk-lightbox uk-overflow-hidden\">\n                        <ul class=\"uk-lightbox-items\"></ul>\n                        <div class=\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\">\n                            <button class=\"uk-lightbox-toolbar-icon uk-close-large\" type=\"button\" uk-close></button>\n                         </div>\n                        <a class=\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\" href uk-slidenav-previous uk-lightbox-item=\"previous\"></a>\n                        <a class=\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\" href uk-slidenav-next uk-lightbox-item=\"next\"></a>\n                        <div class=\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\"></div>\n                    </div>"
  }),

  created() {
    const $el = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.$)(this.template);
    const list = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.$)(this.selList, $el);
    this.items.forEach(() => (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.append)(list, '<li>'));
    this.$mount((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.append)(this.container, $el));
  },

  computed: {
    caption(_ref, $el) {
      let {
        selCaption
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.$)(selCaption, $el);
    }

  },
  events: [{
    name: "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerMove, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerDown, " keydown"),
    handler: 'showControls'
  }, {
    name: 'click',
    self: true,

    delegate() {
      return this.selSlides;
    },

    handler(e) {
      if (e.defaultPrevented) {
        return;
      }

      this.hide();
    }

  }, {
    name: 'shown',
    self: true,

    handler() {
      this.showControls();
    }

  }, {
    name: 'hide',
    self: true,

    handler() {
      this.hideControls();
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.removeClass)(this.slides, this.clsActive);
      uikit_util__WEBPACK_IMPORTED_MODULE_8__.Transition.stop(this.slides);
    }

  }, {
    name: 'hidden',
    self: true,

    handler() {
      this.$destroy(true);
    }

  }, {
    name: 'keyup',

    el() {
      return document;
    },

    handler(e) {
      if (!this.isToggled(this.$el) || !this.draggable) {
        return;
      }

      switch (e.keyCode) {
        case 37:
          this.show('previous');
          break;

        case 39:
          this.show('next');
          break;
      }
    }

  }, {
    name: 'beforeitemshow',

    handler(e) {
      if (this.isToggled()) {
        return;
      }

      this.draggable = false;
      e.preventDefault();
      this.toggleElement(this.$el, true, false);
      this.animation = _internal_lightbox_animations__WEBPACK_IMPORTED_MODULE_4__["default"].scale;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.removeClass)(e.target, this.clsActive);
      this.stack.splice(1, 0, this.index);
    }

  }, {
    name: 'itemshow',

    handler() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.html)(this.caption, this.getItem().caption || '');

      for (let j = -this.preload; j <= this.preload; j++) {
        this.loadItem(this.index + j);
      }
    }

  }, {
    name: 'itemshown',

    handler() {
      this.draggable = this.$props.draggable;
    }

  }, {
    name: 'itemload',

    handler(_, item) {
      const {
        source: src,
        type,
        alt = '',
        poster,
        attrs = {}
      } = item;
      this.setItem(item, '<span uk-spinner></span>');

      if (!src) {
        return;
      }

      let matches;
      const iframeAttrs = {
        frameborder: '0',
        allow: 'autoplay',
        allowfullscreen: '',
        style: 'max-width: 100%; box-sizing: border-box;',
        'uk-responsive': '',
        'uk-video': "".concat(this.videoAutoplay)
      }; // Image

      if (type === 'image' || src.match(/\.(avif|jpe?g|a?png|gif|svg|webp)($|\?)/i)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.getImage)(src, attrs.srcset, attrs.size).then(_ref2 => {
          let {
            width,
            height
          } = _ref2;
          return this.setItem(item, createEl('img', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.assign)({
            src,
            width,
            height,
            alt
          }, attrs)));
        }, () => this.setError(item)); // Video
      } else if (type === 'video' || src.match(/\.(mp4|webm|ogv)($|\?)/i)) {
        const video = createEl('video', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.assign)({
          src,
          poster,
          controls: '',
          playsinline: '',
          'uk-video': "".concat(this.videoAutoplay)
        }, attrs));
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.on)(video, 'loadedmetadata', () => {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.attr)(video, {
            width: video.videoWidth,
            height: video.videoHeight
          });
          this.setItem(item, video);
        });
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.on)(video, 'error', () => this.setError(item)); // Iframe
      } else if (type === 'iframe' || src.match(/\.(html|php)($|\?)/i)) {
        this.setItem(item, createEl('iframe', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.assign)({
          src,
          frameborder: '0',
          allowfullscreen: '',
          class: 'uk-lightbox-iframe'
        }, attrs))); // YouTube
      } else if (matches = src.match(/\/\/(?:.*?youtube(-nocookie)?\..*?[?&]v=|youtu\.be\/)([\w-]{11})[&?]?(.*)?/)) {
        this.setItem(item, createEl('iframe', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.assign)({
          src: "https://www.youtube".concat(matches[1] || '', ".com/embed/").concat(matches[2]).concat(matches[3] ? "?".concat(matches[3]) : ''),
          width: 1920,
          height: 1080
        }, iframeAttrs, attrs))); // Vimeo
      } else if (matches = src.match(/\/\/.*?vimeo\.[a-z]+\/(\d+)[&?]?(.*)?/)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.ajax)("https://vimeo.com/api/oembed.json?maxwidth=1920&url=".concat(encodeURI(src)), {
          responseType: 'json',
          withCredentials: false
        }).then(_ref3 => {
          let {
            response: {
              height,
              width
            }
          } = _ref3;
          return this.setItem(item, createEl('iframe', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.assign)({
            src: "https://player.vimeo.com/video/".concat(matches[1]).concat(matches[2] ? "?".concat(matches[2]) : ''),
            width,
            height
          }, iframeAttrs, attrs)));
        }, () => this.setError(item));
      }
    }

  }],
  methods: {
    loadItem() {
      let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;
      const item = this.getItem(index);

      if (!this.getSlide(item).childElementCount) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.trigger)(this.$el, 'itemload', [item]);
      }
    },

    getItem() {
      let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;
      return this.items[(0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.getIndex)(index, this.slides)];
    },

    setItem(item, content) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.trigger)(this.$el, 'itemloaded', [this, (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.html)(this.getSlide(item), content)]);
    },

    getSlide(item) {
      return this.slides[this.items.indexOf(item)];
    },

    setError(item) {
      this.setItem(item, '<span uk-icon="icon: bolt; ratio: 2"></span>');
    },

    showControls() {
      clearTimeout(this.controlsTimer);
      this.controlsTimer = setTimeout(this.hideControls, this.delayControls);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.addClass)(this.$el, 'uk-active', 'uk-transition-active');
    },

    hideControls() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.removeClass)(this.$el, 'uk-active', 'uk-transition-active');
    }

  }
});

function createEl(tag, attrs) {
  const el = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.fragment)("<".concat(tag, ">"));
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.attr)(el, attrs);
  return el;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/lightbox.js":
/*!**********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/lightbox.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lightbox_panel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lightbox-panel */ "./node_modules/uikit/src/js/components/lightbox-panel.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/options.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  install,
  props: {
    toggle: String
  },
  data: {
    toggle: 'a'
  },
  computed: {
    toggles: {
      get(_ref, $el) {
        let {
          toggle
        } = _ref;
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.$$)(toggle, $el);
      },

      watch() {
        this.hide();
      }

    }
  },

  disconnected() {
    this.hide();
  },

  events: [{
    name: 'click',

    delegate() {
      return "".concat(this.toggle, ":not(.uk-disabled)");
    },

    handler(e) {
      e.preventDefault();
      this.show(e.current);
    }

  }],
  methods: {
    show(index) {
      const items = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.uniqueBy)(this.toggles.map(toItem), 'source');

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.isElement)(index)) {
        const {
          source
        } = toItem(index);
        index = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.findIndex)(items, _ref2 => {
          let {
            source: src
          } = _ref2;
          return source === src;
        });
      }

      this.panel = this.panel || this.$create('lightboxPanel', (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.assign)({}, this.$props, {
        items
      }));
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.on)(this.panel.$el, 'hidden', () => this.panel = false);
      return this.panel.show(index);
    },

    hide() {
      return this.panel && this.panel.hide();
    }

  }
});

function install(UIkit, Lightbox) {
  if (!UIkit.lightboxPanel) {
    UIkit.component('lightboxPanel', _lightbox_panel__WEBPACK_IMPORTED_MODULE_3__["default"]);
  }

  (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.assign)(Lightbox.props, UIkit.component('lightboxPanel').options.props);
}

function toItem(el) {
  const item = {};
  ['href', 'caption', 'type', 'poster', 'alt', 'attrs'].forEach(attr => {
    item[attr === 'href' ? 'source' : attr] = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.data)(el, attr);
  });
  item.attrs = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.parseOptions)(item.attrs);
  return item;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/notification.js":
/*!**************************************************************!*\
  !*** ./node_modules/uikit/src/js/components/notification.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/container */ "./node_modules/uikit/src/js/mixin/container.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_container__WEBPACK_IMPORTED_MODULE_0__["default"]],
  functional: true,
  args: ['message', 'status'],
  data: {
    message: '',
    status: '',
    timeout: 5000,
    group: null,
    pos: 'top-center',
    clsContainer: 'uk-notification',
    clsClose: 'uk-notification-close',
    clsMsg: 'uk-notification-message'
  },
  install,
  computed: {
    marginProp(_ref) {
      let {
        pos
      } = _ref;
      return "margin".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.startsWith)(pos, 'top') ? 'Top' : 'Bottom');
    },

    startProps() {
      return {
        opacity: 0,
        [this.marginProp]: -this.$el.offsetHeight
      };
    }

  },

  created() {
    const container = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(".".concat(this.clsContainer, "-").concat(this.pos), this.container) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.append)(this.container, "<div class=\"".concat(this.clsContainer, " ").concat(this.clsContainer, "-").concat(this.pos, "\" style=\"display: block\"></div>"));
    this.$mount((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.append)(container, "<div class=\"".concat(this.clsMsg).concat(this.status ? " ".concat(this.clsMsg, "-").concat(this.status) : '', "\">\n                <a href class=\"").concat(this.clsClose, "\" data-uk-close></a>\n                <div>").concat(this.message, "</div>\n            </div>")));
  },

  connected() {
    const margin = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.$el, this.marginProp));
    uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.start((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.$el, this.startProps), {
      opacity: 1,
      [this.marginProp]: margin
    }).then(() => {
      if (this.timeout) {
        this.timer = setTimeout(this.close, this.timeout);
      }
    });
  },

  events: {
    click(e) {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.closest)(e.target, 'a[href="#"],a[href=""]')) {
        e.preventDefault();
      }

      this.close();
    },

    [uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerEnter]() {
      if (this.timer) {
        clearTimeout(this.timer);
      }
    },

    [uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerLeave]() {
      if (this.timeout) {
        this.timer = setTimeout(this.close, this.timeout);
      }
    }

  },
  methods: {
    close(immediate) {
      const removeFn = el => {
        const container = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.parent)(el);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(el, 'close', [this]);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.remove)(el);

        if (container && !container.hasChildNodes()) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.remove)(container);
        }
      };

      if (this.timer) {
        clearTimeout(this.timer);
      }

      if (immediate) {
        removeFn(this.$el);
      } else {
        uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.start(this.$el, this.startProps).then(removeFn);
      }
    }

  }
});

function install(UIkit) {
  UIkit.notification.closeAll = function (group, immediate) {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.apply)(document.body, el => {
      const notification = UIkit.getComponent(el, 'notification');

      if (notification && (!group || group === notification.group)) {
        notification.close(immediate);
      }
    });
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/parallax.js":
/*!**********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/parallax.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_parallax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/parallax */ "./node_modules/uikit/src/js/mixin/parallax.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_parallax__WEBPACK_IMPORTED_MODULE_0__["default"]],
  props: {
    target: String,
    viewport: Number,
    easing: Number
  },
  data: {
    target: false,
    viewport: 1,
    easing: 1
  },
  computed: {
    target(_ref, $el) {
      let {
        target
      } = _ref;
      return getOffsetElement(target && (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.query)(target, $el) || $el);
    }

  },
  update: {
    read(_ref2, types) {
      let {
        percent
      } = _ref2;

      if (!types.has('scroll')) {
        percent = false;
      }

      if (!this.matchMedia) {
        return;
      }

      const prev = percent;
      percent = ease((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.scrolledOver)(this.target) / (this.viewport || 1), this.easing);
      return {
        percent,
        style: prev !== percent ? this.getCss(percent) : false
      };
    },

    write(_ref3) {
      let {
        style
      } = _ref3;

      if (!this.matchMedia) {
        this.reset();
        return;
      }

      style && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.$el, style);
    },

    events: ['scroll', 'resize']
  }
});

function ease(percent, easing) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.clamp)(percent * (1 - (easing - easing * percent)));
} // SVG elements do not inherit from HTMLElement


function getOffsetElement(el) {
  return el ? 'offsetTop' in el ? el : getOffsetElement((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.parent)(el)) : document.body;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/slider-parallax.js":
/*!*****************************************************************!*\
  !*** ./node_modules/uikit/src/js/components/slider-parallax.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_parallax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/parallax */ "./node_modules/uikit/src/js/mixin/parallax.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_parallax__WEBPACK_IMPORTED_MODULE_0__["default"]],
  data: {
    selItem: '!li'
  },
  computed: {
    item(_ref, $el) {
      let {
        selItem
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.query)(selItem, $el);
    }

  },
  events: [{
    name: 'itemin itemout',
    self: true,

    el() {
      return this.item;
    },

    handler(_ref2) {
      let {
        type,
        detail: {
          percent,
          duration,
          timing,
          dir
        }
      } = _ref2;
      uikit_util__WEBPACK_IMPORTED_MODULE_2__.fastdom.read(() => {
        const propsFrom = this.getCss(getCurrentPercent(type, dir, percent));
        const propsTo = this.getCss(isIn(type) ? .5 : dir > 0 ? 1 : 0);
        uikit_util__WEBPACK_IMPORTED_MODULE_2__.fastdom.write(() => {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.$el, propsFrom);
          uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.start(this.$el, propsTo, duration, timing).catch(uikit_util__WEBPACK_IMPORTED_MODULE_5__.noop);
        });
      });
    }

  }, {
    name: 'transitioncanceled transitionend',
    self: true,

    el() {
      return this.item;
    },

    handler() {
      uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.cancel(this.$el);
    }

  }, {
    name: 'itemtranslatein itemtranslateout',
    self: true,

    el() {
      return this.item;
    },

    handler(_ref3) {
      let {
        type,
        detail: {
          percent,
          dir
        }
      } = _ref3;
      uikit_util__WEBPACK_IMPORTED_MODULE_2__.fastdom.read(() => {
        const props = this.getCss(getCurrentPercent(type, dir, percent));
        uikit_util__WEBPACK_IMPORTED_MODULE_2__.fastdom.write(() => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.$el, props));
      });
    }

  }]
});

function isIn(type) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.endsWith)(type, 'in');
}

function getCurrentPercent(type, dir, percent) {
  percent /= 2;
  return isIn(type) ^ dir < 0 ? percent : 1 - percent;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/slider.js":
/*!********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/slider.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _mixin_slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/slider */ "./node_modules/uikit/src/js/mixin/slider.js");
/* harmony import */ var _mixin_slider_reactive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mixin/slider-reactive */ "./node_modules/uikit/src/js/mixin/slider-reactive.js");
/* harmony import */ var _internal_slider_transitioner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/slider-transitioner */ "./node_modules/uikit/src/js/components/internal/slider-transitioner.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");






/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_1__["default"], _mixin_slider__WEBPACK_IMPORTED_MODULE_2__["default"], _mixin_slider_reactive__WEBPACK_IMPORTED_MODULE_3__["default"]],
  props: {
    center: Boolean,
    sets: Boolean
  },
  data: {
    center: false,
    sets: false,
    attrItem: 'uk-slider-item',
    selList: '.uk-slider-items',
    selNav: '.uk-slider-nav',
    clsContainer: 'uk-slider-container',
    Transitioner: _internal_slider_transitioner__WEBPACK_IMPORTED_MODULE_4__["default"]
  },
  computed: {
    avgWidth() {
      return (0,_internal_slider_transitioner__WEBPACK_IMPORTED_MODULE_4__.getWidth)(this.list) / this.length;
    },

    finite(_ref) {
      let {
        finite
      } = _ref;
      return finite || Math.ceil((0,_internal_slider_transitioner__WEBPACK_IMPORTED_MODULE_4__.getWidth)(this.list)) < (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(this.list).width + getMaxElWidth(this.list) + this.center;
    },

    maxIndex() {
      if (!this.finite || this.center && !this.sets) {
        return this.length - 1;
      }

      if (this.center) {
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.last)(this.sets);
      }

      let lft = 0;
      const max = (0,_internal_slider_transitioner__WEBPACK_IMPORTED_MODULE_4__.getMax)(this.list);
      const index = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.findIndex)(this.slides, el => {
        if (lft >= max) {
          return true;
        }

        lft += (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(el).width;
      });
      return ~index ? index : this.length - 1;
    },

    sets(_ref2) {
      let {
        sets
      } = _ref2;

      if (!sets) {
        return;
      }

      const width = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(this.list).width / (this.center ? 2 : 1);
      let left = 0;
      let leftCenter = width;
      let slideLeft = 0;
      sets = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.sortBy)(this.slides, 'offsetLeft').reduce((sets, slide, i) => {
        const slideWidth = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(slide).width;
        const slideRight = slideLeft + slideWidth;

        if (slideRight > left) {
          if (!this.center && i > this.maxIndex) {
            i = this.maxIndex;
          }

          if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.includes)(sets, i)) {
            const cmp = this.slides[i + 1];

            if (this.center && cmp && slideWidth < leftCenter - (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(cmp).width / 2) {
              leftCenter -= slideWidth;
            } else {
              leftCenter = width;
              sets.push(i);
              left = slideLeft + width + (this.center ? slideWidth / 2 : 0);
            }
          }
        }

        slideLeft += slideWidth;
        return sets;
      }, []);
      return !(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.isEmpty)(sets) && sets;
    },

    transitionOptions() {
      return {
        center: this.center,
        list: this.list
      };
    }

  },

  connected() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.toggleClass)(this.$el, this.clsContainer, !(0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.$)(".".concat(this.clsContainer), this.$el));
  },

  update: {
    write() {
      this.navItems.forEach(el => {
        const index = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.toNumber)((0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.data)(el, this.attrItem));

        if (index !== false) {
          el.hidden = !this.maxIndex || index > this.maxIndex || this.sets && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.includes)(this.sets, index);
        }
      });

      if (this.length && !this.dragging && !this.stack.length) {
        this.reorder();

        this._translate(1);
      }

      const actives = this._getTransitioner(this.index).getActives();

      this.slides.forEach(slide => (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.toggleClass)(slide, this.clsActive, (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.includes)(actives, slide)));

      if (this.clsActivated && (!this.sets || (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.includes)(this.sets, (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.toFloat)(this.index)))) {
        this.slides.forEach(slide => (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.toggleClass)(slide, this.clsActivated || '', (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.includes)(actives, slide)));
      }
    },

    events: ['resize']
  },
  events: {
    beforeitemshow(e) {
      if (!this.dragging && this.sets && this.stack.length < 2 && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.includes)(this.sets, this.index)) {
        this.index = this.getValidIndex();
      }

      const diff = Math.abs(this.index - this.prevIndex + (this.dir > 0 && this.index < this.prevIndex || this.dir < 0 && this.index > this.prevIndex ? (this.maxIndex + 1) * this.dir : 0));

      if (!this.dragging && diff > 1) {
        for (let i = 0; i < diff; i++) {
          this.stack.splice(1, 0, this.dir > 0 ? 'next' : 'previous');
        }

        e.preventDefault();
        return;
      }

      const index = this.dir < 0 || !this.slides[this.prevIndex] ? this.index : this.prevIndex;
      this.duration = (0,_mixin_slider__WEBPACK_IMPORTED_MODULE_2__.speedUp)(this.avgWidth / this.velocity) * ((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(this.slides[index]).width / this.avgWidth);
      this.reorder();
    },

    itemshow() {
      if (~this.prevIndex) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.addClass)(this._getTransitioner().getItemIn(), this.clsActive);
      }
    }

  },
  methods: {
    reorder() {
      if (this.finite) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(this.slides, 'order', '');
        return;
      }

      const index = this.dir > 0 && this.slides[this.prevIndex] ? this.prevIndex : this.index;
      this.slides.forEach((slide, i) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(slide, 'order', this.dir > 0 && i < index ? 1 : this.dir < 0 && i >= this.index ? -1 : ''));

      if (!this.center) {
        return;
      }

      const next = this.slides[index];
      let width = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(this.list).width / 2 - (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(next).width / 2;
      let j = 0;

      while (width > 0) {
        const slideIndex = this.getIndex(--j + index, index);
        const slide = this.slides[slideIndex];
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(slide, 'order', slideIndex > index ? -2 : -1);
        width -= (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(slide).width;
      }
    },

    getValidIndex() {
      let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;
      let prevIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.prevIndex;
      index = this.getIndex(index, prevIndex);

      if (!this.sets) {
        return index;
      }

      let prev;

      do {
        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.includes)(this.sets, index)) {
          return index;
        }

        prev = index;
        index = this.getIndex(index + this.dir, prevIndex);
      } while (index !== prev);

      return index;
    }

  }
});

function getMaxElWidth(list) {
  return Math.max(0, ...(0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.children)(list).map(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.dimensions)(el).width));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/slideshow.js":
/*!***********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/slideshow.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _mixin_slideshow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/slideshow */ "./node_modules/uikit/src/js/mixin/slideshow.js");
/* harmony import */ var _internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/slideshow-animations */ "./node_modules/uikit/src/js/components/internal/slideshow-animations.js");
/* harmony import */ var _mixin_slider_reactive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mixin/slider-reactive */ "./node_modules/uikit/src/js/mixin/slider-reactive.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");






/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_1__["default"], _mixin_slideshow__WEBPACK_IMPORTED_MODULE_2__["default"], _mixin_slider_reactive__WEBPACK_IMPORTED_MODULE_3__["default"]],
  props: {
    ratio: String,
    minHeight: Number,
    maxHeight: Number
  },
  data: {
    ratio: '16:9',
    minHeight: false,
    maxHeight: false,
    selList: '.uk-slideshow-items',
    attrItem: 'uk-slideshow-item',
    selNav: '.uk-slideshow-nav',
    Animations: _internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_4__["default"]
  },
  update: {
    read() {
      if (!this.list) {
        return false;
      }

      let [width, height] = this.ratio.split(':').map(Number);
      height = height * this.list.offsetWidth / width || 0;

      if (this.minHeight) {
        height = Math.max(this.minHeight, height);
      }

      if (this.maxHeight) {
        height = Math.min(this.maxHeight, height);
      }

      return {
        height: height - (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.boxModelAdjust)(this.list, 'height', 'content-box')
      };
    },

    write(_ref) {
      let {
        height
      } = _ref;
      height > 0 && (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(this.list, 'minHeight', height);
    },

    events: ['resize']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/components/sortable.js":
/*!**********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/sortable.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _mixin_animate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mixin/animate */ "./node_modules/uikit/src/js/mixin/animate.js");
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");





/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_2__["default"], _mixin_animate__WEBPACK_IMPORTED_MODULE_3__["default"]],
  props: {
    group: String,
    threshold: Number,
    clsItem: String,
    clsPlaceholder: String,
    clsDrag: String,
    clsDragState: String,
    clsBase: String,
    clsNoDrag: String,
    clsEmpty: String,
    clsCustom: String,
    handle: String
  },
  data: {
    group: false,
    threshold: 5,
    clsItem: 'uk-sortable-item',
    clsPlaceholder: 'uk-sortable-placeholder',
    clsDrag: 'uk-sortable-drag',
    clsDragState: 'uk-drag',
    clsBase: 'uk-sortable',
    clsNoDrag: 'uk-sortable-nodrag',
    clsEmpty: 'uk-sortable-empty',
    clsCustom: '',
    handle: false,
    pos: {}
  },

  created() {
    ['init', 'start', 'move', 'end'].forEach(key => {
      const fn = this[key];

      this[key] = e => {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.assign)(this.pos, (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.getEventPos)(e));
        fn(e);
      };
    });
  },

  events: {
    name: uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerDown,
    passive: false,
    handler: 'init'
  },
  computed: {
    target() {
      return (this.$el.tBodies || [this.$el])[0];
    },

    items() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(this.target);
    },

    isEmpty: {
      get() {
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isEmpty)(this.items);
      },

      watch(empty) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.toggleClass)(this.target, this.clsEmpty, empty);
      },

      immediate: true
    },
    handles: {
      get(_ref, el) {
        let {
          handle
        } = _ref;
        return handle ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.$$)(handle, el) : this.items;
      },

      watch(handles, prev) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(prev, {
          touchAction: '',
          userSelect: ''
        });
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(handles, {
          touchAction: uikit_util__WEBPACK_IMPORTED_MODULE_6__.hasTouch ? 'none' : '',
          userSelect: 'none'
        }); // touchAction set to 'none' causes a performance drop in Chrome 80
      },

      immediate: true
    }
  },
  update: {
    write(data) {
      if (!this.drag || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.parent)(this.placeholder)) {
        return;
      }

      const {
        pos: {
          x,
          y
        },
        origin: {
          offsetTop,
          offsetLeft
        },
        placeholder
      } = this;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(this.drag, {
        top: y - offsetTop,
        left: x - offsetLeft
      });
      const sortable = this.getSortable(document.elementFromPoint(x, y));

      if (!sortable) {
        return;
      }

      const {
        items
      } = sortable;

      if (items.some(uikit_util__WEBPACK_IMPORTED_MODULE_11__.Transition.inProgress)) {
        return;
      }

      const target = findTarget(items, {
        x,
        y
      });

      if (items.length && (!target || target === placeholder)) {
        return;
      }

      const previous = this.getSortable(placeholder);
      const insertTarget = findInsertTarget(sortable.target, target, placeholder, x, y, sortable === previous && data.moved !== target);

      if (insertTarget === false) {
        return;
      }

      if (insertTarget && placeholder === insertTarget) {
        return;
      }

      if (sortable !== previous) {
        previous.remove(placeholder);
        data.moved = target;
      } else {
        delete data.moved;
      }

      sortable.insert(placeholder, insertTarget);
      this.touched.add(sortable);
    },

    events: ['move']
  },
  methods: {
    init(e) {
      const {
        target,
        button,
        defaultPrevented
      } = e;
      const [placeholder] = this.items.filter(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(target, el));

      if (!placeholder || defaultPrevented || button > 0 || (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.isInput)(target) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(target, ".".concat(this.clsNoDrag)) || this.handle && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(target, this.handle)) {
        return;
      }

      e.preventDefault();
      this.touched = new Set([this]);
      this.placeholder = placeholder;
      this.origin = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.assign)({
        target,
        index: (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.index)(placeholder)
      }, this.pos);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.on)(document, uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerMove, this.move);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.on)(document, uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerUp, this.end);

      if (!this.threshold) {
        this.start(e);
      }
    },

    start(e) {
      this.drag = appendDrag(this.$container, this.placeholder);
      const {
        left,
        top
      } = this.placeholder.getBoundingClientRect();
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.assign)(this.origin, {
        offsetLeft: this.pos.x - left,
        offsetTop: this.pos.y - top
      });
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.addClass)(this.drag, this.clsDrag, this.clsCustom);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.addClass)(this.placeholder, this.clsPlaceholder);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.addClass)(this.items, this.clsItem);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.addClass)(document.documentElement, this.clsDragState);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(this.$el, 'start', [this, this.placeholder]);
      trackScroll(this.pos);
      this.move(e);
    },

    move(e) {
      if (this.drag) {
        this.$emit('move');
      } else if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) {
        this.start(e);
      }
    },

    end() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.off)(document, uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerMove, this.move);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.off)(document, uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerUp, this.end);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.off)(window, 'scroll', this.scroll);

      if (!this.drag) {
        return;
      }

      untrackScroll();
      const sortable = this.getSortable(this.placeholder);

      if (this === sortable) {
        if (this.origin.index !== (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.index)(this.placeholder)) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(this.$el, 'moved', [this, this.placeholder]);
        }
      } else {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(sortable.$el, 'added', [sortable, this.placeholder]);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(this.$el, 'removed', [this, this.placeholder]);
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(this.$el, 'stop', [this, this.placeholder]);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.remove)(this.drag);
      this.drag = null;
      this.touched.forEach(_ref2 => {
        let {
          clsPlaceholder,
          clsItem
        } = _ref2;
        return this.touched.forEach(sortable => (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.removeClass)(sortable.items, clsPlaceholder, clsItem));
      });
      this.touched = null;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.removeClass)(document.documentElement, this.clsDragState);
    },

    insert(element, target) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.addClass)(this.items, this.clsItem);

      const insert = () => target ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.before)(target, element) : (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.append)(this.target, element);

      this.animate(insert);
    },

    remove(element) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(element, this.target)) {
        return;
      }

      this.animate(() => (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.remove)(element));
    },

    getSortable(element) {
      do {
        const sortable = this.$getComponent(element, 'sortable');

        if (sortable && (sortable === this || this.group !== false && sortable.group === this.group)) {
          return sortable;
        }
      } while (element = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.parent)(element));
    }

  }
});
let trackTimer;

function trackScroll(pos) {
  let last = Date.now();
  trackTimer = setInterval(() => {
    let {
      x,
      y
    } = pos;
    y += window.pageYOffset;
    const dist = (Date.now() - last) * .3;
    last = Date.now();
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.scrollParents)(document.elementFromPoint(x, pos.y), /auto|scroll/).reverse().some(scrollEl => {
      let {
        scrollTop: scroll,
        scrollHeight
      } = scrollEl;
      const {
        top,
        bottom,
        height
      } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_13__.offset)((0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.getViewport)(scrollEl));

      if (top < y && top + 35 > y) {
        scroll -= dist;
      } else if (bottom > y && bottom - 35 < y) {
        scroll += dist;
      } else {
        return;
      }

      if (scroll > 0 && scroll < scrollHeight - height) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.scrollTop)(scrollEl, scroll);
        return true;
      }
    });
  }, 15);
}

function untrackScroll() {
  clearInterval(trackTimer);
}

function appendDrag(container, element) {
  const clone = (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.append)(container, element.outerHTML.replace(/(^<)(?:li|tr)|(?:li|tr)(\/>$)/g, '$1div$2'));
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(clone, 'margin', '0', 'important');
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(clone, (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.assign)({
    boxSizing: 'border-box',
    width: element.offsetWidth,
    height: element.offsetHeight
  }, (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.css)(element, ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'])));
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_13__.height)(clone.firstElementChild, (0,uikit_util__WEBPACK_IMPORTED_MODULE_13__.height)(element.firstElementChild));
  return clone;
}

function findTarget(items, point) {
  return items[(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.findIndex)(items, item => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.pointInRect)(point, item.getBoundingClientRect()))];
}

function findInsertTarget(list, target, placeholder, x, y, sameList) {
  if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(list).length) {
    return;
  }

  const rect = target.getBoundingClientRect();

  if (!sameList) {
    if (!isHorizontal(list, placeholder)) {
      return y < rect.top + rect.height / 2 ? target : target.nextElementSibling;
    }

    return target;
  }

  const placeholderRect = placeholder.getBoundingClientRect();
  const sameRow = linesIntersect([rect.top, rect.bottom], [placeholderRect.top, placeholderRect.bottom]);
  const pointerPos = sameRow ? x : y;
  const lengthProp = sameRow ? 'width' : 'height';
  const startProp = sameRow ? 'left' : 'top';
  const endProp = sameRow ? 'right' : 'bottom';
  const diff = placeholderRect[lengthProp] < rect[lengthProp] ? rect[lengthProp] - placeholderRect[lengthProp] : 0;

  if (placeholderRect[startProp] < rect[startProp]) {
    if (diff && pointerPos < rect[startProp] + diff) {
      return false;
    }

    return target.nextElementSibling;
  }

  if (diff && pointerPos > rect[endProp] - diff) {
    return false;
  }

  return target;
}

function isHorizontal(list, placeholder) {
  const single = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(list).length === 1;

  if (single) {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.append)(list, placeholder);
  }

  const items = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.children)(list);
  const isHorizontal = items.some((el, i) => {
    const rectA = el.getBoundingClientRect();
    return items.slice(i + 1).some(el => {
      const rectB = el.getBoundingClientRect();
      return !linesIntersect([rectA.left, rectA.right], [rectB.left, rectB.right]);
    });
  });

  if (single) {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.remove)(placeholder);
  }

  return isHorizontal;
}

function linesIntersect(lineA, lineB) {
  return lineA[1] > lineB[0] && lineB[1] > lineA[0];
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/tooltip.js":
/*!*********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/tooltip.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/container */ "./node_modules/uikit/src/js/mixin/container.js");
/* harmony import */ var _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");
/* harmony import */ var _mixin_position__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/position */ "./node_modules/uikit/src/js/mixin/position.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_container__WEBPACK_IMPORTED_MODULE_0__["default"], _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__["default"], _mixin_position__WEBPACK_IMPORTED_MODULE_2__["default"]],
  args: 'title',
  props: {
    delay: Number,
    title: String
  },
  data: {
    pos: 'top',
    title: '',
    delay: 0,
    animation: ['uk-animation-scale-up'],
    duration: 100,
    cls: 'uk-active',
    clsPos: 'uk-tooltip'
  },

  beforeConnect() {
    this._hasTitle = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.hasAttr)(this.$el, 'title');
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.attr)(this.$el, 'title', '');
    this.updateAria(false);
    makeFocusable(this.$el);
  },

  disconnected() {
    this.hide();
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.attr)(this.$el, 'title', this._hasTitle ? this.title : null);
  },

  methods: {
    show() {
      if (this.isToggled(this.tooltip || null) || !this.title) {
        return;
      }

      this._unbind = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.once)(document, "show keydown ".concat(uikit_util__WEBPACK_IMPORTED_MODULE_5__.pointerDown), this.hide, false, e => e.type === uikit_util__WEBPACK_IMPORTED_MODULE_5__.pointerDown && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.within)(e.target, this.$el) || e.type === 'keydown' && e.keyCode === 27 || e.type === 'show' && e.detail[0] !== this && e.detail[0].$name === this.$name);
      clearTimeout(this.showTimer);
      this.showTimer = setTimeout(this._show, this.delay);
    },

    hide() {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.matches)(this.$el, 'input:focus')) {
        return;
      }

      clearTimeout(this.showTimer);

      if (!this.isToggled(this.tooltip || null)) {
        return;
      }

      this.toggleElement(this.tooltip, false, false).then(() => {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.remove)(this.tooltip);
        this.tooltip = null;

        this._unbind();
      });
    },

    _show() {
      this.tooltip = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.append)(this.container, "<div class=\"".concat(this.clsPos, "\">\n                    <div class=\"").concat(this.clsPos, "-inner\">").concat(this.title, "</div>\n                 </div>"));
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.on)(this.tooltip, 'toggled', (e, toggled) => {
        this.updateAria(toggled);

        if (!toggled) {
          return;
        }

        this.positionAt(this.tooltip, this.$el);
        this.origin = this.getAxis() === 'y' ? "".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.flipPosition)(this.dir), "-").concat(this.align) : "".concat(this.align, "-").concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.flipPosition)(this.dir));
      });
      this.toggleElement(this.tooltip, true);
    },

    updateAria(toggled) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.attr)(this.$el, 'aria-expanded', toggled);
    }

  },
  events: {
    focus: 'show',
    blur: 'hide',

    ["".concat(uikit_util__WEBPACK_IMPORTED_MODULE_5__.pointerEnter, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_5__.pointerLeave)](e) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isTouch)(e)) {
        this[e.type === uikit_util__WEBPACK_IMPORTED_MODULE_5__.pointerEnter ? 'show' : 'hide']();
      }
    },

    // Clicking a button does not give it focus on all browsers and platforms
    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#clicking_and_focus
    [uikit_util__WEBPACK_IMPORTED_MODULE_5__.pointerDown](e) {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isTouch)(e)) {
        this.show();
      }
    }

  }
});

function makeFocusable(el) {
  if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.isFocusable)(el)) {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.attr)(el, 'tabindex', '0');
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/components/upload.js":
/*!********************************************************!*\
  !*** ./node_modules/uikit/src/js/components/upload.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/ajax.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    allow: String,
    clsDragover: String,
    concurrent: Number,
    maxSize: Number,
    method: String,
    mime: String,
    msgInvalidMime: String,
    msgInvalidName: String,
    msgInvalidSize: String,
    multiple: Boolean,
    name: String,
    params: Object,
    type: String,
    url: String
  },
  data: {
    allow: false,
    clsDragover: 'uk-dragover',
    concurrent: 1,
    maxSize: 0,
    method: 'POST',
    mime: false,
    msgInvalidMime: 'Invalid File Type: %s',
    msgInvalidName: 'Invalid File Name: %s',
    msgInvalidSize: 'Invalid File Size: %s Kilobytes Max',
    multiple: false,
    name: 'files[]',
    params: {},
    type: '',
    url: '',
    abort: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    beforeAll: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    beforeSend: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    complete: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    completeAll: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    error: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    fail: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    load: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    loadEnd: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    loadStart: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop,
    progress: uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop
  },
  events: {
    change(e) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.matches)(e.target, 'input[type="file"]')) {
        return;
      }

      e.preventDefault();

      if (e.target.files) {
        this.upload(e.target.files);
      }

      e.target.value = '';
    },

    drop(e) {
      stop(e);
      const transfer = e.dataTransfer;

      if (!transfer || !transfer.files) {
        return;
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.removeClass)(this.$el, this.clsDragover);
      this.upload(transfer.files);
    },

    dragenter(e) {
      stop(e);
    },

    dragover(e) {
      stop(e);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.addClass)(this.$el, this.clsDragover);
    },

    dragleave(e) {
      stop(e);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.removeClass)(this.$el, this.clsDragover);
    }

  },
  methods: {
    upload(files) {
      if (!files.length) {
        return;
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.trigger)(this.$el, 'upload', [files]);

      for (let i = 0; i < files.length; i++) {
        if (this.maxSize && this.maxSize * 1000 < files[i].size) {
          this.fail(this.msgInvalidSize.replace('%s', this.maxSize));
          return;
        }

        if (this.allow && !match(this.allow, files[i].name)) {
          this.fail(this.msgInvalidName.replace('%s', this.allow));
          return;
        }

        if (this.mime && !match(this.mime, files[i].type)) {
          this.fail(this.msgInvalidMime.replace('%s', this.mime));
          return;
        }
      }

      if (!this.multiple) {
        files = [files[0]];
      }

      this.beforeAll(this, files);
      const chunks = chunk(files, this.concurrent);

      const upload = files => {
        const data = new FormData();
        files.forEach(file => data.append(this.name, file));

        for (const key in this.params) {
          data.append(key, this.params[key]);
        }

        (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.ajax)(this.url, {
          data,
          method: this.method,
          responseType: this.type,
          beforeSend: env => {
            const {
              xhr
            } = env;
            xhr.upload && (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.on)(xhr.upload, 'progress', this.progress);
            ['loadStart', 'load', 'loadEnd', 'abort'].forEach(type => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.on)(xhr, type.toLowerCase(), this[type]));
            return this.beforeSend(env);
          }
        }).then(xhr => {
          this.complete(xhr);

          if (chunks.length) {
            upload(chunks.shift());
          } else {
            this.completeAll(xhr);
          }
        }, e => this.error(e));
      };

      upload(chunks.shift());
    }

  }
});

function match(pattern, path) {
  return path.match(new RegExp("^".concat(pattern.replace(/\//g, '\\/').replace(/\*\*/g, '(\\/[^\\/]+)*').replace(/\*/g, '[^\\/]+').replace(/((?!\\))\?/g, '$1.'), "$"), 'i'));
}

function chunk(files, size) {
  const chunks = [];

  for (let i = 0; i < files.length; i += size) {
    const chunk = [];

    for (let j = 0; j < size; j++) {
      chunk.push(files[i + j]);
    }

    chunks.push(chunk);
  }

  return chunks;
}

function stop(e) {
  e.preventDefault();
  e.stopPropagation();
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/accordion.js":
/*!*****************************************************!*\
  !*** ./node_modules/uikit/src/js/core/accordion.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_0__["default"], _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__["default"]],
  props: {
    targets: String,
    active: null,
    collapsible: Boolean,
    multiple: Boolean,
    toggle: String,
    content: String,
    transition: String,
    offset: Number
  },
  data: {
    targets: '> *',
    active: false,
    animation: [true],
    collapsible: true,
    multiple: false,
    clsOpen: 'uk-open',
    toggle: '> .uk-accordion-title',
    content: '> .uk-accordion-content',
    transition: 'ease',
    offset: 0
  },
  computed: {
    items: {
      get(_ref, $el) {
        let {
          targets
        } = _ref;
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$$)(targets, $el);
      },

      watch(items, prev) {
        items.forEach(el => hide((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(this.content, el), !(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.hasClass)(el, this.clsOpen)));

        if (prev || (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.hasClass)(items, this.clsOpen)) {
          return;
        }

        const active = this.active !== false && items[Number(this.active)] || !this.collapsible && items[0];

        if (active) {
          this.toggle(active, false);
        }
      },

      immediate: true
    },

    toggles(_ref2) {
      let {
        toggle
      } = _ref2;
      return this.items.map(item => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(toggle, item));
    }

  },
  events: [{
    name: 'click',

    delegate() {
      return "".concat(this.targets, " ").concat(this.$props.toggle);
    },

    handler(e) {
      e.preventDefault();
      this.toggle((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.index)(this.toggles, e.current));
    }

  }],
  methods: {
    toggle(item, animate) {
      let items = [this.items[(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.getIndex)(item, this.items)]];
      const activeItems = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.filter)(this.items, ".".concat(this.clsOpen));

      if (!this.multiple && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.includes)(activeItems, items[0])) {
        items = items.concat(activeItems);
      }

      if (!this.collapsible && activeItems.length < 2 && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.filter)(items, ":not(.".concat(this.clsOpen, ")")).length) {
        return;
      }

      items.forEach(el => this.toggleElement(el, !(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.hasClass)(el, this.clsOpen), (el, show) => {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(el, this.clsOpen, show);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(this.$props.toggle, el), 'aria-expanded', show);
        const content = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)("".concat(el._wrapper ? '> * ' : '').concat(this.content), el);

        if (animate === false || !this.hasTransition) {
          hide(content, !show);
          return;
        }

        if (!el._wrapper) {
          el._wrapper = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.wrapAll)(content, "<div".concat(show ? ' hidden' : '', ">"));
        }

        hide(content, false);
        return (0,_mixin_togglable__WEBPACK_IMPORTED_MODULE_1__.toggleHeight)(this)(el._wrapper, show).then(() => {
          hide(content, !show);
          delete el._wrapper;
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.unwrap)(content);

          if (show) {
            const toggle = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$)(this.$props.toggle, el);

            if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.isInView)(toggle)) {
              (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.scrollIntoView)(toggle, {
                offset: this.offset
              });
            }
          }
        });
      }));
    }

  }
});

function hide(el, hide) {
  el && (el.hidden = hide);
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/alert.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/core/alert.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_0__["default"], _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__["default"]],
  args: 'animation',
  props: {
    close: String
  },
  data: {
    animation: [true],
    selClose: '.uk-alert-close',
    duration: 150,
    hideProps: (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.assign)({
      opacity: 0
    }, _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__["default"].data.hideProps)
  },
  events: [{
    name: 'click',

    delegate() {
      return this.selClose;
    },

    handler(e) {
      e.preventDefault();
      this.close();
    }

  }],
  methods: {
    close() {
      this.toggleElement(this.$el).then(() => this.$destroy(true));
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/core.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/core/core.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(UIkit) {
  if (!uikit_util__WEBPACK_IMPORTED_MODULE_0__.inBrowser) {
    return;
  } // throttle 'resize'


  let pendingResize;

  const handleResize = () => {
    if (pendingResize) {
      return;
    }

    pendingResize = true;
    uikit_util__WEBPACK_IMPORTED_MODULE_1__.fastdom.write(() => pendingResize = false);
    UIkit.update(null, 'resize');
  };

  (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.on)(window, 'load resize', handleResize);
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.on)(document, 'loadedmetadata load', handleResize, true);

  if ('ResizeObserver' in window) {
    new ResizeObserver(handleResize).observe(document.documentElement);
  } // throttle `scroll` event (Safari triggers multiple `scroll` events per frame)


  let pending;
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.on)(window, 'scroll', e => {
    if (pending) {
      return;
    }

    pending = true;
    uikit_util__WEBPACK_IMPORTED_MODULE_1__.fastdom.write(() => pending = false);
    UIkit.update(null, e.type);
  }, {
    passive: true,
    capture: true
  });
  let started = 0;
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.on)(document, 'animationstart', _ref => {
    let {
      target
    } = _ref;

    if (((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(target, 'animationName') || '').match(/^uk-.*(left|right)/)) {
      started++;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(document.documentElement, 'overflowX', 'hidden');
      setTimeout(() => {
        if (! --started) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(document.documentElement, 'overflowX', '');
        }
      }, (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.toMs)((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(target, 'animationDuration')) + 100);
    }
  }, true);
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.on)(document, uikit_util__WEBPACK_IMPORTED_MODULE_0__.pointerDown, e => {
    if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isTouch)(e)) {
      return;
    } // Handle Swipe Gesture


    const pos = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.getEventPos)(e);
    const target = 'tagName' in e.target ? e.target : (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.parent)(e.target);
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.once)(document, "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_0__.pointerUp, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_0__.pointerCancel, " scroll"), e => {
      const {
        x,
        y
      } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.getEventPos)(e); // swipe

      if (e.type !== 'scroll' && target && x && Math.abs(pos.x - x) > 100 || y && Math.abs(pos.y - y) > 100) {
        setTimeout(() => {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.trigger)(target, 'swipe');
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.trigger)(target, "swipe".concat(swipeDirection(pos.x, pos.y, x, y)));
        });
      }
    });
  }, {
    passive: true
  });
}

function swipeDirection(x1, y1, x2, y2) {
  return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? x1 - x2 > 0 ? 'Left' : 'Right' : y1 - y2 > 0 ? 'Up' : 'Down';
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/cover.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/core/cover.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _video__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./video */ "./node_modules/uikit/src/js/core/video.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_video__WEBPACK_IMPORTED_MODULE_0__["default"]],
  props: {
    width: Number,
    height: Number
  },
  data: {
    automute: true
  },
  update: {
    read() {
      const el = this.$el;
      const {
        offsetHeight: height,
        offsetWidth: width
      } = getPositionedParent(el) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.parent)(el);
      const dim = uikit_util__WEBPACK_IMPORTED_MODULE_2__.Dimensions.cover({
        width: this.width || el.naturalWidth || el.videoWidth || el.clientWidth,
        height: this.height || el.naturalHeight || el.videoHeight || el.clientHeight
      }, {
        width: width + (width % 2 ? 1 : 0),
        height: height + (height % 2 ? 1 : 0)
      });

      if (!dim.width || !dim.height) {
        return false;
      }

      return dim;
    },

    write(_ref) {
      let {
        height,
        width
      } = _ref;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.$el, {
        height,
        width
      });
    },

    events: ['resize']
  }
});

function getPositionedParent(el) {
  while (el = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.parent)(el)) {
    if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el, 'position') !== 'static') {
      return el;
    }
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/drop.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/core/drop.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "active": () => (/* binding */ active)
/* harmony export */ });
/* harmony import */ var _mixin_container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/container */ "./node_modules/uikit/src/js/mixin/container.js");
/* harmony import */ var _mixin_position__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/position */ "./node_modules/uikit/src/js/mixin/position.js");
/* harmony import */ var _mixin_togglable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/mouse.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");




let active;
/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_container__WEBPACK_IMPORTED_MODULE_0__["default"], _mixin_position__WEBPACK_IMPORTED_MODULE_1__["default"], _mixin_togglable__WEBPACK_IMPORTED_MODULE_2__["default"]],
  args: 'pos',
  props: {
    mode: 'list',
    toggle: Boolean,
    boundary: Boolean,
    boundaryAlign: Boolean,
    delayShow: Number,
    delayHide: Number,
    clsDrop: String
  },
  data: {
    mode: ['click', 'hover'],
    toggle: '- *',
    boundary: true,
    boundaryAlign: false,
    delayShow: 0,
    delayHide: 800,
    clsDrop: false,
    animation: ['uk-animation-fade'],
    cls: 'uk-open',
    container: false
  },
  computed: {
    boundary(_ref, $el) {
      let {
        boundary
      } = _ref;
      return boundary === true ? window : (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.query)(boundary, $el);
    },

    clsDrop(_ref2) {
      let {
        clsDrop
      } = _ref2;
      return clsDrop || "uk-".concat(this.$options.name);
    },

    clsPos() {
      return this.clsDrop;
    }

  },

  created() {
    this.tracker = new uikit_util__WEBPACK_IMPORTED_MODULE_4__.MouseTracker();
  },

  connected() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.addClass)(this.$el, this.clsDrop);

    if (this.toggle && !this.target) {
      this.target = this.$create('toggle', (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.query)(this.toggle, this.$el), {
        target: this.$el,
        mode: this.mode
      }).$el;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(this.target, 'aria-haspopup', true);
    }
  },

  disconnected() {
    if (this.isActive()) {
      active = null;
    }
  },

  events: [{
    name: 'click',

    delegate() {
      return ".".concat(this.clsDrop, "-close");
    },

    handler(e) {
      e.preventDefault();
      this.hide(false);
    }

  }, {
    name: 'click',

    delegate() {
      return 'a[href^="#"]';
    },

    handler(_ref3) {
      let {
        defaultPrevented,
        current: {
          hash
        }
      } = _ref3;

      if (!defaultPrevented && hash && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(hash, this.$el)) {
        this.hide(false);
      }
    }

  }, {
    name: 'beforescroll',

    handler() {
      this.hide(false);
    }

  }, {
    name: 'toggle',
    self: true,

    handler(e, toggle) {
      e.preventDefault();

      if (this.isToggled()) {
        this.hide(false);
      } else {
        this.show(toggle.$el, false);
      }
    }

  }, {
    name: 'toggleshow',
    self: true,

    handler(e, toggle) {
      e.preventDefault();
      this.show(toggle.$el);
    }

  }, {
    name: 'togglehide',
    self: true,

    handler(e) {
      e.preventDefault();

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.matches)(this.$el, ':focus,:hover')) {
        this.hide();
      }
    }

  }, {
    name: "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_8__.pointerEnter, " focusin"),

    filter() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.includes)(this.mode, 'hover');
    },

    handler(e) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.isTouch)(e)) {
        this.clearTimers();
      }
    }

  }, {
    name: "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_8__.pointerLeave, " focusout"),

    filter() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.includes)(this.mode, 'hover');
    },

    handler(e) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.isTouch)(e) && e.relatedTarget) {
        this.hide();
      }
    }

  }, {
    name: 'toggled',
    self: true,

    handler(e, toggled) {
      if (!toggled) {
        return;
      }

      this.clearTimers();
      this.position();
    }

  }, {
    name: 'show',
    self: true,

    handler() {
      active = this;
      this.tracker.init();
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(this.$el, 'hide', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.on)(document, uikit_util__WEBPACK_IMPORTED_MODULE_8__.pointerDown, _ref4 => {
        let {
          target
        } = _ref4;
        return !(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(target, this.$el) && (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(document, "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_8__.pointerUp, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_8__.pointerCancel, " scroll"), _ref5 => {
          let {
            defaultPrevented,
            type,
            target: newTarget
          } = _ref5;

          if (!defaultPrevented && type === uikit_util__WEBPACK_IMPORTED_MODULE_8__.pointerUp && target === newTarget && !(this.target && (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(target, this.target))) {
            this.hide(false);
          }
        }, true);
      }), {
        self: true
      });
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(this.$el, 'hide', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.on)(document, 'keydown', e => {
        if (e.keyCode === 27) {
          this.hide(false);
        }
      }), {
        self: true
      });
    }

  }, {
    name: 'beforehide',
    self: true,

    handler() {
      this.clearTimers();
    }

  }, {
    name: 'hide',

    handler(_ref6) {
      let {
        target
      } = _ref6;

      if (this.$el !== target) {
        active = active === null && (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(target, this.$el) && this.isToggled() ? this : active;
        return;
      }

      active = this.isActive() ? null : active;
      this.tracker.cancel();
    }

  }],
  update: {
    write() {
      if (this.isToggled() && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.hasClass)(this.$el, this.clsEnter)) {
        this.position();
      }
    },

    events: ['resize']
  },
  methods: {
    show() {
      let target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.target;
      let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      if (this.isToggled() && target && this.target && target !== this.target) {
        this.hide(false);
      }

      this.target = target;
      this.clearTimers();

      if (this.isActive()) {
        return;
      }

      if (active) {
        if (delay && active.isDelaying) {
          this.showTimer = setTimeout(this.show, 10);
          return;
        }

        let prev;

        while (active && prev !== active && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.within)(this.$el, active.$el)) {
          prev = active;
          active.hide(false);
        }
      }

      if (this.container && (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.parent)(this.$el) !== this.container) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.append)(this.container, this.$el);
      }

      this.showTimer = setTimeout(() => this.toggleElement(this.$el, true), delay && this.delayShow || 0);
    },

    hide() {
      let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      const hide = () => this.toggleElement(this.$el, false, false);

      this.clearTimers();
      this.isDelaying = getPositionedElements(this.$el).some(el => this.tracker.movesTo(el));

      if (delay && this.isDelaying) {
        this.hideTimer = setTimeout(this.hide, 50);
      } else if (delay && this.delayHide) {
        this.hideTimer = setTimeout(hide, this.delayHide);
      } else {
        hide();
      }
    },

    clearTimers() {
      clearTimeout(this.showTimer);
      clearTimeout(this.hideTimer);
      this.showTimer = null;
      this.hideTimer = null;
      this.isDelaying = false;
    },

    isActive() {
      return active === this;
    },

    position() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.removeClass)(this.$el, "".concat(this.clsDrop, "-stack"));
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toggleClass)(this.$el, "".concat(this.clsDrop, "-boundary"), this.boundaryAlign);
      const boundary = (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.offset)(this.boundary);
      const alignTo = this.boundaryAlign ? boundary : (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.offset)(this.target);

      if (this.align === 'justify') {
        const prop = this.getAxis() === 'y' ? 'width' : 'height';
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_13__.css)(this.$el, prop, alignTo[prop]);
      } else if (this.boundary && this.$el.offsetWidth > Math.max(boundary.right - alignTo.left, alignTo.right - boundary.left)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.addClass)(this.$el, "".concat(this.clsDrop, "-stack"));
      }

      this.positionAt(this.$el, this.boundaryAlign ? this.boundary : this.target, this.boundary);
    }

  }
});

function getPositionedElements(el) {
  const result = [];
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.apply)(el, el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_13__.css)(el, 'position') !== 'static' && result.push(el));
  return result;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/form-custom.js":
/*!*******************************************************!*\
  !*** ./node_modules/uikit/src/js/core/form-custom.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_0__["default"]],
  args: 'target',
  props: {
    target: Boolean
  },
  data: {
    target: false
  },
  computed: {
    input(_, $el) {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.$)(uikit_util__WEBPACK_IMPORTED_MODULE_2__.selInput, $el);
    },

    state() {
      return this.input.nextElementSibling;
    },

    target(_ref, $el) {
      let {
        target
      } = _ref;
      return target && (target === true && (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(this.input) === $el && this.input.nextElementSibling || (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.query)(target, $el));
    }

  },

  update() {
    const {
      target,
      input
    } = this;

    if (!target) {
      return;
    }

    let option;
    const prop = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isInput)(target) ? 'value' : 'textContent';
    const prev = target[prop];
    const value = input.files && input.files[0] ? input.files[0].name : (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.matches)(input, 'select') && (option = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.$$)('option', input).filter(el => el.selected)[0]) // eslint-disable-line prefer-destructuring
    ? option.textContent : input.value;

    if (prev !== value) {
      target[prop] = value;
    }
  },

  events: [{
    name: 'change',

    handler() {
      this.$update();
    }

  }, {
    name: 'reset',

    el() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.closest)(this.$el, 'form');
    },

    handler() {
      this.$update();
    }

  }]
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/gif.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/core/gif.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
 // Deprecated

/* harmony default export */ __webpack_exports__["default"] = ({
  update: {
    read(data) {
      const inview = (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.isInView)(this.$el);

      if (!inview || data.isInView === inview) {
        return false;
      }

      data.isInView = inview;
    },

    write() {
      this.$el.src = '' + this.$el.src; // force self-assign
    },

    events: ['scroll', 'resize']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/grid.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/core/grid.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _margin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./margin */ "./node_modules/uikit/src/js/core/margin.js");
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  extends: _margin__WEBPACK_IMPORTED_MODULE_1__["default"],
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_2__["default"]],
  name: 'grid',
  props: {
    masonry: Boolean,
    parallax: Number
  },
  data: {
    margin: 'uk-grid-margin',
    clsStack: 'uk-grid-stack',
    masonry: false,
    parallax: 0
  },

  connected() {
    this.masonry && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.addClass)(this.$el, 'uk-flex-top uk-flex-wrap-top');
  },

  update: [{
    write(_ref) {
      let {
        columns
      } = _ref;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(this.$el, this.clsStack, columns.length < 2);
    },

    events: ['resize']
  }, {
    read(data) {
      let {
        columns,
        rows
      } = data; // Filter component makes elements positioned absolute

      if (!columns.length || !this.masonry && !this.parallax || positionedAbsolute(this.$el)) {
        data.translates = false;
        return false;
      }

      let translates = false;
      const nodes = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.children)(this.$el);
      const columnHeights = getColumnHeights(columns);
      const margin = getMarginTop(nodes, this.margin) * (rows.length - 1);
      const elHeight = Math.max(...columnHeights) + margin;

      if (this.masonry) {
        columns = columns.map(column => (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.sortBy)(column, 'offsetTop'));
        translates = getTranslates(rows, columns);
      }

      let padding = Math.abs(this.parallax);

      if (padding) {
        padding = columnHeights.reduce((newPadding, hgt, i) => Math.max(newPadding, hgt + margin + (i % 2 ? padding : padding / 8) - elHeight), 0);
      }

      return {
        padding,
        columns,
        translates,
        height: translates ? elHeight : ''
      };
    },

    write(_ref2) {
      let {
        height,
        padding
      } = _ref2;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(this.$el, 'paddingBottom', padding || '');
      height !== false && (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(this.$el, 'height', height);
    },

    events: ['resize']
  }, {
    read(_ref3) {
      let {
        height
      } = _ref3;

      if (positionedAbsolute(this.$el)) {
        return false;
      }

      return {
        scrolled: this.parallax ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.scrolledOver)(this.$el, height ? height - (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.height)(this.$el) : 0) * Math.abs(this.parallax) : false
      };
    },

    write(_ref4) {
      let {
        columns,
        scrolled,
        translates
      } = _ref4;

      if (scrolled === false && !translates) {
        return;
      }

      columns.forEach((column, i) => column.forEach((el, j) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(el, 'transform', !scrolled && !translates ? '' : "translateY(".concat((translates && -translates[i][j]) + (scrolled ? i % 2 ? scrolled : scrolled / 8 : 0), "px)"))));
    },

    events: ['scroll', 'resize']
  }]
});

function positionedAbsolute(el) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.children)(el).some(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(el, 'position') === 'absolute');
}

function getTranslates(rows, columns) {
  const rowHeights = rows.map(row => Math.max(...row.map(el => el.offsetHeight)));
  return columns.map(elements => {
    let prev = 0;
    return elements.map((element, row) => prev += row ? rowHeights[row - 1] - elements[row - 1].offsetHeight : 0);
  });
}

function getMarginTop(nodes, cls) {
  const [node] = nodes.filter(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.hasClass)(el, cls));
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toFloat)(node ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(node, 'marginTop') : (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.css)(nodes[0], 'paddingLeft'));
}

function getColumnHeights(columns) {
  return columns.map(column => column.reduce((sum, el) => sum + el.offsetHeight, 0));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/height-match.js":
/*!********************************************************!*\
  !*** ./node_modules/uikit/src/js/core/height-match.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mixin_flex_bug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/flex-bug */ "./node_modules/uikit/src/js/mixin/flex-bug.js");
/* harmony import */ var _margin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./margin */ "./node_modules/uikit/src/js/core/margin.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_flex_bug__WEBPACK_IMPORTED_MODULE_1__["default"]],
  args: 'target',
  props: {
    target: String,
    row: Boolean
  },
  data: {
    target: '> *',
    row: true,
    forceHeight: true
  },
  computed: {
    elements(_ref, $el) {
      let {
        target
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.$$)(target, $el);
    }

  },
  update: {
    read() {
      return {
        rows: (this.row ? (0,_margin__WEBPACK_IMPORTED_MODULE_3__.getRows)(this.elements) : [this.elements]).map(match)
      };
    },

    write(_ref2) {
      let {
        rows
      } = _ref2;
      rows.forEach(_ref3 => {
        let {
          heights,
          elements
        } = _ref3;
        return elements.forEach((el, i) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(el, 'minHeight', heights[i]));
      });
    },

    events: ['resize']
  }
});

function match(elements) {
  if (elements.length < 2) {
    return {
      heights: [''],
      elements
    };
  }

  let heights = elements.map(getHeight);
  let max = Math.max(...heights);
  const hasMinHeight = elements.some(el => el.style.minHeight);
  const hasShrunk = elements.some((el, i) => !el.style.minHeight && heights[i] < max);

  if (hasMinHeight && hasShrunk) {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(elements, 'minHeight', '');
    heights = elements.map(getHeight);
    max = Math.max(...heights);
  }

  heights = elements.map((el, i) => heights[i] === max && (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toFloat)(el.style.minHeight).toFixed(2) !== max.toFixed(2) ? '' : max);
  return {
    heights,
    elements
  };
}

function getHeight(element) {
  let style = false;

  if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.isVisible)(element)) {
    style = element.style.display;
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(element, 'display', 'block', 'important');
  }

  const height = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.dimensions)(element).height - (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.boxModelAdjust)(element, 'height', 'content-box');

  if (style !== false) {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(element, 'display', style);
  }

  return height;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/height-viewport.js":
/*!***********************************************************!*\
  !*** ./node_modules/uikit/src/js/core/height-viewport.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_flex_bug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/flex-bug */ "./node_modules/uikit/src/js/mixin/flex-bug.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_flex_bug__WEBPACK_IMPORTED_MODULE_0__["default"]],
  props: {
    expand: Boolean,
    offsetTop: Boolean,
    offsetBottom: Boolean,
    minHeight: Number
  },
  data: {
    expand: false,
    offsetTop: false,
    offsetBottom: false,
    minHeight: 0
  },
  update: {
    read(_ref) {
      let {
        minHeight: prev
      } = _ref;

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.isVisible)(this.$el)) {
        return false;
      }

      let minHeight = '';
      const box = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.boxModelAdjust)(this.$el, 'height', 'content-box');

      if (this.expand) {
        minHeight = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.height)(window) - ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.dimensions)(document.documentElement).height - (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.dimensions)(this.$el).height) - box || '';
      } else {
        // on mobile devices (iOS and Android) window.innerHeight !== 100vh
        minHeight = 'calc(100vh';

        if (this.offsetTop) {
          const {
            top
          } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.offset)(this.$el);
          minHeight += top > 0 && top < (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.height)(window) / 2 ? " - ".concat(top, "px") : '';
        }

        if (this.offsetBottom === true) {
          minHeight += " - ".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.dimensions)(this.$el.nextElementSibling).height, "px");
        } else if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isNumeric)(this.offsetBottom)) {
          minHeight += " - ".concat(this.offsetBottom, "vh");
        } else if (this.offsetBottom && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.endsWith)(this.offsetBottom, 'px')) {
          minHeight += " - ".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat)(this.offsetBottom), "px");
        } else if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isString)(this.offsetBottom)) {
          minHeight += " - ".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.dimensions)((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.query)(this.offsetBottom, this.$el)).height, "px");
        }

        minHeight += "".concat(box ? " - ".concat(box, "px") : '', ")");
      }

      return {
        minHeight,
        prev
      };
    },

    write(_ref2) {
      let {
        minHeight,
        prev
      } = _ref2;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(this.$el, {
        minHeight
      });

      if (minHeight !== prev) {
        this.$update(this.$el, 'resize');
      }

      if (this.minHeight && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(this.$el, 'minHeight')) < this.minHeight) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(this.$el, 'minHeight', this.minHeight);
      }
    },

    events: ['resize']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/icon.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/core/icon.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IconComponent": () => (/* binding */ IconComponent),
/* harmony export */   "Slidenav": () => (/* binding */ Slidenav),
/* harmony export */   "Search": () => (/* binding */ Search),
/* harmony export */   "Close": () => (/* binding */ Close),
/* harmony export */   "Spinner": () => (/* binding */ Spinner)
/* harmony export */ });
/* harmony import */ var _svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./svg */ "./node_modules/uikit/src/js/core/svg.js");
/* harmony import */ var _images_components_close_icon_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../images/components/close-icon.svg */ "./node_modules/uikit/src/images/components/close-icon.svg");
/* harmony import */ var _images_components_close_large_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../images/components/close-large.svg */ "./node_modules/uikit/src/images/components/close-large.svg");
/* harmony import */ var _images_components_marker_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../images/components/marker.svg */ "./node_modules/uikit/src/images/components/marker.svg");
/* harmony import */ var _images_components_navbar_toggle_icon_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../images/components/navbar-toggle-icon.svg */ "./node_modules/uikit/src/images/components/navbar-toggle-icon.svg");
/* harmony import */ var _images_components_overlay_icon_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../images/components/overlay-icon.svg */ "./node_modules/uikit/src/images/components/overlay-icon.svg");
/* harmony import */ var _images_components_pagination_next_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../images/components/pagination-next.svg */ "./node_modules/uikit/src/images/components/pagination-next.svg");
/* harmony import */ var _images_components_pagination_previous_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../images/components/pagination-previous.svg */ "./node_modules/uikit/src/images/components/pagination-previous.svg");
/* harmony import */ var _images_components_search_icon_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../images/components/search-icon.svg */ "./node_modules/uikit/src/images/components/search-icon.svg");
/* harmony import */ var _images_components_search_large_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../images/components/search-large.svg */ "./node_modules/uikit/src/images/components/search-large.svg");
/* harmony import */ var _images_components_search_navbar_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../images/components/search-navbar.svg */ "./node_modules/uikit/src/images/components/search-navbar.svg");
/* harmony import */ var _images_components_slidenav_next_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../images/components/slidenav-next.svg */ "./node_modules/uikit/src/images/components/slidenav-next.svg");
/* harmony import */ var _images_components_slidenav_next_large_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../images/components/slidenav-next-large.svg */ "./node_modules/uikit/src/images/components/slidenav-next-large.svg");
/* harmony import */ var _images_components_slidenav_previous_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../images/components/slidenav-previous.svg */ "./node_modules/uikit/src/images/components/slidenav-previous.svg");
/* harmony import */ var _images_components_slidenav_previous_large_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../images/components/slidenav-previous-large.svg */ "./node_modules/uikit/src/images/components/slidenav-previous-large.svg");
/* harmony import */ var _images_components_spinner_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../images/components/spinner.svg */ "./node_modules/uikit/src/images/components/spinner.svg");
/* harmony import */ var _images_components_totop_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../images/components/totop.svg */ "./node_modules/uikit/src/images/components/totop.svg");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");


















const icons = {
  spinner: _images_components_spinner_svg__WEBPACK_IMPORTED_MODULE_0__["default"],
  totop: _images_components_totop_svg__WEBPACK_IMPORTED_MODULE_1__["default"],
  marker: _images_components_marker_svg__WEBPACK_IMPORTED_MODULE_2__["default"],
  'close-icon': _images_components_close_icon_svg__WEBPACK_IMPORTED_MODULE_3__["default"],
  'close-large': _images_components_close_large_svg__WEBPACK_IMPORTED_MODULE_4__["default"],
  'navbar-toggle-icon': _images_components_navbar_toggle_icon_svg__WEBPACK_IMPORTED_MODULE_5__["default"],
  'overlay-icon': _images_components_overlay_icon_svg__WEBPACK_IMPORTED_MODULE_6__["default"],
  'pagination-next': _images_components_pagination_next_svg__WEBPACK_IMPORTED_MODULE_7__["default"],
  'pagination-previous': _images_components_pagination_previous_svg__WEBPACK_IMPORTED_MODULE_8__["default"],
  'search-icon': _images_components_search_icon_svg__WEBPACK_IMPORTED_MODULE_9__["default"],
  'search-large': _images_components_search_large_svg__WEBPACK_IMPORTED_MODULE_10__["default"],
  'search-navbar': _images_components_search_navbar_svg__WEBPACK_IMPORTED_MODULE_11__["default"],
  'slidenav-next': _images_components_slidenav_next_svg__WEBPACK_IMPORTED_MODULE_12__["default"],
  'slidenav-next-large': _images_components_slidenav_next_large_svg__WEBPACK_IMPORTED_MODULE_13__["default"],
  'slidenav-previous': _images_components_slidenav_previous_svg__WEBPACK_IMPORTED_MODULE_14__["default"],
  'slidenav-previous-large': _images_components_slidenav_previous_large_svg__WEBPACK_IMPORTED_MODULE_15__["default"]
};
const Icon = {
  install,
  extends: _svg__WEBPACK_IMPORTED_MODULE_16__["default"],
  args: 'icon',
  props: ['icon'],
  data: {
    include: ['focusable']
  },
  isIcon: true,

  beforeConnect() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_17__.addClass)(this.$el, 'uk-icon');
  },

  methods: {
    getSvg() {
      const icon = getIcon(this.icon);

      if (!icon) {
        return uikit_util__WEBPACK_IMPORTED_MODULE_18__.Promise.reject('Icon not found.');
      }

      return uikit_util__WEBPACK_IMPORTED_MODULE_18__.Promise.resolve(icon);
    }

  }
};
/* harmony default export */ __webpack_exports__["default"] = (Icon);
const IconComponent = {
  args: false,
  extends: Icon,
  data: vm => ({
    icon: (0,uikit_util__WEBPACK_IMPORTED_MODULE_19__.hyphenate)(vm.constructor.options.name)
  }),

  beforeConnect() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_17__.addClass)(this.$el, this.$name);
  }

};
const Slidenav = {
  extends: IconComponent,

  beforeConnect() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_17__.addClass)(this.$el, 'uk-slidenav');
  },

  computed: {
    icon(_ref, $el) {
      let {
        icon
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_17__.hasClass)($el, 'uk-slidenav-large') ? "".concat(icon, "-large") : icon;
    }

  }
};
const Search = {
  extends: IconComponent,
  computed: {
    icon(_ref2, $el) {
      let {
        icon
      } = _ref2;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_17__.hasClass)($el, 'uk-search-icon') && (0,uikit_util__WEBPACK_IMPORTED_MODULE_20__.parents)($el, '.uk-search-large').length ? 'search-large' : (0,uikit_util__WEBPACK_IMPORTED_MODULE_20__.parents)($el, '.uk-search-navbar').length ? 'search-navbar' : icon;
    }

  }
};
const Close = {
  extends: IconComponent,
  computed: {
    icon() {
      return "close-".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_17__.hasClass)(this.$el, 'uk-close-large') ? 'large' : 'icon');
    }

  }
};
const Spinner = {
  extends: IconComponent,

  connected() {
    this.svg.then(svg => svg && this.ratio !== 1 && (0,uikit_util__WEBPACK_IMPORTED_MODULE_21__.css)((0,uikit_util__WEBPACK_IMPORTED_MODULE_22__.$)('circle', svg), 'strokeWidth', 1 / this.ratio));
  }

};
const parsed = {};

function install(UIkit) {
  UIkit.icon.add = (name, svg) => {
    const added = (0,uikit_util__WEBPACK_IMPORTED_MODULE_19__.isString)(name) ? {
      [name]: svg
    } : name;
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_19__.each)(added, (svg, name) => {
      icons[name] = svg;
      delete parsed[name];
    });

    if (UIkit._initialized) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_22__.apply)(document.body, el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_19__.each)(UIkit.getComponents(el), cmp => {
        cmp.$options.isIcon && cmp.icon in added && cmp.$reset();
      }));
    }
  };
}

function getIcon(icon) {
  if (!icons[icon]) {
    return null;
  }

  if (!parsed[icon]) {
    parsed[icon] = (0,uikit_util__WEBPACK_IMPORTED_MODULE_22__.$)((icons[applyRtl(icon)] || icons[icon]).trim());
  }

  return parsed[icon].cloneNode(true);
}

function applyRtl(icon) {
  return uikit_util__WEBPACK_IMPORTED_MODULE_23__.isRtl ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_19__.swap)((0,uikit_util__WEBPACK_IMPORTED_MODULE_19__.swap)(icon, 'left', 'right'), 'previous', 'next') : icon;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/img.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/core/img.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/ajax.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  args: 'dataSrc',
  props: {
    dataSrc: String,
    dataSrcset: Boolean,
    sizes: String,
    width: Number,
    height: Number,
    offsetTop: String,
    offsetLeft: String,
    target: String
  },
  data: {
    dataSrc: '',
    dataSrcset: false,
    sizes: false,
    width: false,
    height: false,
    offsetTop: '50vh',
    offsetLeft: '50vw',
    target: false
  },
  computed: {
    cacheKey(_ref) {
      let {
        dataSrc
      } = _ref;
      return "".concat(this.$name, ".").concat(dataSrc);
    },

    width(_ref2) {
      let {
        width,
        dataWidth
      } = _ref2;
      return width || dataWidth;
    },

    height(_ref3) {
      let {
        height,
        dataHeight
      } = _ref3;
      return height || dataHeight;
    },

    sizes(_ref4) {
      let {
        sizes,
        dataSizes
      } = _ref4;
      return sizes || dataSizes;
    },

    isImg(_, $el) {
      return isImg($el);
    },

    target: {
      get(_ref5) {
        let {
          target
        } = _ref5;
        return [this.$el, ...(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.queryAll)(target, this.$el)];
      },

      watch() {
        this.observe();
      }

    },

    offsetTop(_ref6) {
      let {
        offsetTop
      } = _ref6;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toPx)(offsetTop, 'height');
    },

    offsetLeft(_ref7) {
      let {
        offsetLeft
      } = _ref7;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toPx)(offsetLeft, 'width');
    }

  },

  connected() {
    if (!window.IntersectionObserver) {
      setSrcAttrs(this.$el, this.dataSrc, this.dataSrcset, this.sizes);
      return;
    }

    if (storage[this.cacheKey]) {
      setSrcAttrs(this.$el, storage[this.cacheKey], this.dataSrcset, this.sizes);
    } else if (this.isImg && this.width && this.height) {
      setSrcAttrs(this.$el, getPlaceholderImage(this.width, this.height, this.sizes));
    }

    this.observer = new IntersectionObserver(this.load, {
      rootMargin: "".concat(this.offsetTop, "px ").concat(this.offsetLeft, "px")
    });
    requestAnimationFrame(this.observe);
  },

  disconnected() {
    this.observer && this.observer.disconnect();
  },

  update: {
    read(_ref8) {
      let {
        image
      } = _ref8;

      if (!this.observer) {
        return false;
      }

      if (!image && document.readyState === 'complete') {
        this.load(this.observer.takeRecords());
      }

      if (this.isImg) {
        return false;
      }

      image && image.then(img => img && img.currentSrc !== '' && setSrcAttrs(this.$el, currentSrc(img)));
    },

    write(data) {
      if (this.dataSrcset && window.devicePixelRatio !== 1) {
        const bgSize = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(this.$el, 'backgroundSize');

        if (bgSize.match(/^(auto\s?)+$/) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toFloat)(bgSize) === data.bgSize) {
          data.bgSize = getSourceSize(this.dataSrcset, this.sizes);
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(this.$el, 'backgroundSize', "".concat(data.bgSize, "px"));
        }
      }
    },

    events: ['resize']
  },
  methods: {
    load(entries) {
      // Old chromium based browsers (UC Browser) did not implement `isIntersecting`
      if (!entries.some(entry => (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(entry.isIntersecting) || entry.isIntersecting)) {
        return;
      }

      this._data.image = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.getImage)(this.dataSrc, this.dataSrcset, this.sizes).then(img => {
        setSrcAttrs(this.$el, currentSrc(img), img.srcset, img.sizes);
        storage[this.cacheKey] = currentSrc(img);
        return img;
      }, e => (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(this.$el, new e.constructor(e.type, e)));
      this.observer.disconnect();
    },

    observe() {
      if (this._connected && !this._data.image) {
        this.target.forEach(el => this.observer.observe(el));
      }
    }

  }
});

function setSrcAttrs(el, src, srcset, sizes) {
  if (isImg(el)) {
    const set = (prop, val) => val && val !== el[prop] && (el[prop] = val);

    set('sizes', sizes);
    set('srcset', srcset);
    set('src', src);
  } else if (src) {
    const change = !(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.includes)(el.style.backgroundImage, src);

    if (change) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(el, 'backgroundImage', "url(".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.escape)(src), ")"));
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(el, (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.createEvent)('load', false));
    }
  }
}

function getPlaceholderImage(width, height, sizes) {
  if (sizes) {
    ({
      width,
      height
    } = uikit_util__WEBPACK_IMPORTED_MODULE_5__.Dimensions.ratio({
      width,
      height
    }, 'width', (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toPx)(sizesToPixel(sizes))));
  }

  return "data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"".concat(width, "\" height=\"").concat(height, "\"></svg>");
}

const sizesRe = /\s*(.*?)\s*(\w+|calc\(.*?\))\s*(?:,|$)/g;

function sizesToPixel(sizes) {
  let matches;
  sizesRe.lastIndex = 0;

  while (matches = sizesRe.exec(sizes)) {
    if (!matches[1] || window.matchMedia(matches[1]).matches) {
      matches = evaluateSize(matches[2]);
      break;
    }
  }

  return matches || '100vw';
}

const sizeRe = /\d+(?:\w+|%)/g;
const additionRe = /[+-]?(\d+)/g;

function evaluateSize(size) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.startsWith)(size, 'calc') ? size.slice(5, -1).replace(sizeRe, size => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toPx)(size)).replace(/ /g, '').match(additionRe).reduce((a, b) => a + +b, 0) : size;
}

const srcSetRe = /\s+\d+w\s*(?:,|$)/g;

function getSourceSize(srcset, sizes) {
  const srcSize = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toPx)(sizesToPixel(sizes));
  const descriptors = (srcset.match(srcSetRe) || []).map(uikit_util__WEBPACK_IMPORTED_MODULE_5__.toFloat).sort((a, b) => a - b);
  return descriptors.filter(size => size >= srcSize)[0] || descriptors.pop() || '';
}

function isImg(el) {
  return el.tagName === 'IMG';
}

function currentSrc(el) {
  return el.currentSrc || el.src;
}

const key = '__test__';
let storage; // workaround for Safari's private browsing mode and accessing sessionStorage in Blink

try {
  storage = window.sessionStorage || {};
  storage[key] = 1;
  delete storage[key];
} catch (e) {
  storage = {};
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/leader.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/core/leader.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _mixin_media__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/media */ "./node_modules/uikit/src/js/mixin/media.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_1__["default"], _mixin_media__WEBPACK_IMPORTED_MODULE_2__["default"]],
  props: {
    fill: String
  },
  data: {
    fill: '',
    clsWrapper: 'uk-leader-fill',
    clsHide: 'uk-leader-hide',
    attrFill: 'data-fill'
  },
  computed: {
    fill(_ref) {
      let {
        fill
      } = _ref;
      return fill || (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.getCssVar)('leader-fill-content');
    }

  },

  connected() {
    [this.wrapper] = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.wrapInner)(this.$el, "<span class=\"".concat(this.clsWrapper, "\">"));
  },

  disconnected() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.unwrap)(this.wrapper.childNodes);
  },

  update: {
    read(_ref2) {
      let {
        changed,
        width
      } = _ref2;
      const prev = width;
      width = Math.floor(this.$el.offsetWidth / 2);
      return {
        width,
        fill: this.fill,
        changed: changed || prev !== width,
        hide: !this.matchMedia
      };
    },

    write(data) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toggleClass)(this.wrapper, this.clsHide, data.hide);

      if (data.changed) {
        data.changed = false;
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(this.wrapper, this.attrFill, new Array(data.width).join(data.fill));
      }
    },

    events: ['resize']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/margin.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/core/margin.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getRows": () => (/* binding */ getRows)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    margin: String,
    firstColumn: Boolean
  },
  data: {
    margin: 'uk-margin-small-top',
    firstColumn: 'uk-first-column'
  },
  update: {
    read() {
      const rows = getRows(this.$el.children);
      return {
        rows,
        columns: getColumns(rows)
      };
    },

    write(_ref) {
      let {
        columns,
        rows
      } = _ref;

      for (let i = 0; i < rows.length; i++) {
        for (let j = 0; j < rows[i].length; j++) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.toggleClass)(rows[i][j], this.margin, i !== 0);
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.toggleClass)(rows[i][j], this.firstColumn, !!~columns[0].indexOf(rows[i][j]));
        }
      }
    },

    events: ['resize']
  }
});
function getRows(items) {
  return sortBy(items, 'top', 'bottom');
}

function getColumns(rows) {
  const columns = [];

  for (let i = 0; i < rows.length; i++) {
    const sorted = sortBy(rows[i], 'left', 'right');

    for (let j = 0; j < sorted.length; j++) {
      columns[j] = !columns[j] ? sorted[j] : columns[j].concat(sorted[j]);
    }
  }

  return uikit_util__WEBPACK_IMPORTED_MODULE_2__.isRtl ? columns.reverse() : columns;
}

function sortBy(items, startProp, endProp) {
  const sorted = [[]];

  for (let i = 0; i < items.length; i++) {
    const el = items[i];

    if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isVisible)(el)) {
      continue;
    }

    let dim = getOffset(el);

    for (let j = sorted.length - 1; j >= 0; j--) {
      const current = sorted[j];

      if (!current[0]) {
        current.push(el);
        break;
      }

      let startDim;

      if (current[0].offsetParent === el.offsetParent) {
        startDim = getOffset(current[0]);
      } else {
        dim = getOffset(el, true);
        startDim = getOffset(current[0], true);
      }

      if (dim[startProp] >= startDim[endProp] - 1 && dim[startProp] !== startDim[startProp]) {
        sorted.push([el]);
        break;
      }

      if (dim[endProp] - 1 > startDim[startProp] || dim[startProp] === startDim[startProp]) {
        current.push(el);
        break;
      }

      if (j === 0) {
        sorted.unshift([el]);
        break;
      }
    }
  }

  return sorted;
}

function getOffset(element) {
  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  let {
    offsetTop,
    offsetLeft,
    offsetHeight,
    offsetWidth
  } = element;

  if (offset) {
    [offsetTop, offsetLeft] = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.offsetPosition)(element);
  }

  return {
    top: offsetTop,
    left: offsetLeft,
    bottom: offsetTop + offsetHeight,
    right: offsetLeft + offsetWidth
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/modal.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/core/modal.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/modal */ "./node_modules/uikit/src/js/mixin/modal.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  install,
  mixins: [_mixin_modal__WEBPACK_IMPORTED_MODULE_0__["default"]],
  data: {
    clsPage: 'uk-modal-page',
    selPanel: '.uk-modal-dialog',
    selClose: '.uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full'
  },
  events: [{
    name: 'show',
    self: true,

    handler() {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.hasClass)(this.panel, 'uk-margin-auto-vertical')) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.addClass)(this.$el, 'uk-flex');
      } else {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(this.$el, 'display', 'block');
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.height)(this.$el); // force reflow
    }

  }, {
    name: 'hidden',
    self: true,

    handler() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(this.$el, 'display', '');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.removeClass)(this.$el, 'uk-flex');
    }

  }]
});

function install(_ref) {
  let {
    modal
  } = _ref;

  modal.dialog = function (content, options) {
    const dialog = modal("<div class=\"uk-modal\">\n                <div class=\"uk-modal-dialog\">".concat(content, "</div>\n             </div>"), options);
    dialog.show();
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.on)(dialog.$el, 'hidden', () => uikit_util__WEBPACK_IMPORTED_MODULE_5__.Promise.resolve().then(() => dialog.$destroy(true)), {
      self: true
    });
    return dialog;
  };

  modal.alert = function (message, options) {
    return openDialog(_ref2 => {
      let {
        labels
      } = _ref2;
      return "<div class=\"uk-modal-body\">".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.isString)(message) ? message : (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.html)(message), "</div>\n            <div class=\"uk-modal-footer uk-text-right\">\n                <button class=\"uk-button uk-button-primary uk-modal-close\" autofocus>").concat(labels.ok, "</button>\n            </div>");
    }, options, deferred => deferred.resolve());
  };

  modal.confirm = function (message, options) {
    return openDialog(_ref3 => {
      let {
        labels
      } = _ref3;
      return "<form>\n                <div class=\"uk-modal-body\">".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.isString)(message) ? message : (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.html)(message), "</div>\n                <div class=\"uk-modal-footer uk-text-right\">\n                    <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">").concat(labels.cancel, "</button>\n                    <button class=\"uk-button uk-button-primary\" autofocus>").concat(labels.ok, "</button>\n                </div>\n            </form>");
    }, options, deferred => deferred.reject());
  };

  modal.prompt = function (message, value, options) {
    return openDialog(_ref4 => {
      let {
        labels
      } = _ref4;
      return "<form class=\"uk-form-stacked\">\n                <div class=\"uk-modal-body\">\n                    <label>".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.isString)(message) ? message : (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.html)(message), "</label>\n                    <input class=\"uk-input\" value=\"").concat(value || '', "\" autofocus>\n                </div>\n                <div class=\"uk-modal-footer uk-text-right\">\n                    <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">").concat(labels.cancel, "</button>\n                    <button class=\"uk-button uk-button-primary\">").concat(labels.ok, "</button>\n                </div>\n            </form>");
    }, options, deferred => deferred.resolve(null), dialog => (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.$)('input', dialog.$el).value);
  };

  modal.labels = {
    ok: 'Ok',
    cancel: 'Cancel'
  };

  function openDialog(tmpl, options, hideFn, submitFn) {
    options = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.assign)({
      bgClose: false,
      escClose: true,
      labels: modal.labels
    }, options);
    const dialog = modal.dialog(tmpl(options), options);
    const deferred = new uikit_util__WEBPACK_IMPORTED_MODULE_5__.Deferred();
    let resolved = false;
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.on)(dialog.$el, 'submit', 'form', e => {
      e.preventDefault();
      deferred.resolve(submitFn && submitFn(dialog));
      resolved = true;
      dialog.hide();
    });
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.on)(dialog.$el, 'hide', () => !resolved && hideFn(deferred));
    deferred.promise.dialog = dialog;
    return deferred.promise;
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/nav.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/core/nav.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordion */ "./node_modules/uikit/src/js/core/accordion.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  extends: _accordion__WEBPACK_IMPORTED_MODULE_0__["default"],
  data: {
    targets: '> .uk-parent',
    toggle: '> a',
    content: '> ul'
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/navbar.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/core/navbar.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _drop__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./drop */ "./node_modules/uikit/src/js/core/drop.js");
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _mixin_flex_bug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mixin/flex-bug */ "./node_modules/uikit/src/js/mixin/flex-bug.js");
/* harmony import */ var _mixin_container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/container */ "./node_modules/uikit/src/js/mixin/container.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");






const navItem = '.uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle';
/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_1__["default"], _mixin_container__WEBPACK_IMPORTED_MODULE_2__["default"], _mixin_flex_bug__WEBPACK_IMPORTED_MODULE_3__["default"]],
  props: {
    dropdown: String,
    mode: 'list',
    align: String,
    offset: Number,
    boundary: Boolean,
    boundaryAlign: Boolean,
    clsDrop: String,
    delayShow: Number,
    delayHide: Number,
    dropbar: Boolean,
    dropbarMode: String,
    dropbarAnchor: Boolean,
    duration: Number
  },
  data: {
    dropdown: navItem,
    align: uikit_util__WEBPACK_IMPORTED_MODULE_4__.isRtl ? 'right' : 'left',
    clsDrop: 'uk-navbar-dropdown',
    mode: undefined,
    offset: undefined,
    delayShow: undefined,
    delayHide: undefined,
    boundaryAlign: undefined,
    flip: 'x',
    boundary: true,
    dropbar: false,
    dropbarMode: 'slide',
    dropbarAnchor: false,
    duration: 200,
    forceHeight: true,
    selMinHeight: navItem,
    container: false
  },
  computed: {
    boundary(_ref, $el) {
      let {
        boundary,
        boundaryAlign
      } = _ref;
      return boundary === true || boundaryAlign ? $el : boundary;
    },

    dropbarAnchor(_ref2, $el) {
      let {
        dropbarAnchor
      } = _ref2;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.query)(dropbarAnchor, $el);
    },

    pos(_ref3) {
      let {
        align
      } = _ref3;
      return "bottom-".concat(align);
    },

    dropbar: {
      get(_ref4) {
        let {
          dropbar
        } = _ref4;

        if (!dropbar) {
          return null;
        }

        dropbar = this._dropbar || (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.query)(dropbar, this.$el) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$)('+ .uk-navbar-dropbar', this.$el);
        return dropbar ? dropbar : this._dropbar = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$)('<div></div>');
      },

      watch(dropbar) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.addClass)(dropbar, 'uk-navbar-dropbar');
      },

      immediate: true
    },

    dropContainer(_, $el) {
      return this.container || $el;
    },

    dropdowns: {
      get(_ref5, $el) {
        let {
          clsDrop
        } = _ref5;
        const dropdowns = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$$)(".".concat(clsDrop), $el);

        if (this.dropContainer !== $el) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$$)(".".concat(clsDrop), this.dropContainer).forEach(el => {
            const dropdown = this.getDropdown(el);

            if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.includes)(dropdowns, el) && dropdown && dropdown.target && (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.within)(dropdown.target, this.$el)) {
              dropdowns.push(el);
            }
          });
        }

        return dropdowns;
      },

      watch(dropdowns) {
        this.$create('drop', dropdowns.filter(el => !this.getDropdown(el)), (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.assign)({}, this.$props, {
          boundary: this.boundary,
          pos: this.pos,
          offset: this.dropbar || this.offset
        }));
      },

      immediate: true
    },

    toggles(_ref6, $el) {
      let {
        dropdown
      } = _ref6;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$$)(dropdown, $el);
    }

  },

  disconnected() {
    this.dropbar && (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.remove)(this.dropbar);
    delete this._dropbar;
  },

  events: [{
    name: 'mouseover focusin',

    delegate() {
      return this.dropdown;
    },

    handler(_ref7) {
      let {
        current
      } = _ref7;
      const active = this.getActive();

      if (active && (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.includes)(active.mode, 'hover') && active.target && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.within)(active.target, current) && !active.tracker.movesTo(active.$el)) {
        active.hide(false);
      }
    }

  }, {
    name: 'keydown',

    delegate() {
      return this.dropdown;
    },

    handler(e) {
      const {
        current,
        keyCode
      } = e;
      const active = this.getActive();

      if (keyCode === keyMap.DOWN && (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.hasAttr)(current, 'aria-expanded')) {
        e.preventDefault();

        if (!active || active.target !== current) {
          current.click();
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.once)(this.dropContainer, 'show', _ref8 => {
            let {
              target
            } = _ref8;
            return focusFirstFocusableElement(target);
          });
        } else {
          focusFirstFocusableElement(active.$el);
        }
      }

      handleNavItemNavigation(e, this.toggles, active);
    }

  }, {
    name: 'keydown',

    el() {
      return this.dropContainer;
    },

    delegate() {
      return ".".concat(this.clsDrop);
    },

    handler(e) {
      const {
        current,
        keyCode
      } = e;

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.includes)(this.dropdowns, current)) {
        return;
      }

      const active = this.getActive();
      const elements = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$$)(uikit_util__WEBPACK_IMPORTED_MODULE_9__.selFocusable, current);
      const i = (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.findIndex)(elements, el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.matches)(el, ':focus'));

      if (keyCode === keyMap.UP) {
        e.preventDefault();

        if (i > 0) {
          elements[i - 1].focus();
        }
      }

      if (keyCode === keyMap.DOWN) {
        e.preventDefault();

        if (i < elements.length - 1) {
          elements[i + 1].focus();
        }
      }

      if (keyCode === keyMap.ESC) {
        active && active.target && active.target.focus();
      }

      handleNavItemNavigation(e, this.toggles, active);
    }

  }, {
    name: 'mouseleave',

    el() {
      return this.dropbar;
    },

    filter() {
      return this.dropbar;
    },

    handler() {
      const active = this.getActive();

      if (active && (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.includes)(active.mode, 'hover') && !this.dropdowns.some(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.matches)(el, ':hover'))) {
        active.hide();
      }
    }

  }, {
    name: 'beforeshow',

    el() {
      return this.dropContainer;
    },

    filter() {
      return this.dropbar;
    },

    handler() {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.parent)(this.dropbar)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.after)(this.dropbarAnchor || this.$el, this.dropbar);
      }
    }

  }, {
    name: 'show',

    el() {
      return this.dropContainer;
    },

    filter() {
      return this.dropbar;
    },

    handler(_, _ref9) {
      let {
        $el,
        dir
      } = _ref9;

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.hasClass)($el, this.clsDrop)) {
        return;
      }

      if (this.dropbarMode === 'slide') {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.addClass)(this.dropbar, 'uk-navbar-dropbar-slide');
      }

      this.clsDrop && (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.addClass)($el, "".concat(this.clsDrop, "-dropbar"));

      if (dir === 'bottom') {
        this.transitionTo($el.offsetHeight + (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.css)($el, 'marginTop')) + (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.css)($el, 'marginBottom')), $el);
      }
    }

  }, {
    name: 'beforehide',

    el() {
      return this.dropContainer;
    },

    filter() {
      return this.dropbar;
    },

    handler(e, _ref10) {
      let {
        $el
      } = _ref10;
      const active = this.getActive();

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.matches)(this.dropbar, ':hover') && active && active.$el === $el) {
        e.preventDefault();
      }
    }

  }, {
    name: 'hide',

    el() {
      return this.dropContainer;
    },

    filter() {
      return this.dropbar;
    },

    handler(_, _ref11) {
      let {
        $el
      } = _ref11;

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.hasClass)($el, this.clsDrop)) {
        return;
      }

      const active = this.getActive();

      if (!active || active && active.$el === $el) {
        this.transitionTo(0);
      }
    }

  }],
  methods: {
    getActive() {
      return _drop__WEBPACK_IMPORTED_MODULE_13__.active && (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.within)(_drop__WEBPACK_IMPORTED_MODULE_13__.active.target, this.$el) && _drop__WEBPACK_IMPORTED_MODULE_13__.active;
    },

    transitionTo(newHeight, el) {
      const {
        dropbar
      } = this;
      const oldHeight = (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.isVisible)(dropbar) ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_14__.height)(dropbar) : 0;
      el = oldHeight < newHeight && el;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.css)(el, 'clip', "rect(0,".concat(el.offsetWidth, "px,").concat(oldHeight, "px,0)"));
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_14__.height)(dropbar, oldHeight);
      uikit_util__WEBPACK_IMPORTED_MODULE_15__.Transition.cancel([el, dropbar]);
      return uikit_util__WEBPACK_IMPORTED_MODULE_16__.Promise.all([uikit_util__WEBPACK_IMPORTED_MODULE_15__.Transition.start(dropbar, {
        height: newHeight
      }, this.duration), uikit_util__WEBPACK_IMPORTED_MODULE_15__.Transition.start(el, {
        clip: "rect(0,".concat(el.offsetWidth, "px,").concat(newHeight, "px,0)")
      }, this.duration)]).catch(uikit_util__WEBPACK_IMPORTED_MODULE_8__.noop).then(() => {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.css)(el, {
          clip: ''
        });
        this.$update(dropbar);
      });
    },

    getDropdown(el) {
      return this.$getComponent(el, 'drop') || this.$getComponent(el, 'dropdown');
    }

  }
});

function handleNavItemNavigation(e, toggles, active) {
  const {
    current,
    keyCode
  } = e;
  const target = active && active.target || current;
  const i = toggles.indexOf(target); // Left

  if (keyCode === keyMap.LEFT && i > 0) {
    active && active.hide(false);
    toggles[i - 1].focus();
  } // Right


  if (keyCode === keyMap.RIGHT && i < toggles.length - 1) {
    active && active.hide(false);
    toggles[i + 1].focus();
  }

  if (keyCode === keyMap.TAB) {
    target.focus();
    active && active.hide(false);
  }
}

function focusFirstFocusableElement(el) {
  if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$)(':focus', el)) {
    const focusEl = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$)(uikit_util__WEBPACK_IMPORTED_MODULE_9__.selFocusable, el);

    if (focusEl) {
      focusEl.focus();
    }
  }
}

const keyMap = {
  TAB: 9,
  ESC: 27,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40
};

/***/ }),

/***/ "./node_modules/uikit/src/js/core/offcanvas.js":
/*!*****************************************************!*\
  !*** ./node_modules/uikit/src/js/core/offcanvas.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mixin_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/modal */ "./node_modules/uikit/src/js/mixin/modal.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_modal__WEBPACK_IMPORTED_MODULE_1__["default"]],
  args: 'mode',
  props: {
    mode: String,
    flip: Boolean,
    overlay: Boolean
  },
  data: {
    mode: 'slide',
    flip: false,
    overlay: false,
    clsPage: 'uk-offcanvas-page',
    clsContainer: 'uk-offcanvas-container',
    selPanel: '.uk-offcanvas-bar',
    clsFlip: 'uk-offcanvas-flip',
    clsContainerAnimation: 'uk-offcanvas-container-animation',
    clsSidebarAnimation: 'uk-offcanvas-bar-animation',
    clsMode: 'uk-offcanvas',
    clsOverlay: 'uk-offcanvas-overlay',
    selClose: '.uk-offcanvas-close',
    container: false
  },
  computed: {
    clsFlip(_ref) {
      let {
        flip,
        clsFlip
      } = _ref;
      return flip ? clsFlip : '';
    },

    clsOverlay(_ref2) {
      let {
        overlay,
        clsOverlay
      } = _ref2;
      return overlay ? clsOverlay : '';
    },

    clsMode(_ref3) {
      let {
        mode,
        clsMode
      } = _ref3;
      return "".concat(clsMode, "-").concat(mode);
    },

    clsSidebarAnimation(_ref4) {
      let {
        mode,
        clsSidebarAnimation
      } = _ref4;
      return mode === 'none' || mode === 'reveal' ? '' : clsSidebarAnimation;
    },

    clsContainerAnimation(_ref5) {
      let {
        mode,
        clsContainerAnimation
      } = _ref5;
      return mode !== 'push' && mode !== 'reveal' ? '' : clsContainerAnimation;
    },

    transitionElement(_ref6) {
      let {
        mode
      } = _ref6;
      return mode === 'reveal' ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(this.panel) : this.panel;
    }

  },
  update: {
    read() {
      if (this.isToggled() && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isVisible)(this.$el)) {
        this.hide();
      }
    },

    events: ['resize']
  },
  events: [{
    name: 'click',

    delegate() {
      return 'a[href^="#"]';
    },

    handler(_ref7) {
      let {
        current: {
          hash
        },
        defaultPrevented
      } = _ref7;

      if (!defaultPrevented && hash && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)(hash, document.body)) {
        this.hide();
      }
    }

  }, {
    name: 'touchstart',
    passive: true,

    el() {
      return this.panel;
    },

    handler(_ref8) {
      let {
        targetTouches
      } = _ref8;

      if (targetTouches.length === 1) {
        this.clientY = targetTouches[0].clientY;
      }
    }

  }, {
    name: 'touchmove',
    self: true,
    passive: false,

    filter() {
      return this.overlay;
    },

    handler(e) {
      e.cancelable && e.preventDefault();
    }

  }, {
    name: 'touchmove',
    passive: false,

    el() {
      return this.panel;
    },

    handler(e) {
      if (e.targetTouches.length !== 1) {
        return;
      }

      const clientY = e.targetTouches[0].clientY - this.clientY;
      const {
        scrollTop,
        scrollHeight,
        clientHeight
      } = this.panel;

      if (clientHeight >= scrollHeight || scrollTop === 0 && clientY > 0 || scrollHeight - scrollTop <= clientHeight && clientY < 0) {
        e.cancelable && e.preventDefault();
      }
    }

  }, {
    name: 'show',
    self: true,

    handler() {
      if (this.mode === 'reveal' && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasClass)((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(this.panel), this.clsMode)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.wrapAll)(this.panel, '<div>');
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(this.panel), this.clsMode);
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(document.documentElement, 'overflowY', this.overlay ? 'hidden' : '');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)(document.body, this.clsContainer, this.clsFlip);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(document.body, 'touch-action', 'pan-y pinch-zoom');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(this.$el, 'display', 'block');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)(this.$el, this.clsOverlay);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)(this.panel, this.clsSidebarAnimation, this.mode !== 'reveal' ? this.clsMode : '');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.height)(document.body); // force reflow

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)(document.body, this.clsContainerAnimation);
      this.clsContainerAnimation && suppressUserScale();
    }

  }, {
    name: 'hide',
    self: true,

    handler() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.removeClass)(document.body, this.clsContainerAnimation);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(document.body, 'touch-action', '');
    }

  }, {
    name: 'hidden',
    self: true,

    handler() {
      this.clsContainerAnimation && resumeUserScale();

      if (this.mode === 'reveal') {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.unwrap)(this.panel);
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.removeClass)(this.panel, this.clsSidebarAnimation, this.clsMode);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.removeClass)(this.$el, this.clsOverlay);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(this.$el, 'display', '');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.removeClass)(document.body, this.clsContainer, this.clsFlip);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(document.documentElement, 'overflowY', '');
    }

  }, {
    name: 'swipeLeft swipeRight',

    handler(e) {
      if (this.isToggled() && (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.endsWith)(e.type, 'Left') ^ this.flip) {
        this.hide();
      }
    }

  }]
}); // Chrome in responsive mode zooms page upon opening offcanvas

function suppressUserScale() {
  getViewport().content += ',user-scalable=0';
}

function resumeUserScale() {
  const viewport = getViewport();
  viewport.content = viewport.content.replace(/,user-scalable=0$/, '');
}

function getViewport() {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)('meta[name="viewport"]', document.head) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.append)(document.head, '<meta name="viewport">');
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/overflow-auto.js":
/*!*********************************************************!*\
  !*** ./node_modules/uikit/src/js/core/overflow-auto.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_0__["default"]],
  props: {
    selContainer: String,
    selContent: String,
    minHeight: Number
  },
  data: {
    selContainer: '.uk-modal',
    selContent: '.uk-modal-dialog',
    minHeight: 150
  },
  computed: {
    container(_ref, $el) {
      let {
        selContainer
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.closest)($el, selContainer);
    },

    content(_ref2, $el) {
      let {
        selContent
      } = _ref2;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.closest)($el, selContent);
    }

  },

  connected() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(this.$el, 'minHeight', this.minHeight);
  },

  update: {
    read() {
      if (!this.content || !this.container || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.isVisible)(this.$el)) {
        return false;
      }

      return {
        current: (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(this.$el, 'maxHeight')),
        max: Math.max(this.minHeight, (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.height)(this.container) - ((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.dimensions)(this.content).height - (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.height)(this.$el)))
      };
    },

    write(_ref3) {
      let {
        current,
        max
      } = _ref3;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(this.$el, 'maxHeight', max);

      if (Math.round(current) !== Math.round(max)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(this.$el, 'resize');
      }
    },

    events: ['resize']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/responsive.js":
/*!******************************************************!*\
  !*** ./node_modules/uikit/src/js/core/responsive.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  props: ['width', 'height'],

  connected() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.$el, 'uk-responsive-width');
  },

  update: {
    read() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.isVisible)(this.$el) && this.width && this.height ? {
        width: (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.width)((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.parent)(this.$el)),
        height: this.height
      } : false;
    },

    write(dim) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.height)(this.$el, uikit_util__WEBPACK_IMPORTED_MODULE_3__.Dimensions.contain({
        height: this.height,
        width: this.width
      }, dim).height);
    },

    events: ['resize']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/scroll.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/core/scroll.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    offset: Number
  },
  data: {
    offset: 0
  },
  methods: {
    scrollTo(el) {
      el = el && (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.$)(el) || document.body;

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.trigger)(this.$el, 'beforescroll', [this, el])) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.scrollIntoView)(el, {
          offset: this.offset
        }).then(() => (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.trigger)(this.$el, 'scrolled', [this, el]));
      }
    }

  },
  events: {
    click(e) {
      if (e.defaultPrevented) {
        return;
      }

      e.preventDefault();
      this.scrollTo("#".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.escape)(decodeURIComponent((this.$el.hash || '').substr(1)))));
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/scrollspy-nav.js":
/*!*********************************************************!*\
  !*** ./node_modules/uikit/src/js/core/scrollspy-nav.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    cls: String,
    closest: String,
    scroll: Boolean,
    overflow: Boolean,
    offset: Number
  },
  data: {
    cls: 'uk-active',
    closest: false,
    scroll: false,
    overflow: true,
    offset: 0
  },
  computed: {
    links: {
      get(_, $el) {
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.$$)('a[href^="#"]', $el).filter(el => el.hash);
      },

      watch(links) {
        if (this.scroll) {
          this.$create('scroll', links, {
            offset: this.offset || 0
          });
        }
      },

      immediate: true
    },

    targets() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.$$)(this.links.map(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.escape)(el.hash).substr(1)).join(','));
    },

    elements(_ref) {
      let {
        closest: selector
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.closest)(this.links, selector || '*');
    }

  },
  update: [{
    read() {
      const {
        length
      } = this.targets;

      if (!length || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isVisible)(this.$el)) {
        return false;
      }

      const [scrollElement] = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.scrollParents)(this.targets, /auto|scroll/, true);
      const {
        scrollTop,
        scrollHeight
      } = scrollElement;
      const max = scrollHeight - (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.getViewportClientHeight)(scrollElement);
      let active = false;

      if (scrollTop === max) {
        active = length - 1;
      } else {
        this.targets.every((el, i) => {
          if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.offset)(el).top - (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.offset)((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.getViewport)(scrollElement)).top - this.offset <= 0) {
            active = i;
            return true;
          }
        });

        if (active === false && this.overflow) {
          active = 0;
        }
      }

      return {
        active
      };
    },

    write(_ref2) {
      let {
        active
      } = _ref2;
      const changed = active !== false && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.hasClass)(this.elements[active], this.cls);
      this.links.forEach(el => el.blur());
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.removeClass)(this.elements, this.cls);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.addClass)(this.elements[active], this.cls);

      if (changed) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(this.$el, 'active', [active, this.elements[active]]);
      }
    },

    events: ['scroll', 'resize']
  }]
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/scrollspy.js":
/*!*****************************************************!*\
  !*** ./node_modules/uikit/src/js/core/scrollspy.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");

const stateKey = '_ukScrollspy';
/* harmony default export */ __webpack_exports__["default"] = ({
  args: 'cls',
  props: {
    cls: String,
    target: String,
    hidden: Boolean,
    offsetTop: Number,
    offsetLeft: Number,
    repeat: Boolean,
    delay: Number
  },
  data: () => ({
    cls: false,
    target: false,
    hidden: true,
    offsetTop: 0,
    offsetLeft: 0,
    repeat: false,
    delay: 0,
    inViewClass: 'uk-scrollspy-inview'
  }),
  computed: {
    elements: {
      get(_ref, $el) {
        let {
          target
        } = _ref;
        return target ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.$$)(target, $el) : [$el];
      },

      watch(elements) {
        if (this.hidden) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.css)((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.filter)(elements, ":not(.".concat(this.inViewClass, ")")), 'visibility', 'hidden');
        }
      },

      immediate: true
    }
  },

  disconnected() {
    this.elements.forEach(el => {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.removeClass)(el, this.inViewClass, el[stateKey] ? el[stateKey].cls : '');
      delete el[stateKey];
    });
  },

  update: [{
    read(data) {
      // Let child components be applied at least once first
      if (!data.update) {
        uikit_util__WEBPACK_IMPORTED_MODULE_4__.Promise.resolve().then(() => {
          this.$emit();
          data.update = true;
        });
        return false;
      }

      this.elements.forEach(el => {
        if (!el[stateKey]) {
          el[stateKey] = {
            cls: (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.data)(el, 'uk-scrollspy-class') || this.cls
          };
        }

        el[stateKey].show = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.isInView)(el, this.offsetTop, this.offsetLeft);
      });
    },

    write(data) {
      this.elements.forEach(el => {
        const state = el[stateKey];

        if (state.show && !state.inview && !state.queued) {
          state.queued = true;
          data.promise = (data.promise || uikit_util__WEBPACK_IMPORTED_MODULE_4__.Promise.resolve()).then(() => new uikit_util__WEBPACK_IMPORTED_MODULE_4__.Promise(resolve => setTimeout(resolve, this.delay))).then(() => {
            this.toggle(el, true);
            setTimeout(() => {
              state.queued = false;
              this.$emit();
            }, 300);
          });
        } else if (!state.show && state.inview && !state.queued && this.repeat) {
          this.toggle(el, false);
        }
      });
    },

    events: ['scroll', 'resize']
  }],
  methods: {
    toggle(el, inview) {
      const state = el[stateKey];
      state.off && state.off();
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.css)(el, 'visibility', !inview && this.hidden ? 'hidden' : '');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(el, this.inViewClass, inview);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(el, state.cls);

      if (/\buk-animation-/.test(state.cls)) {
        state.off = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.once)(el, 'animationcancel animationend', () => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.removeClasses)(el, 'uk-animation-[\\w-]+'));
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(el, inview ? 'inview' : 'outview');
      state.inview = inview;
      this.$update(el);
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/sticky.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/core/sticky.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _mixin_media__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/media */ "./node_modules/uikit/src/js/mixin/media.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_0__["default"], _mixin_media__WEBPACK_IMPORTED_MODULE_1__["default"]],
  props: {
    top: null,
    bottom: Boolean,
    offset: String,
    animation: String,
    clsActive: String,
    clsInactive: String,
    clsFixed: String,
    clsBelow: String,
    selTarget: String,
    widthElement: Boolean,
    showOnUp: Boolean,
    targetOffset: Number
  },
  data: {
    top: 0,
    bottom: false,
    offset: 0,
    animation: '',
    clsActive: 'uk-active',
    clsInactive: '',
    clsFixed: 'uk-sticky-fixed',
    clsBelow: 'uk-sticky-below',
    selTarget: '',
    widthElement: false,
    showOnUp: false,
    targetOffset: false
  },
  computed: {
    offset(_ref) {
      let {
        offset
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toPx)(offset);
    },

    selTarget(_ref2, $el) {
      let {
        selTarget
      } = _ref2;
      return selTarget && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)(selTarget, $el) || $el;
    },

    widthElement(_ref3, $el) {
      let {
        widthElement
      } = _ref3;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.query)(widthElement, $el) || this.placeholder;
    },

    isActive: {
      get() {
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.hasClass)(this.selTarget, this.clsActive);
      },

      set(value) {
        if (value && !this.isActive) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.replaceClass)(this.selTarget, this.clsInactive, this.clsActive);
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.trigger)(this.$el, 'active');
        } else if (!value && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.hasClass)(this.selTarget, this.clsInactive)) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.replaceClass)(this.selTarget, this.clsActive, this.clsInactive);
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.trigger)(this.$el, 'inactive');
        }
      }

    }
  },

  connected() {
    this.placeholder = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)('+ .uk-sticky-placeholder', this.$el) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)('<div class="uk-sticky-placeholder"></div>');
    this.isFixed = false;
    this.isActive = false;
  },

  disconnected() {
    if (this.isFixed) {
      this.hide();
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.removeClass)(this.selTarget, this.clsInactive);
    }

    (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.remove)(this.placeholder);
    this.placeholder = null;
    this.widthElement = null;
  },

  events: [{
    name: 'load hashchange popstate',

    el() {
      return window;
    },

    handler() {
      if (!(this.targetOffset !== false && location.hash && window.pageYOffset > 0)) {
        return;
      }

      const target = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)(location.hash);

      if (target) {
        uikit_util__WEBPACK_IMPORTED_MODULE_7__.fastdom.read(() => {
          const {
            top
          } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.offset)(target);
          const elTop = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.offset)(this.$el).top;
          const elHeight = this.$el.offsetHeight;

          if (this.isFixed && elTop + elHeight >= top && elTop <= top + target.offsetHeight) {
            (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.scrollTop)(window, top - elHeight - ((0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.isNumeric)(this.targetOffset) ? this.targetOffset : 0) - this.offset);
          }
        });
      }
    }

  }],
  update: [{
    read(_ref4, types) {
      let {
        height
      } = _ref4;
      this.inactive = !this.matchMedia || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.isVisible)(this.$el);

      if (this.inactive) {
        return false;
      }

      if (this.isActive && types.has('resize')) {
        this.hide();
        height = this.$el.offsetHeight;
        this.show();
      }

      height = this.isActive ? height : this.$el.offsetHeight;

      if (height + this.offset > (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.height)(window)) {
        this.inactive = true;
        return false;
      }

      const referenceElement = this.isFixed ? this.placeholder : this.$el;
      this.topOffset = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.offset)(referenceElement).top;
      this.bottomOffset = this.topOffset + height;
      this.offsetParentTop = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.offset)(referenceElement.offsetParent).top;
      const bottom = parseProp('bottom', this);
      this.top = Math.max((0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.toFloat)(parseProp('top', this)), this.topOffset) - this.offset;
      this.bottom = bottom && bottom - this.$el.offsetHeight;
      this.width = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.dimensions)((0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.isVisible)(this.widthElement) ? this.widthElement : this.$el).width;
      return {
        height,
        top: (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.offsetPosition)(this.placeholder)[0],
        margins: (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.css)(this.$el, ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'])
      };
    },

    write(_ref5) {
      let {
        height,
        margins
      } = _ref5;
      const {
        placeholder
      } = this;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.css)(placeholder, (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.assign)({
        height
      }, margins));

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.within)(placeholder, document)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.after)(this.$el, placeholder);
        placeholder.hidden = true;
      }

      this.isActive = !!this.isActive; // force self-assign
    },

    events: ['resize']
  }, {
    read(_ref6) {
      let {
        scroll = 0
      } = _ref6;
      this.scroll = window.pageYOffset;
      return {
        dir: scroll <= this.scroll ? 'down' : 'up',
        scroll: this.scroll
      };
    },

    write(data, types) {
      const now = Date.now();
      const isScrollUpdate = types.has('scroll');
      const {
        initTimestamp = 0,
        dir,
        lastDir,
        lastScroll,
        scroll,
        top
      } = data;
      data.lastScroll = scroll;

      if (scroll < 0 || scroll === lastScroll && isScrollUpdate || this.showOnUp && !isScrollUpdate && !this.isFixed) {
        return;
      }

      if (now - initTimestamp > 300 || dir !== lastDir) {
        data.initScroll = scroll;
        data.initTimestamp = now;
      }

      data.lastDir = dir;

      if (this.showOnUp && !this.isFixed && Math.abs(data.initScroll - scroll) <= 30 && Math.abs(lastScroll - scroll) <= 10) {
        return;
      }

      if (this.inactive || scroll < this.top || this.showOnUp && (scroll <= this.top || dir === 'down' && isScrollUpdate || dir === 'up' && !this.isFixed && scroll <= this.bottomOffset)) {
        if (!this.isFixed) {
          if (uikit_util__WEBPACK_IMPORTED_MODULE_12__.Animation.inProgress(this.$el) && top > scroll) {
            uikit_util__WEBPACK_IMPORTED_MODULE_12__.Animation.cancel(this.$el);
            this.hide();
          }

          return;
        }

        this.isFixed = false;

        if (this.animation && scroll > this.topOffset) {
          uikit_util__WEBPACK_IMPORTED_MODULE_12__.Animation.cancel(this.$el);
          uikit_util__WEBPACK_IMPORTED_MODULE_12__.Animation.out(this.$el, this.animation).then(() => this.hide(), uikit_util__WEBPACK_IMPORTED_MODULE_9__.noop);
        } else {
          this.hide();
        }
      } else if (this.isFixed) {
        this.update();
      } else if (this.animation) {
        uikit_util__WEBPACK_IMPORTED_MODULE_12__.Animation.cancel(this.$el);
        this.show();
        uikit_util__WEBPACK_IMPORTED_MODULE_12__.Animation["in"](this.$el, this.animation).catch(uikit_util__WEBPACK_IMPORTED_MODULE_9__.noop);
      } else {
        this.show();
      }
    },

    events: ['resize', 'scroll']
  }],
  methods: {
    show() {
      this.isFixed = true;
      this.update();
      this.placeholder.hidden = false;
    },

    hide() {
      this.isActive = false;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.removeClass)(this.$el, this.clsFixed, this.clsBelow);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.css)(this.$el, {
        position: '',
        top: '',
        width: ''
      });
      this.placeholder.hidden = true;
    },

    update() {
      const active = this.top !== 0 || this.scroll > this.top;
      let top = Math.max(0, this.offset);
      let position = 'fixed';

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.isNumeric)(this.bottom) && this.scroll > this.bottom - this.offset) {
        top = this.bottom - this.offsetParentTop;
        position = 'absolute';
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_11__.css)(this.$el, {
        position,
        top: "".concat(top, "px"),
        width: this.width
      });
      this.isActive = active;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toggleClass)(this.$el, this.clsBelow, this.scroll > this.bottomOffset);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.addClass)(this.$el, this.clsFixed);
    }

  }
});

function parseProp(prop, _ref7) {
  let {
    $props,
    $el,
    ["".concat(prop, "Offset")]: propOffset
  } = _ref7;
  const value = $props[prop];

  if (!value) {
    return;
  }

  if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.isString)(value) && value.match(/^-?\d/)) {
    return propOffset + (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toPx)(value);
  } else {
    return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.offset)(value === true ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.parent)($el) : (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.query)(value, $el)).bottom;
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/svg.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/core/svg.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getMaxPathLength": () => (/* binding */ getMaxPathLength)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/ajax.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  args: 'src',
  props: {
    id: Boolean,
    icon: String,
    src: String,
    style: String,
    width: Number,
    height: Number,
    ratio: Number,
    class: String,
    strokeAnimation: Boolean,
    focusable: Boolean,
    // IE 11
    attributes: 'list'
  },
  data: {
    ratio: 1,
    include: ['style', 'class', 'focusable'],
    class: '',
    strokeAnimation: false
  },

  beforeConnect() {
    this.class += ' uk-svg';
  },

  connected() {
    if (!this.icon && (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.src, '#')) {
      [this.src, this.icon] = this.src.split('#');
    }

    this.svg = this.getSvg().then(el => {
      if (this._connected) {
        const svg = insertSVG(el, this.$el);

        if (this.svgEl && svg !== this.svgEl) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.remove)(this.svgEl);
        }

        this.applyAttributes(svg, el);
        this.$emit();
        return this.svgEl = svg;
      }
    }, uikit_util__WEBPACK_IMPORTED_MODULE_2__.noop);
  },

  disconnected() {
    this.svg.then(svg => {
      if (!this._connected) {
        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isVoidElement)(this.$el)) {
          this.$el.hidden = false;
        }

        (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.remove)(svg);
        this.svgEl = null;
      }
    });
    this.svg = null;
  },

  update: {
    read() {
      return !!(this.strokeAnimation && this.svgEl && (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isVisible)(this.svgEl));
    },

    write() {
      applyAnimation(this.svgEl);
    },

    type: ['resize']
  },
  methods: {
    getSvg() {
      return loadSVG(this.src).then(svg => parseSVG(svg, this.icon) || uikit_util__WEBPACK_IMPORTED_MODULE_5__.Promise.reject('SVG not found.'));
    },

    applyAttributes(el, ref) {
      for (const prop in this.$options.props) {
        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.include, prop) && prop in this) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(el, prop, this[prop]);
        }
      }

      for (const attribute in this.attributes) {
        const [prop, value] = this.attributes[attribute].split(':', 2);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(el, prop, value);
      }

      if (!this.id) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.removeAttr)(el, 'id');
      }

      const props = ['width', 'height'];
      let dimensions = props.map(prop => this[prop]);

      if (!dimensions.some(val => val)) {
        dimensions = props.map(prop => (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(ref, prop));
      }

      const viewBox = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(ref, 'viewBox');

      if (viewBox && !dimensions.some(val => val)) {
        dimensions = viewBox.split(' ').slice(2);
      }

      dimensions.forEach((val, i) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(el, props[i], (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toFloat)(val) * this.ratio || null));
    }

  }
});
const loadSVG = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.memoize)(src => new uikit_util__WEBPACK_IMPORTED_MODULE_5__.Promise((resolve, reject) => {
  if (!src) {
    reject();
    return;
  }

  if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.startsWith)(src, 'data:')) {
    resolve(decodeURIComponent(src.split(',')[1]));
  } else {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.ajax)(src).then(xhr => resolve(xhr.response), () => reject('SVG not found.'));
  }
}));

function parseSVG(svg, icon) {
  if (icon && (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(svg, '<symbol')) {
    svg = parseSymbols(svg, icon) || svg;
  }

  svg = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)(svg.substr(svg.indexOf('<svg')));
  return svg && svg.hasChildNodes() && svg;
}

const symbolRe = /<symbol([^]*?id=(['"])(.+?)\2[^]*?<\/)symbol>/g;
const symbols = {};

function parseSymbols(svg, icon) {
  if (!symbols[svg]) {
    symbols[svg] = {};
    symbolRe.lastIndex = 0;
    let match;

    while (match = symbolRe.exec(svg)) {
      symbols[svg][match[3]] = "<svg xmlns=\"http://www.w3.org/2000/svg\"".concat(match[1], "svg>");
    }
  }

  return symbols[svg][icon];
}

function applyAnimation(el) {
  const length = getMaxPathLength(el);

  if (length) {
    el.style.setProperty('--uk-animation-stroke', length);
  }
}

function getMaxPathLength(el) {
  return Math.ceil(Math.max(0, ...(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$$)('[stroke]', el).map(stroke => {
    try {
      return stroke.getTotalLength();
    } catch (e) {
      return 0;
    }
  })));
}

function insertSVG(el, root) {
  if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isVoidElement)(root) || root.tagName === 'CANVAS') {
    root.hidden = true;
    const next = root.nextElementSibling;
    return equals(el, next) ? next : (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.after)(root, el);
  }

  const last = root.lastElementChild;
  return equals(el, last) ? last : (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.append)(root, el);
}

function equals(el, other) {
  return isSVG(el) && isSVG(other) && innerHTML(el) === innerHTML(other);
}

function isSVG(el) {
  return el && el.tagName === 'svg';
}

function innerHTML(el) {
  return (el.innerHTML || new XMLSerializer().serializeToString(el).replace(/<svg.*?>(.*?)<\/svg>/g, '$1')).replace(/\s/g, '');
}

/***/ }),

/***/ "./node_modules/uikit/src/js/core/switcher.js":
/*!****************************************************!*\
  !*** ./node_modules/uikit/src/js/core/switcher.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_togglable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_togglable__WEBPACK_IMPORTED_MODULE_0__["default"]],
  args: 'connect',
  props: {
    connect: String,
    toggle: String,
    itemNav: String,
    active: Number,
    swiping: Boolean
  },
  data: {
    connect: '~.uk-switcher',
    toggle: '> * > :first-child',
    itemNav: false,
    active: 0,
    swiping: true,
    cls: 'uk-active',
    attrItem: 'uk-switcher-item'
  },
  computed: {
    connects: {
      get(_ref, $el) {
        let {
          connect
        } = _ref;
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.queryAll)(connect, $el);
      },

      watch(connects) {
        if (this.swiping) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(connects, 'touch-action', 'pan-y pinch-zoom');
        }

        const index = this.index();
        this.connects.forEach(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.children)(el).forEach((child, i) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.toggleClass)(child, this.cls, i === index)));
      },

      immediate: true
    },
    toggles: {
      get(_ref2, $el) {
        let {
          toggle
        } = _ref2;
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.$$)(toggle, $el).filter(el => !(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.matches)(el, '.uk-disabled *, .uk-disabled, [disabled]'));
      },

      watch(toggles) {
        const active = this.index();
        this.show(~active ? active : toggles[this.active] || toggles[0]);
      },

      immediate: true
    },

    children() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.children)(this.$el).filter(child => this.toggles.some(toggle => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.within)(toggle, child)));
    }

  },
  events: [{
    name: 'click',

    delegate() {
      return this.toggle;
    },

    handler(e) {
      e.preventDefault();
      this.show(e.current);
    }

  }, {
    name: 'click',

    el() {
      return this.connects.concat(this.itemNav ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.queryAll)(this.itemNav, this.$el) : []);
    },

    delegate() {
      return "[".concat(this.attrItem, "],[data-").concat(this.attrItem, "]");
    },

    handler(e) {
      e.preventDefault();
      this.show((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.data)(e.current, this.attrItem));
    }

  }, {
    name: 'swipeRight swipeLeft',

    filter() {
      return this.swiping;
    },

    el() {
      return this.connects;
    },

    handler(_ref3) {
      let {
        type
      } = _ref3;
      this.show((0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.endsWith)(type, 'Left') ? 'next' : 'previous');
    }

  }],
  methods: {
    index() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.findIndex)(this.children, el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasClass)(el, this.cls));
    },

    show(item) {
      const prev = this.index();
      const next = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.getIndex)(this.children[(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.getIndex)(item, this.toggles, prev)], (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.children)(this.$el));

      if (prev === next) {
        return;
      }

      this.children.forEach((child, i) => {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.toggleClass)(child, this.cls, next === i);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.attr)(this.toggles[i], 'aria-expanded', next === i);
      });
      this.connects.forEach(_ref4 => {
        let {
          children
        } = _ref4;
        return this.toggleElement((0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.toNodes)(children).filter(child => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasClass)(child, this.cls)), false, prev >= 0).then(() => this.toggleElement(children[next], true, prev >= 0));
      });
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/tab.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/core/tab.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _switcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./switcher */ "./node_modules/uikit/src/js/core/switcher.js");
/* harmony import */ var _mixin_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_class__WEBPACK_IMPORTED_MODULE_0__["default"]],
  extends: _switcher__WEBPACK_IMPORTED_MODULE_1__["default"],
  props: {
    media: Boolean
  },
  data: {
    media: 960,
    attrItem: 'uk-tab-item'
  },

  connected() {
    const cls = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasClass)(this.$el, 'uk-tab-left') ? 'uk-tab-left' : (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasClass)(this.$el, 'uk-tab-right') ? 'uk-tab-right' : false;

    if (cls) {
      this.$create('toggle', this.$el, {
        cls,
        mode: 'media',
        media: this.media
      });
    }
  }

});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/toggle.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/core/toggle.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mixin_media__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mixin/media */ "./node_modules/uikit/src/js/mixin/media.js");
/* harmony import */ var _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mixin/togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");



const KEY_SPACE = 32;
/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_media__WEBPACK_IMPORTED_MODULE_0__["default"], _mixin_togglable__WEBPACK_IMPORTED_MODULE_1__["default"]],
  args: 'target',
  props: {
    href: String,
    target: null,
    mode: 'list',
    queued: Boolean
  },
  data: {
    href: false,
    target: false,
    mode: 'click',
    queued: true
  },

  connected() {
    if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'media') && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isFocusable)(this.$el)) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.attr)(this.$el, 'tabindex', '0');
    }
  },

  computed: {
    target: {
      get(_ref, $el) {
        let {
          href,
          target
        } = _ref;
        target = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.queryAll)(target || href, $el);
        return target.length && target || [$el];
      },

      watch() {
        this.updateAria();
      },

      immediate: true
    }
  },
  events: [{
    name: uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerDown,

    filter() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'hover');
    },

    handler(e) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.isTouch)(e) || this._showState) {
        return;
      } // Clicking a button does not give it focus on all browsers and platforms
      // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#clicking_and_focus


      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(this.$el, 'focus');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.once)(document, uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerDown, () => (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(this.$el, 'blur'), true, e => !(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.within)(e.target, this.$el)); // Prevent initial click to prevent double toggle through focus + click

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'click')) {
        this._preventClick = true;
      }
    }

  }, {
    name: "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerEnter, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerLeave, " focus blur"),

    filter() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'hover');
    },

    handler(e) {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.isTouch)(e)) {
        return;
      }

      const show = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)([uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerEnter, 'focus'], e.type);
      const expanded = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.attr)(this.$el, 'aria-expanded'); // Skip hide if still hovered or focused

      if (!show && (e.type === uikit_util__WEBPACK_IMPORTED_MODULE_6__.pointerLeave && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.matches)(this.$el, ':focus') || e.type === 'blur' && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.matches)(this.$el, ':hover'))) {
        return;
      } // Skip if state does not change e.g. hover + focus received


      if (this._showState && show === (expanded !== this._showState)) {
        // Ensure reset if state has changed through click
        if (!show) {
          this._showState = null;
        }

        return;
      }

      this._showState = show ? expanded : null;
      this.toggle("toggle".concat(show ? 'show' : 'hide'));
    }

  }, {
    name: 'keydown',

    filter() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'click') && this.$el.tagName !== 'INPUT';
    },

    handler(e) {
      if (e.keyCode === KEY_SPACE) {
        e.preventDefault();
        this.$el.click();
      }
    }

  }, {
    name: 'click',

    filter() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'click');
    },

    handler(e) {
      if (this._preventClick) {
        return this._preventClick = null;
      }

      let link;

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.closest)(e.target, 'a[href="#"], a[href=""]') || (link = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.closest)(e.target, 'a[href]')) && ((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.attr)(this.$el, 'aria-expanded') !== 'true' || link.hash && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.matches)(this.target, link.hash))) {
        e.preventDefault();
      }

      this.toggle();
    }

  }, {
    name: 'toggled',
    self: true,

    el() {
      return this.target;
    },

    handler(e, toggled) {
      if (e.target === this.target[0]) {
        this.updateAria(toggled);
      }
    }

  }],
  update: {
    read() {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'media') && this.media ? {
        match: this.matchMedia
      } : false;
    },

    write(_ref2) {
      let {
        match
      } = _ref2;
      const toggled = this.isToggled(this.target);

      if (match ? !toggled : toggled) {
        this.toggle();
      }
    },

    events: ['resize']
  },
  methods: {
    toggle(type) {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.trigger)(this.target, type || 'toggle', [this])) {
        return;
      }

      if (!this.queued) {
        return this.toggleElement(this.target);
      }

      const leaving = this.target.filter(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.hasClass)(el, this.clsLeave));

      if (leaving.length) {
        this.target.forEach(el => {
          const isLeaving = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(leaving, el);
          this.toggleElement(el, isLeaving, isLeaving);
        });
        return;
      }

      const toggled = this.target.filter(this.isToggled);
      this.toggleElement(toggled, false).then(() => this.toggleElement(this.target.filter(el => !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(toggled, el)), true));
    },

    updateAria(toggled) {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.mode, 'media')) {
        return;
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.attr)(this.$el, 'aria-expanded', (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isBoolean)(toggled) ? toggled : this.isToggled(this.target));
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/core/video.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/core/video.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/player.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  args: 'autoplay',
  props: {
    automute: Boolean,
    autoplay: Boolean
  },
  data: {
    automute: false,
    autoplay: true
  },
  computed: {
    inView(_ref) {
      let {
        autoplay
      } = _ref;
      return autoplay === 'inview';
    }

  },

  connected() {
    if (this.inView && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.hasAttr)(this.$el, 'preload')) {
      this.$el.preload = 'none';
    }

    if (this.automute) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.mute)(this.$el);
    }
  },

  update: {
    read() {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.isVideo)(this.$el)) {
        return false;
      }

      return {
        visible: (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isVisible)(this.$el) && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.$el, 'visibility') !== 'hidden',
        inView: this.inView && (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.isInView)(this.$el)
      };
    },

    write(_ref2) {
      let {
        visible,
        inView
      } = _ref2;

      if (!visible || this.inView && !inView) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.pause)(this.$el);
      } else if (this.autoplay === true || this.inView && inView) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.play)(this.$el);
      }
    },

    events: ['resize', 'scroll']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/animate.js":
/*!****************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/animate.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _internal_animate_fade__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/animate-fade */ "./node_modules/uikit/src/js/mixin/internal/animate-fade.js");
/* harmony import */ var _internal_animate_slide__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/animate-slide */ "./node_modules/uikit/src/js/mixin/internal/animate-slide.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    duration: Number,
    animation: Boolean
  },
  data: {
    duration: 150,
    animation: 'slide'
  },
  methods: {
    animate(action) {
      let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.$el;
      const name = this.animation;
      const animationFn = name === 'fade' ? _internal_animate_fade__WEBPACK_IMPORTED_MODULE_1__["default"] : name === 'delayed-fade' ? function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return (0,_internal_animate_fade__WEBPACK_IMPORTED_MODULE_1__["default"])(...args, 40);
      } : name ? _internal_animate_slide__WEBPACK_IMPORTED_MODULE_2__["default"] : () => {
        action();
        return uikit_util__WEBPACK_IMPORTED_MODULE_3__.Promise.resolve();
      };
      return animationFn(action, target, this.duration).then(() => this.$update(target, 'resize'), uikit_util__WEBPACK_IMPORTED_MODULE_4__.noop);
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/class.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/class.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  connected() {
    !(0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.hasClass)(this.$el, this.$name) && (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.addClass)(this.$el, this.$name);
  }

});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/container.js":
/*!******************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/container.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    container: Boolean
  },
  data: {
    container: true
  },
  computed: {
    container(_ref) {
      let {
        container
      } = _ref;
      return container === true && this.$container || container && (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.$)(container);
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/flex-bug.js":
/*!*****************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/flex-bug.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
 // IE 11 fix (min-height on a flex container won't apply to its flex items)

/* harmony default export */ __webpack_exports__["default"] = (uikit_util__WEBPACK_IMPORTED_MODULE_0__.isIE ? {
  props: {
    selMinHeight: String
  },
  data: {
    selMinHeight: false,
    forceHeight: false
  },
  computed: {
    elements(_ref, $el) {
      let {
        selMinHeight
      } = _ref;
      return selMinHeight ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.$$)(selMinHeight, $el) : [$el];
    }

  },
  update: [{
    read() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(this.elements, 'height', '');
    },

    order: -5,
    events: ['resize']
  }, {
    write() {
      this.elements.forEach(el => {
        const height = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(el, 'minHeight'));

        if (height && (this.forceHeight || Math.round(height + (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.boxModelAdjust)(el, 'height', 'content-box')) >= el.offsetHeight)) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.css)(el, 'height', height);
        }
      });
    },

    order: 5,
    events: ['resize']
  }]
} : {});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/internal/animate-fade.js":
/*!******************************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/internal/animate-fade.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ fade)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_margin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/margin */ "./node_modules/uikit/src/js/core/margin.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/viewport.js");



const clsLeave = 'uk-transition-leave';
const clsEnter = 'uk-transition-enter';
function fade(action, target, duration) {
  let stagger = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  const index = transitionIndex(target, true);
  const propsIn = {
    opacity: 1
  };
  const propsOut = {
    opacity: 0
  };

  const wrapIndexFn = fn => () => index === transitionIndex(target) ? fn() : uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.reject();

  const leaveFn = wrapIndexFn(() => {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.addClass)(target, clsLeave);
    return uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.all(getTransitionNodes(target).map((child, i) => new uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise(resolve => setTimeout(() => uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.start(child, propsOut, duration / 2, 'ease').then(resolve), i * stagger)))).then(() => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.removeClass)(target, clsLeave));
  });
  const enterFn = wrapIndexFn(() => {
    const oldHeight = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.height)(target);
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.addClass)(target, clsEnter);
    action();
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.children)(target), {
      opacity: 0
    }); // Ensure UIkit updates have propagated

    return new uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise(resolve => requestAnimationFrame(() => {
      const nodes = (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.children)(target);
      const newHeight = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.height)(target); // Ensure Grid cells do not stretch when height is applied

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(target, 'alignContent', 'flex-start');
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.height)(target, oldHeight);
      const transitionNodes = getTransitionNodes(target);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(nodes, propsOut);
      const transitions = transitionNodes.map((child, i) => new uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise(resolve => setTimeout(() => uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.start(child, propsIn, duration / 2, 'ease').then(resolve), i * stagger)));

      if (oldHeight !== newHeight) {
        transitions.push(uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.start(target, {
          height: newHeight
        }, duration / 2 + transitionNodes.length * stagger, 'ease'));
      }

      uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.all(transitions).then(() => {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.removeClass)(target, clsEnter);

        if (index === transitionIndex(target)) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(target, {
            height: '',
            alignContent: ''
          });
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.css)(nodes, {
            opacity: ''
          });
          delete target.dataset.transition;
        }

        resolve();
      });
    }));
  });
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasClass)(target, clsLeave) ? waitTransitionend(target).then(enterFn) : (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.hasClass)(target, clsEnter) ? waitTransitionend(target).then(leaveFn).then(enterFn) : leaveFn().then(enterFn);
}

function transitionIndex(target, next) {
  if (next) {
    target.dataset.transition = 1 + transitionIndex(target);
  }

  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.toNumber)(target.dataset.transition) || 0;
}

function waitTransitionend(target) {
  return uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.all((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.children)(target).filter(uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.inProgress).map(el => new uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise(resolve => (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.once)(el, 'transitionend transitioncanceled', resolve))));
}

function getTransitionNodes(target) {
  return (0,_core_margin__WEBPACK_IMPORTED_MODULE_9__.getRows)((0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.children)(target)).reduce((nodes, row) => nodes.concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.sortBy)(row.filter(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.isInView)(el)), 'offsetLeft')), []);
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/internal/animate-slide.js":
/*!*******************************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/internal/animate-slide.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(action, target, duration) {
  return new uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise(resolve => requestAnimationFrame(() => {
    let nodes = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.children)(target); // Get current state

    const currentProps = nodes.map(el => getProps(el, true));
    const targetProps = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(target, ['height', 'padding']); // Cancel previous animations

    uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.cancel(target);
    nodes.forEach(uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.cancel);
    reset(target); // Adding, sorting, removing nodes

    action(); // Find new nodes

    nodes = nodes.concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.children)(target).filter(el => !(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.includes)(nodes, el))); // Wait for update to propagate

    uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.resolve().then(() => {
      // Force update
      uikit_util__WEBPACK_IMPORTED_MODULE_6__.fastdom.flush(); // Get new state

      const targetPropsTo = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(target, ['height', 'padding']);
      const [propsTo, propsFrom] = getTransitionProps(target, nodes, currentProps); // Reset to previous state

      nodes.forEach((el, i) => propsFrom[i] && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el, propsFrom[i]));
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(target, (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.assign)({
        display: 'block'
      }, targetProps)); // Start transitions on next frame

      requestAnimationFrame(() => {
        const transitions = nodes.map((el, i) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(el) === target && uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.start(el, propsTo[i], duration, 'ease')).concat(uikit_util__WEBPACK_IMPORTED_MODULE_4__.Transition.start(target, targetPropsTo, duration, 'ease'));
        uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.all(transitions).then(() => {
          nodes.forEach((el, i) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(el) === target && (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el, 'display', propsTo[i].opacity === 0 ? 'none' : ''));
          reset(target);
        }, uikit_util__WEBPACK_IMPORTED_MODULE_5__.noop).then(resolve);
      });
    });
  }));
}

function getProps(el, opacity) {
  const zIndex = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el, 'zIndex');
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isVisible)(el) ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.assign)({
    display: '',
    opacity: opacity ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el, 'opacity') : '0',
    pointerEvents: 'none',
    position: 'absolute',
    zIndex: zIndex === 'auto' ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.index)(el) : zIndex
  }, getPositionWithMargin(el)) : false;
}

function getTransitionProps(target, nodes, currentProps) {
  const propsTo = nodes.map((el, i) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(el) && i in currentProps ? currentProps[i] ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isVisible)(el) ? getPositionWithMargin(el) : {
    opacity: 0
  } : {
    opacity: (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isVisible)(el) ? 1 : 0
  } : false);
  const propsFrom = propsTo.map((props, i) => {
    const from = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.parent)(nodes[i]) === target && (currentProps[i] || getProps(nodes[i]));

    if (!from) {
      return false;
    }

    if (!props) {
      delete from.opacity;
    } else if (!('opacity' in props)) {
      const {
        opacity
      } = from;

      if (opacity % 1) {
        props.opacity = 1;
      } else {
        delete from.opacity;
      }
    }

    return from;
  });
  return [propsTo, propsFrom];
}

function reset(el) {
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el.children, {
    height: '',
    left: '',
    opacity: '',
    pointerEvents: '',
    position: '',
    top: '',
    marginTop: '',
    marginLeft: '',
    transform: '',
    width: '',
    zIndex: ''
  });
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el, {
    height: '',
    display: '',
    padding: ''
  });
}

function getPositionWithMargin(el) {
  const {
    height,
    width
  } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.offset)(el);
  const {
    top,
    left
  } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.position)(el);
  const {
    marginLeft,
    marginTop
  } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(el, ['marginTop', 'marginLeft']);
  return {
    top,
    left,
    height,
    width,
    marginLeft,
    marginTop,
    transform: ''
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/internal/slideshow-animations.js":
/*!**************************************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/internal/slideshow-animations.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "translated": () => (/* binding */ translated),
/* harmony export */   "translate": () => (/* binding */ translate),
/* harmony export */   "scale3d": () => (/* binding */ scale3d)
/* harmony export */ });
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  slide: {
    show(dir) {
      return [{
        transform: translate(dir * -100)
      }, {
        transform: translate()
      }];
    },

    percent(current) {
      return translated(current);
    },

    translate(percent, dir) {
      return [{
        transform: translate(dir * -100 * percent)
      }, {
        transform: translate(dir * 100 * (1 - percent))
      }];
    }

  }
});
function translated(el) {
  return Math.abs((0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.css)(el, 'transform').split(',')[4] / el.offsetWidth) || 0;
}
function translate() {
  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '%';
  value += value ? unit : '';
  return uikit_util__WEBPACK_IMPORTED_MODULE_1__.isIE ? "translateX(".concat(value, ")") : "translate3d(".concat(value, ", 0, 0)"); // currently, not translate3d in IE, translate3d within translate3d does not work while transitioning
}
function scale3d(value) {
  return "scale3d(".concat(value, ", ").concat(value, ", 1)");
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/internal/slideshow-transitioner.js":
/*!****************************************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/internal/slideshow-transitioner.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Transitioner)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");


function Transitioner(prev, next, dir, _ref) {
  let {
    animation,
    easing
  } = _ref;
  const {
    percent,
    translate,
    show = uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop
  } = animation;
  const props = show(dir);
  const deferred = new uikit_util__WEBPACK_IMPORTED_MODULE_2__.Deferred();
  return {
    dir,

    show(duration) {
      let percent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      let linear = arguments.length > 2 ? arguments[2] : undefined;
      const timing = linear ? 'linear' : easing;
      duration -= Math.round(duration * (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.clamp)(percent, -1, 1));
      this.translate(percent);
      triggerUpdate(next, 'itemin', {
        percent,
        duration,
        timing,
        dir
      });
      triggerUpdate(prev, 'itemout', {
        percent: 1 - percent,
        duration,
        timing,
        dir
      });
      uikit_util__WEBPACK_IMPORTED_MODULE_2__.Promise.all([uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.start(next, props[1], duration, timing), uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.start(prev, props[0], duration, timing)]).then(() => {
        this.reset();
        deferred.resolve();
      }, uikit_util__WEBPACK_IMPORTED_MODULE_1__.noop);
      return deferred.promise;
    },

    cancel() {
      uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.cancel([next, prev]);
    },

    reset() {
      for (const prop in props[0]) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)([next, prev], prop, '');
      }
    },

    forward(duration) {
      let percent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.percent();
      uikit_util__WEBPACK_IMPORTED_MODULE_3__.Transition.cancel([next, prev]);
      return this.show(duration, percent, true);
    },

    translate(percent) {
      this.reset();
      const props = translate(percent, dir);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(next, props[1]);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(prev, props[0]);
      triggerUpdate(next, 'itemtranslatein', {
        percent,
        dir
      });
      triggerUpdate(prev, 'itemtranslateout', {
        percent: 1 - percent,
        dir
      });
    },

    percent() {
      return percent(prev || next, next, dir);
    },

    getDistance() {
      return prev && prev.offsetWidth;
    }

  };
}

function triggerUpdate(el, type, data) {
  (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(el, (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.createEvent)(type, false, false, data));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/media.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/media.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    media: Boolean
  },
  data: {
    media: false
  },
  computed: {
    matchMedia() {
      const media = toMedia(this.media);
      return !media || window.matchMedia(media).matches;
    }

  }
});

function toMedia(value) {
  if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {
    if (value[0] === '@') {
      const name = "breakpoint-".concat(value.substr(1));
      value = (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.getCssVar)(name));
    } else if (isNaN(value)) {
      return value;
    }
  }

  return value && !isNaN(value) ? "(min-width: ".concat(value, "px)") : false;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/modal.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/modal.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./class */ "./node_modules/uikit/src/js/mixin/class.js");
/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./container */ "./node_modules/uikit/src/js/mixin/container.js");
/* harmony import */ var _togglable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./togglable */ "./node_modules/uikit/src/js/mixin/togglable.js");





const active = [];
/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_class__WEBPACK_IMPORTED_MODULE_1__["default"], _container__WEBPACK_IMPORTED_MODULE_2__["default"], _togglable__WEBPACK_IMPORTED_MODULE_3__["default"]],
  props: {
    selPanel: String,
    selClose: String,
    escClose: Boolean,
    bgClose: Boolean,
    stack: Boolean
  },
  data: {
    cls: 'uk-open',
    escClose: true,
    bgClose: true,
    overlay: true,
    stack: false
  },
  computed: {
    panel(_ref, $el) {
      let {
        selPanel
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.$)(selPanel, $el);
    },

    transitionElement() {
      return this.panel;
    },

    bgClose(_ref2) {
      let {
        bgClose
      } = _ref2;
      return bgClose && this.panel;
    }

  },

  beforeDisconnect() {
    if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.includes)(active, this)) {
      this.toggleElement(this.$el, false, false);
    }
  },

  events: [{
    name: 'click',

    delegate() {
      return this.selClose;
    },

    handler(e) {
      e.preventDefault();
      this.hide();
    }

  }, {
    name: 'toggle',
    self: true,

    handler(e, toggle) {
      if (e.defaultPrevented) {
        return;
      }

      e.preventDefault();

      if (this.isToggled() === (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.includes)(active, this)) {
        this.toggle();
      }
    }

  }, {
    name: 'beforeshow',
    self: true,

    handler(e) {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.includes)(active, this)) {
        return false;
      }

      if (!this.stack && active.length) {
        uikit_util__WEBPACK_IMPORTED_MODULE_6__.Promise.all(active.map(modal => modal.hide())).then(this.show);
        e.preventDefault();
      } else {
        active.push(this);
      }
    }

  }, {
    name: 'show',
    self: true,

    handler() {
      const docEl = document.documentElement;

      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_7__.width)(window) > docEl.clientWidth && this.overlay) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(document.body, 'overflowY', 'scroll');
      }

      if (this.stack) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(this.$el, 'zIndex', (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(this.$el, 'zIndex')) + active.length);
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.addClass)(docEl, this.clsPage);

      if (this.bgClose) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(this.$el, 'hide', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.on)(document, uikit_util__WEBPACK_IMPORTED_MODULE_11__.pointerDown, _ref3 => {
          let {
            target
          } = _ref3;

          if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.last)(active) !== this || this.overlay && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.within)(target, this.$el) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.within)(target, this.panel)) {
            return;
          }

          (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(document, "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_11__.pointerUp, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_11__.pointerCancel, " scroll"), _ref4 => {
            let {
              defaultPrevented,
              type,
              target: newTarget
            } = _ref4;

            if (!defaultPrevented && type === uikit_util__WEBPACK_IMPORTED_MODULE_11__.pointerUp && target === newTarget) {
              this.hide();
            }
          }, true);
        }), {
          self: true
        });
      }

      if (this.escClose) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(this.$el, 'hide', (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.on)(document, 'keydown', e => {
          if (e.keyCode === 27 && (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.last)(active) === this) {
            this.hide();
          }
        }), {
          self: true
        });
      }
    }

  }, {
    name: 'shown',
    self: true,

    handler() {
      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.isFocusable)(this.$el)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_13__.attr)(this.$el, 'tabindex', '-1');
      }

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.$)(':focus', this.$el)) {
        this.$el.focus();
      }
    }

  }, {
    name: 'hidden',
    self: true,

    handler() {
      if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.includes)(active, this)) {
        active.splice(active.indexOf(this), 1);
      }

      if (!active.length) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(document.body, 'overflowY', '');
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(this.$el, 'zIndex', '');

      if (!active.some(modal => modal.clsPage === this.clsPage)) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.removeClass)(document.documentElement, this.clsPage);
      }
    }

  }],
  methods: {
    toggle() {
      return this.isToggled() ? this.hide() : this.show();
    },

    show() {
      if (this.container && (0,uikit_util__WEBPACK_IMPORTED_MODULE_12__.parent)(this.$el) !== this.container) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.append)(this.container, this.$el);
        return new uikit_util__WEBPACK_IMPORTED_MODULE_6__.Promise(resolve => requestAnimationFrame(() => this.show().then(resolve)));
      }

      return this.toggleElement(this.$el, true, animate(this));
    },

    hide() {
      return this.toggleElement(this.$el, false, animate(this));
    }

  }
});

function animate(_ref5) {
  let {
    transitionElement,
    _toggle
  } = _ref5;
  return (el, show) => new uikit_util__WEBPACK_IMPORTED_MODULE_6__.Promise((resolve, reject) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(el, 'show hide', () => {
    el._reject && el._reject();
    el._reject = reject;

    _toggle(el, show);

    const off = (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(transitionElement, 'transitionstart', () => {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_10__.once)(transitionElement, 'transitionend transitioncancel', resolve, {
        self: true
      });
      clearTimeout(timer);
    }, {
      self: true
    });
    const timer = setTimeout(() => {
      off();
      resolve();
    }, (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toMs)((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(transitionElement, 'transitionDuration')));
  })).then(() => delete el._reject);
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/parallax.js":
/*!*****************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/parallax.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _mixin_media__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mixin/media */ "./node_modules/uikit/src/js/mixin/media.js");
/* harmony import */ var _core_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/svg */ "./node_modules/uikit/src/js/core/svg.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");





const props = ['x', 'y', 'bgx', 'bgy', 'rotate', 'scale', 'color', 'backgroundColor', 'borderColor', 'opacity', 'blur', 'hue', 'grayscale', 'invert', 'saturate', 'sepia', 'fopacity', 'stroke'];
/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_mixin_media__WEBPACK_IMPORTED_MODULE_2__["default"]],
  props: props.reduce((props, prop) => {
    props[prop] = 'list';
    return props;
  }, {}),
  data: props.reduce((data, prop) => {
    data[prop] = undefined;
    return data;
  }, {}),
  computed: {
    props(properties, $el) {
      return props.reduce((props, prop) => {
        if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(properties[prop])) {
          return props;
        }

        const isColor = prop.match(/color/i);
        const isCssProp = isColor || prop === 'opacity';
        let pos, bgPos, diff;
        let steps = properties[prop].slice();

        if (isCssProp) {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)($el, prop, '');
        }

        if (steps.length < 2) {
          steps.unshift((prop === 'scale' ? 1 : isCssProp ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)($el, prop) : 0) || 0);
        }

        const unit = getUnit(steps, prop);

        if (isColor) {
          const {
            color
          } = $el.style;
          steps = steps.map(step => parseColor($el, step));
          $el.style.color = color;
        } else if ((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.startsWith)(prop, 'bg')) {
          const attr = prop === 'bgy' ? 'height' : 'width';
          steps = steps.map(step => (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toPx)(step, attr, this.$el));
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)($el, "background-position-".concat(prop[2]), '');
          bgPos = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)($el, 'backgroundPosition').split(' ')[prop[2] === 'x' ? 0 : 1]; // IE 11 can't read background-position-[x|y]

          if (this.covers) {
            const min = Math.min(...steps);
            const max = Math.max(...steps);
            const down = steps.indexOf(min) < steps.indexOf(max);
            diff = max - min;
            steps = steps.map(step => step - (down ? min : max));
            pos = "".concat(down ? -diff : 0, "px");
          } else {
            pos = bgPos;
          }
        } else {
          steps = steps.map(uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat);
        }

        if (prop === 'stroke') {
          if (!steps.some(step => step)) {
            return props;
          }

          const length = (0,_core_svg__WEBPACK_IMPORTED_MODULE_6__.getMaxPathLength)(this.$el);
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)($el, 'strokeDasharray', length);

          if (unit === '%') {
            steps = steps.map(step => step * length / 100);
          }

          steps = steps.reverse();
          prop = 'strokeDashoffset';
        }

        props[prop] = {
          steps,
          unit,
          pos,
          bgPos,
          diff
        };
        return props;
      }, {});
    },

    bgProps() {
      return ['bgx', 'bgy'].filter(bg => bg in this.props);
    },

    covers(_, $el) {
      return covers($el);
    }

  },

  disconnected() {
    delete this._image;
  },

  update: {
    read(data) {
      if (!this.matchMedia) {
        return;
      }

      if (!data.image && this.covers && this.bgProps.length) {
        const src = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(this.$el, 'backgroundImage').replace(/^none|url\(["']?(.+?)["']?\)$/, '$1');

        if (src) {
          const img = new Image();
          img.src = src;
          data.image = img;

          if (!img.naturalWidth) {
            img.onload = () => this.$update();
          }
        }
      }

      const {
        image
      } = data;

      if (!image || !image.naturalWidth) {
        return;
      }

      const dimEl = {
        width: this.$el.offsetWidth,
        height: this.$el.offsetHeight
      };
      const dimImage = {
        width: image.naturalWidth,
        height: image.naturalHeight
      };
      let dim = uikit_util__WEBPACK_IMPORTED_MODULE_3__.Dimensions.cover(dimImage, dimEl);
      this.bgProps.forEach(prop => {
        const {
          diff,
          bgPos,
          steps
        } = this.props[prop];
        const attr = prop === 'bgy' ? 'height' : 'width';
        const span = dim[attr] - dimEl[attr];

        if (span < diff) {
          dimEl[attr] = dim[attr] + diff - span;
        } else if (span > diff) {
          const posPercentage = dimEl[attr] / (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.toPx)(bgPos, attr, this.$el);

          if (posPercentage) {
            this.props[prop].steps = steps.map(step => step - (span - diff) / posPercentage);
          }
        }

        dim = uikit_util__WEBPACK_IMPORTED_MODULE_3__.Dimensions.cover(dimImage, dimEl);
      });
      data.dim = dim;
    },

    write(_ref) {
      let {
        dim
      } = _ref;

      if (!this.matchMedia) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(this.$el, {
          backgroundSize: '',
          backgroundRepeat: ''
        });
        return;
      }

      dim && (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(this.$el, {
        backgroundSize: "".concat(dim.width, "px ").concat(dim.height, "px"),
        backgroundRepeat: 'no-repeat'
      });
    },

    events: ['resize']
  },
  methods: {
    reset() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.each)(this.getCss(0), (_, prop) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(this.$el, prop, ''));
    },

    getCss(percent) {
      const {
        props
      } = this;
      return Object.keys(props).reduce((css, prop) => {
        let {
          steps,
          unit,
          pos
        } = props[prop];
        const value = getValue(steps, percent);

        switch (prop) {
          // transforms
          case 'x':
          case 'y':
            {
              unit = unit || 'px';
              css.transform += " translate".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.ucfirst)(prop), "(").concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat)(value).toFixed(unit === 'px' ? 0 : 2)).concat(unit, ")");
              break;
            }

          case 'rotate':
            unit = unit || 'deg';
            css.transform += " rotate(".concat(value + unit, ")");
            break;

          case 'scale':
            css.transform += " scale(".concat(value, ")");
            break;
          // bg image

          case 'bgy':
          case 'bgx':
            css["background-position-".concat(prop[2])] = "calc(".concat(pos, " + ").concat(value, "px)");
            break;
          // color

          case 'color':
          case 'backgroundColor':
          case 'borderColor':
            {
              const [start, end, p] = getStep(steps, percent);
              css[prop] = "rgba(".concat(start.map((value, i) => {
                value += p * (end[i] - value);
                return i === 3 ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat)(value) : parseInt(value, 10);
              }).join(','), ")");
              break;
            }
          // CSS Filter

          case 'blur':
            unit = unit || 'px';
            css.filter += " blur(".concat(value + unit, ")");
            break;

          case 'hue':
            unit = unit || 'deg';
            css.filter += " hue-rotate(".concat(value + unit, ")");
            break;

          case 'fopacity':
            unit = unit || '%';
            css.filter += " opacity(".concat(value + unit, ")");
            break;

          case 'grayscale':
          case 'invert':
          case 'saturate':
          case 'sepia':
            unit = unit || '%';
            css.filter += " ".concat(prop, "(").concat(value + unit, ")");
            break;

          default:
            css[prop] = value;
        }

        return css;
      }, {
        transform: '',
        filter: ''
      });
    }

  }
});

function parseColor(el, color) {
  return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(el, 'color', color), 'color').split(/[(),]/g).slice(1, -1).concat(1).slice(0, 4).map(uikit_util__WEBPACK_IMPORTED_MODULE_3__.toFloat);
}

function getStep(steps, percent) {
  const count = steps.length - 1;
  const index = Math.min(Math.floor(count * percent), count - 1);
  const step = steps.slice(index, index + 2);
  step.push(percent === 1 ? 1 : percent % (1 / count) * count);
  return step;
}

function getValue(steps, percent) {
  let digits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;
  const [start, end, p] = getStep(steps, percent);
  return ((0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isNumber)(start) ? start + Math.abs(start - end) * p * (start < end ? 1 : -1) : +end).toFixed(digits);
}

function getUnit(steps) {
  return steps.reduce((unit, step) => (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.isString)(step) && step.replace(/-|\d/g, '').trim() || unit, '');
}

function covers(el) {
  const {
    backgroundSize
  } = el.style;
  const covers = (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.css)(el, 'backgroundSize', ''), 'backgroundSize') === 'cover';
  el.style.backgroundSize = backgroundSize;
  return covers;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/position.js":
/*!*****************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/position.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/position.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    pos: String,
    offset: null,
    flip: Boolean,
    clsPos: String
  },
  data: {
    pos: "bottom-".concat(uikit_util__WEBPACK_IMPORTED_MODULE_0__.isRtl ? 'right' : 'left'),
    flip: true,
    offset: false,
    clsPos: ''
  },
  computed: {
    pos(_ref) {
      let {
        pos
      } = _ref;
      return pos.split('-').concat('center').slice(0, 2);
    },

    dir() {
      return this.pos[0];
    },

    align() {
      return this.pos[1];
    }

  },
  methods: {
    positionAt(element, target, boundary) {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.removeClasses)(element, "".concat(this.clsPos, "-(top|bottom|left|right)(-[a-z]+)?"));
      let {
        offset
      } = this;
      const axis = this.getAxis();

      if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isNumeric)(offset)) {
        const node = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.$)(offset);
        offset = node ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.offset)(node)[axis === 'x' ? 'left' : 'top'] - (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.offset)(target)[axis === 'x' ? 'right' : 'bottom'] : 0;
      }

      const {
        x,
        y
      } = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.positionAt)(element, target, axis === 'x' ? "".concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.flipPosition)(this.dir), " ").concat(this.align) : "".concat(this.align, " ").concat((0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.flipPosition)(this.dir)), axis === 'x' ? "".concat(this.dir, " ").concat(this.align) : "".concat(this.align, " ").concat(this.dir), axis === 'x' ? "".concat(this.dir === 'left' ? -offset : offset) : " ".concat(this.dir === 'top' ? -offset : offset), null, this.flip, boundary).target;
      this.dir = axis === 'x' ? x : y;
      this.align = axis === 'x' ? y : x;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.toggleClass)(element, "".concat(this.clsPos, "-").concat(this.dir, "-").concat(this.align), this.offset === false);
    },

    getAxis() {
      return this.dir === 'top' || this.dir === 'bottom' ? 'y' : 'x';
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/slider-autoplay.js":
/*!************************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/slider-autoplay.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    autoplay: Boolean,
    autoplayInterval: Number,
    pauseOnHover: Boolean
  },
  data: {
    autoplay: false,
    autoplayInterval: 7000,
    pauseOnHover: true
  },

  connected() {
    this.autoplay && this.startAutoplay();
  },

  disconnected() {
    this.stopAutoplay();
  },

  update() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.attr)(this.slides, 'tabindex', '-1');
  },

  events: [{
    name: 'visibilitychange',

    el() {
      return document;
    },

    filter() {
      return this.autoplay;
    },

    handler() {
      if (document.hidden) {
        this.stopAutoplay();
      } else {
        this.startAutoplay();
      }
    }

  }],
  methods: {
    startAutoplay() {
      this.stopAutoplay();
      this.interval = setInterval(() => (!this.draggable || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.$)(':focus', this.$el)) && (!this.pauseOnHover || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.matches)(this.$el, ':hover')) && !this.stack.length && this.show('next'), this.autoplayInterval);
    },

    stopAutoplay() {
      this.interval && clearInterval(this.interval);
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/slider-drag.js":
/*!********************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/slider-drag.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    draggable: Boolean
  },
  data: {
    draggable: true,
    threshold: 10
  },

  created() {
    ['start', 'move', 'end'].forEach(key => {
      const fn = this[key];

      this[key] = e => {
        const pos = (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.getEventPos)(e).x * (uikit_util__WEBPACK_IMPORTED_MODULE_1__.isRtl ? -1 : 1);
        this.prevPos = pos !== this.pos ? this.pos : this.prevPos;
        this.pos = pos;
        fn(e);
      };
    });
  },

  events: [{
    name: uikit_util__WEBPACK_IMPORTED_MODULE_1__.pointerDown,

    delegate() {
      return this.selSlides;
    },

    handler(e) {
      if (!this.draggable || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.isTouch)(e) && hasTextNodesOnly(e.target) || (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.closest)(e.target, uikit_util__WEBPACK_IMPORTED_MODULE_2__.selInput) || e.button > 0 || this.length < 2) {
        return;
      }

      this.start(e);
    }

  }, {
    name: 'dragstart',

    handler(e) {
      e.preventDefault();
    }

  }],
  methods: {
    start() {
      this.drag = this.pos;

      if (this._transitioner) {
        this.percent = this._transitioner.percent();
        this.drag += this._transitioner.getDistance() * this.percent * this.dir;

        this._transitioner.cancel();

        this._transitioner.translate(this.percent);

        this.dragging = true;
        this.stack = [];
      } else {
        this.prevIndex = this.index;
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.on)(document, uikit_util__WEBPACK_IMPORTED_MODULE_1__.pointerMove, this.move, {
        passive: false
      }); // 'input' event is triggered by video controls

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.on)(document, "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_1__.pointerUp, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_1__.pointerCancel, " input"), this.end, true);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.list, 'userSelect', 'none');
    },

    move(e) {
      const distance = this.pos - this.drag;

      if (distance === 0 || this.prevPos === this.pos || !this.dragging && Math.abs(distance) < this.threshold) {
        return;
      } // prevent click event


      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.list, 'pointerEvents', 'none');
      e.cancelable && e.preventDefault();
      this.dragging = true;
      this.dir = distance < 0 ? 1 : -1;
      const {
        slides
      } = this;
      let {
        prevIndex
      } = this;
      let dis = Math.abs(distance);
      let nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);
      let width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;

      while (nextIndex !== prevIndex && dis > width) {
        this.drag -= width * this.dir;
        prevIndex = nextIndex;
        dis -= width;
        nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);
        width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;
      }

      this.percent = dis / width;
      const prev = slides[prevIndex];
      const next = slides[nextIndex];
      const changed = this.index !== nextIndex;
      const edge = prevIndex === nextIndex;
      let itemShown;
      [this.index, this.prevIndex].filter(i => !(0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.includes)([nextIndex, prevIndex], i)).forEach(i => {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.trigger)(slides[i], 'itemhidden', [this]);

        if (edge) {
          itemShown = true;
          this.prevIndex = prevIndex;
        }
      });

      if (this.index === prevIndex && this.prevIndex !== prevIndex || itemShown) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.trigger)(slides[this.index], 'itemshown', [this]);
      }

      if (changed) {
        this.prevIndex = prevIndex;
        this.index = nextIndex;
        !edge && (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.trigger)(prev, 'beforeitemhide', [this]);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.trigger)(next, 'beforeitemshow', [this]);
      }

      this._transitioner = this._translate(Math.abs(this.percent), prev, !edge && next);

      if (changed) {
        !edge && (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.trigger)(prev, 'itemhide', [this]);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.trigger)(next, 'itemshow', [this]);
      }
    },

    end() {
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.off)(document, uikit_util__WEBPACK_IMPORTED_MODULE_1__.pointerMove, this.move, {
        passive: false
      });
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.off)(document, "".concat(uikit_util__WEBPACK_IMPORTED_MODULE_1__.pointerUp, " ").concat(uikit_util__WEBPACK_IMPORTED_MODULE_1__.pointerCancel, " input"), this.end, true);

      if (this.dragging) {
        this.dragging = null;

        if (this.index === this.prevIndex) {
          this.percent = 1 - this.percent;
          this.dir *= -1;

          this._show(false, this.index, true);

          this._transitioner = null;
        } else {
          const dirChange = (uikit_util__WEBPACK_IMPORTED_MODULE_1__.isRtl ? this.dir * (uikit_util__WEBPACK_IMPORTED_MODULE_1__.isRtl ? 1 : -1) : this.dir) < 0 === this.prevPos > this.pos;
          this.index = dirChange ? this.index : this.prevIndex;

          if (dirChange) {
            this.percent = 1 - this.percent;
          }

          this.show(this.dir > 0 && !dirChange || this.dir < 0 && dirChange ? 'next' : 'previous', true);
        }
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.css)(this.list, {
        userSelect: '',
        pointerEvents: ''
      });
      this.drag = this.percent = null;
    }

  }
});

function hasTextNodesOnly(el) {
  return !el.children.length && el.childNodes.length;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/slider-nav.js":
/*!*******************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/slider-nav.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  data: {
    selNav: false
  },
  computed: {
    nav(_ref, $el) {
      let {
        selNav
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.$)(selNav, $el);
    },

    selNavItem(_ref2) {
      let {
        attrItem
      } = _ref2;
      return "[".concat(attrItem, "],[data-").concat(attrItem, "]");
    },

    navItems(_, $el) {
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.$$)(this.selNavItem, $el);
    }

  },
  update: {
    write() {
      if (this.nav && this.length !== this.nav.children.length) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_0__.html)(this.nav, this.slides.map((_, i) => "<li ".concat(this.attrItem, "=\"").concat(i, "\"><a href></a></li>")).join(''));
      }

      this.navItems.concat(this.nav).forEach(el => el && (el.hidden = !this.maxIndex));
      this.updateNav();
    },

    events: ['resize']
  },
  events: [{
    name: 'click',

    delegate() {
      return this.selNavItem;
    },

    handler(e) {
      e.preventDefault();
      this.show((0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.data)(e.current, this.attrItem));
    }

  }, {
    name: 'itemshow',
    handler: 'updateNav'
  }],
  methods: {
    updateNav() {
      const i = this.getValidIndex();
      this.navItems.forEach(el => {
        const cmd = (0,uikit_util__WEBPACK_IMPORTED_MODULE_1__.data)(el, this.attrItem);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toggleClass)(el, this.clsActive, (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.toNumber)(cmd) === i);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toggleClass)(el, 'uk-invisible', this.finite && (cmd === 'previous' && i === 0 || cmd === 'next' && i >= this.maxIndex));
      });
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/slider-reactive.js":
/*!************************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/slider-reactive.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  update: {
    write() {
      if (this.stack.length || this.dragging) {
        return;
      }

      const index = this.getValidIndex(this.index);

      if (!~this.prevIndex || this.index !== index) {
        this.show(index);
      }
    },

    events: ['resize']
  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/slider.js":
/*!***************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/slider.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "speedUp": () => (/* binding */ speedUp)
/* harmony export */ });
/* harmony import */ var _slider_autoplay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slider-autoplay */ "./node_modules/uikit/src/js/mixin/slider-autoplay.js");
/* harmony import */ var _slider_drag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slider-drag */ "./node_modules/uikit/src/js/mixin/slider-drag.js");
/* harmony import */ var _slider_nav__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slider-nav */ "./node_modules/uikit/src/js/mixin/slider-nav.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/env.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_slider_autoplay__WEBPACK_IMPORTED_MODULE_0__["default"], _slider_drag__WEBPACK_IMPORTED_MODULE_1__["default"], _slider_nav__WEBPACK_IMPORTED_MODULE_2__["default"]],
  props: {
    clsActivated: Boolean,
    easing: String,
    index: Number,
    finite: Boolean,
    velocity: Number,
    selSlides: String
  },
  data: () => ({
    easing: 'ease',
    finite: false,
    velocity: 1,
    index: 0,
    prevIndex: -1,
    stack: [],
    percent: 0,
    clsActive: 'uk-active',
    clsActivated: false,
    Transitioner: false,
    transitionOptions: {}
  }),

  connected() {
    this.prevIndex = -1;
    this.index = this.getValidIndex(this.$props.index);
    this.stack = [];
  },

  disconnected() {
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.removeClass)(this.slides, this.clsActive);
  },

  computed: {
    duration(_ref, $el) {
      let {
        velocity
      } = _ref;
      return speedUp($el.offsetWidth / velocity);
    },

    list(_ref2, $el) {
      let {
        selList
      } = _ref2;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.$)(selList, $el);
    },

    maxIndex() {
      return this.length - 1;
    },

    selSlides(_ref3) {
      let {
        selList,
        selSlides
      } = _ref3;
      return "".concat(selList, " ").concat(selSlides || '> *');
    },

    slides: {
      get() {
        return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.$$)(this.selSlides, this.$el);
      },

      watch() {
        this.$reset();
      }

    },

    length() {
      return this.slides.length;
    }

  },
  events: {
    itemshown() {
      this.$update(this.list);
    }

  },
  methods: {
    show(index) {
      let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (this.dragging || !this.length) {
        return;
      }

      const {
        stack
      } = this;
      const queueIndex = force ? 0 : stack.length;

      const reset = () => {
        stack.splice(queueIndex, 1);

        if (stack.length) {
          this.show(stack.shift(), true);
        }
      };

      stack[force ? 'unshift' : 'push'](index);

      if (!force && stack.length > 1) {
        if (stack.length === 2) {
          this._transitioner.forward(Math.min(this.duration, 200));
        }

        return;
      }

      const prevIndex = this.getIndex(this.index);
      const prev = (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.hasClass)(this.slides, this.clsActive) && this.slides[prevIndex];
      const nextIndex = this.getIndex(index, this.index);
      const next = this.slides[nextIndex];

      if (prev === next) {
        reset();
        return;
      }

      this.dir = getDirection(index, prevIndex);
      this.prevIndex = prevIndex;
      this.index = nextIndex;

      if (prev && !(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(prev, 'beforeitemhide', [this]) || !(0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(next, 'beforeitemshow', [this, prev])) {
        this.index = this.prevIndex;
        reset();
        return;
      }

      const promise = this._show(prev, next, force).then(() => {
        prev && (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(prev, 'itemhidden', [this]);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(next, 'itemshown', [this]);
        return new uikit_util__WEBPACK_IMPORTED_MODULE_6__.Promise(resolve => {
          uikit_util__WEBPACK_IMPORTED_MODULE_7__.fastdom.write(() => {
            stack.shift();

            if (stack.length) {
              this.show(stack.shift(), true);
            } else {
              this._transitioner = null;
            }

            resolve();
          });
        });
      });

      prev && (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(prev, 'itemhide', [this]);
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.trigger)(next, 'itemshow', [this]);
      return promise;
    },

    getIndex() {
      let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;
      let prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.index;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.clamp)((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.getIndex)(index, this.slides, prev, this.finite), 0, this.maxIndex);
    },

    getValidIndex() {
      let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;
      let prevIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.prevIndex;
      return this.getIndex(index, prevIndex);
    },

    _show(prev, next, force) {
      this._transitioner = this._getTransitioner(prev, next, this.dir, (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.assign)({
        easing: force ? next.offsetWidth < 600 ? 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
        /* easeOutQuad */
        : 'cubic-bezier(0.165, 0.84, 0.44, 1)'
        /* easeOutQuart */
        : this.easing
      }, this.transitionOptions));

      if (!force && !prev) {
        this._translate(1);

        return uikit_util__WEBPACK_IMPORTED_MODULE_6__.Promise.resolve();
      }

      const {
        length
      } = this.stack;
      return this._transitioner[length > 1 ? 'forward' : 'show'](length > 1 ? Math.min(this.duration, 75 + 75 / (length - 1)) : this.duration, this.percent);
    },

    _getDistance(prev, next) {
      return this._getTransitioner(prev, prev !== next && next).getDistance();
    },

    _translate(percent) {
      let prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.prevIndex;
      let next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.index;

      const transitioner = this._getTransitioner(prev !== next ? prev : false, next);

      transitioner.translate(percent);
      return transitioner;
    },

    _getTransitioner() {
      let prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.prevIndex;
      let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.index;
      let dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.dir || 1;
      let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.transitionOptions;
      return new this.Transitioner((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.isNumber)(prev) ? this.slides[prev] : prev, (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.isNumber)(next) ? this.slides[next] : next, dir * (uikit_util__WEBPACK_IMPORTED_MODULE_9__.isRtl ? -1 : 1), options);
    }

  }
});

function getDirection(index, prevIndex) {
  return index === 'next' ? 1 : index === 'previous' ? -1 : index < prevIndex ? -1 : 1;
}

function speedUp(x) {
  return .5 * x + 300; // parabola through (400,500; 600,600; 1800,1200)
}

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/slideshow.js":
/*!******************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/slideshow.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/slideshow-animations */ "./node_modules/uikit/src/js/mixin/internal/slideshow-animations.js");
/* harmony import */ var _internal_slideshow_transitioner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/slideshow-transitioner */ "./node_modules/uikit/src/js/mixin/internal/slideshow-transitioner.js");
/* harmony import */ var _slider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slider.js */ "./node_modules/uikit/src/js/mixin/slider.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");




/* harmony default export */ __webpack_exports__["default"] = ({
  mixins: [_slider_js__WEBPACK_IMPORTED_MODULE_0__["default"]],
  props: {
    animation: String
  },
  data: {
    animation: 'slide',
    clsActivated: 'uk-transition-active',
    Animations: _internal_slideshow_animations__WEBPACK_IMPORTED_MODULE_1__["default"],
    Transitioner: _internal_slideshow_transitioner__WEBPACK_IMPORTED_MODULE_2__["default"]
  },
  computed: {
    animation(_ref) {
      let {
        animation,
        Animations
      } = _ref;
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.assign)(Animations[animation] || Animations.slide, {
        name: animation
      });
    },

    transitionOptions() {
      return {
        animation: this.animation
      };
    }

  },
  events: {
    'itemshow itemhide itemshown itemhidden'(_ref2) {
      let {
        target
      } = _ref2;
      this.$update(target);
    },

    beforeitemshow(_ref3) {
      let {
        target
      } = _ref3;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)(target, this.clsActive);
    },

    itemshown(_ref4) {
      let {
        target
      } = _ref4;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)(target, this.clsActivated);
    },

    itemhidden(_ref5) {
      let {
        target
      } = _ref5;
      (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.removeClass)(target, this.clsActive, this.clsActivated);
    }

  }
});

/***/ }),

/***/ "./node_modules/uikit/src/js/mixin/togglable.js":
/*!******************************************************!*\
  !*** ./node_modules/uikit/src/js/mixin/togglable.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toggleHeight": () => (/* binding */ toggleHeight)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var uikit_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uikit-util */ "./node_modules/uikit/src/js/util/fastdom.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  props: {
    cls: Boolean,
    animation: 'list',
    duration: Number,
    origin: String,
    transition: String
  },
  data: {
    cls: false,
    animation: [false],
    duration: 200,
    origin: false,
    transition: 'linear',
    clsEnter: 'uk-togglabe-enter',
    clsLeave: 'uk-togglabe-leave',
    initProps: {
      overflow: '',
      height: '',
      paddingTop: '',
      paddingBottom: '',
      marginTop: '',
      marginBottom: ''
    },
    hideProps: {
      overflow: 'hidden',
      height: 0,
      paddingTop: 0,
      paddingBottom: 0,
      marginTop: 0,
      marginBottom: 0
    }
  },
  computed: {
    hasAnimation(_ref) {
      let {
        animation
      } = _ref;
      return !!animation[0];
    },

    hasTransition(_ref2) {
      let {
        animation
      } = _ref2;
      return this.hasAnimation && animation[0] === true;
    }

  },
  methods: {
    toggleElement(targets, toggle, animate) {
      return new uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise(resolve => uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.all((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toNodes)(targets).map(el => {
        const show = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isBoolean)(toggle) ? toggle : !this.isToggled(el);

        if (!(0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.trigger)(el, "before".concat(show ? 'show' : 'hide'), [this])) {
          return uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.reject();
        }

        const promise = ((0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.isFunction)(animate) ? animate : animate === false || !this.hasAnimation ? this._toggle : this.hasTransition ? toggleHeight(this) : toggleAnimation(this))(el, show);
        const cls = show ? this.clsEnter : this.clsLeave;
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.addClass)(el, cls);
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.trigger)(el, show ? 'show' : 'hide', [this]);

        const done = () => {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.removeClass)(el, cls);
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.trigger)(el, show ? 'shown' : 'hidden', [this]);
          this.$update(el);
        };

        return promise ? promise.then(done, () => {
          (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.removeClass)(el, cls);
          return uikit_util__WEBPACK_IMPORTED_MODULE_1__.Promise.reject();
        }) : done();
      })).then(resolve, uikit_util__WEBPACK_IMPORTED_MODULE_2__.noop));
    },

    isToggled() {
      let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.$el;
      [el] = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toNodes)(el);
      return (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasClass)(el, this.clsEnter) ? true : (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasClass)(el, this.clsLeave) ? false : this.cls ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasClass)(el, this.cls.split(' ')[0]) : (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.isVisible)(el);
    },

    _toggle(el, toggled) {
      if (!el) {
        return;
      }

      toggled = Boolean(toggled);
      let changed;

      if (this.cls) {
        changed = (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.cls, ' ') || toggled !== (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.hasClass)(el, this.cls);
        changed && (0,uikit_util__WEBPACK_IMPORTED_MODULE_4__.toggleClass)(el, this.cls, (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.includes)(this.cls, ' ') ? undefined : toggled);
      } else {
        changed = toggled === el.hidden;
        changed && (el.hidden = !toggled);
      }

      (0,uikit_util__WEBPACK_IMPORTED_MODULE_6__.$$)('[autofocus]', el).some(el => (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.isVisible)(el) ? el.focus() || true : el.blur());

      if (changed) {
        (0,uikit_util__WEBPACK_IMPORTED_MODULE_3__.trigger)(el, 'toggled', [toggled, this]);
        this.$update(el);
      }
    }

  }
});
function toggleHeight(_ref3) {
  let {
    isToggled,
    duration,
    initProps,
    hideProps,
    transition,
    _toggle
  } = _ref3;
  return (el, show) => {
    const inProgress = uikit_util__WEBPACK_IMPORTED_MODULE_7__.Transition.inProgress(el);
    const inner = el.hasChildNodes ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(el.firstElementChild, 'marginTop')) + (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.toFloat)((0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(el.lastElementChild, 'marginBottom')) : 0;
    const currentHeight = (0,uikit_util__WEBPACK_IMPORTED_MODULE_5__.isVisible)(el) ? (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.height)(el) + (inProgress ? 0 : inner) : 0;
    uikit_util__WEBPACK_IMPORTED_MODULE_7__.Transition.cancel(el);

    if (!isToggled(el)) {
      _toggle(el, true);
    }

    (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.height)(el, ''); // Update child components first

    uikit_util__WEBPACK_IMPORTED_MODULE_10__.fastdom.flush();
    const endHeight = (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.height)(el) + (inProgress ? 0 : inner);
    (0,uikit_util__WEBPACK_IMPORTED_MODULE_9__.height)(el, currentHeight);
    return (show ? uikit_util__WEBPACK_IMPORTED_MODULE_7__.Transition.start(el, (0,uikit_util__WEBPACK_IMPORTED_MODULE_2__.assign)({}, initProps, {
      overflow: 'hidden',
      height: endHeight
    }), Math.round(duration * (1 - currentHeight / endHeight)), transition) : uikit_util__WEBPACK_IMPORTED_MODULE_7__.Transition.start(el, hideProps, Math.round(duration * (currentHeight / endHeight)), transition).then(() => _toggle(el, false))).then(() => (0,uikit_util__WEBPACK_IMPORTED_MODULE_8__.css)(el, initProps));
  };
}

function toggleAnimation(cmp) {
  return (el, show) => {
    uikit_util__WEBPACK_IMPORTED_MODULE_7__.Animation.cancel(el);
    const {
      animation,
      duration,
      _toggle
    } = cmp;

    if (show) {
      _toggle(el, true);

      return uikit_util__WEBPACK_IMPORTED_MODULE_7__.Animation["in"](el, animation[0], duration, cmp.origin);
    }

    return uikit_util__WEBPACK_IMPORTED_MODULE_7__.Animation.out(el, animation[1] || animation[0], duration, cmp.origin).then(() => _toggle(el, false));
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/ajax.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/util/ajax.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ajax": () => (/* binding */ ajax),
/* harmony export */   "getImage": () => (/* binding */ getImage)
/* harmony export */ });
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./event */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./promise */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");



function ajax(url, options) {
  const env = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.assign)({
    data: null,
    method: 'GET',
    headers: {},
    xhr: new XMLHttpRequest(),
    beforeSend: _lang__WEBPACK_IMPORTED_MODULE_0__.noop,
    responseType: ''
  }, options);
  return _promise__WEBPACK_IMPORTED_MODULE_1__.Promise.resolve().then(() => env.beforeSend(env)).then(() => send(url, env));
}

function send(url, env) {
  return new _promise__WEBPACK_IMPORTED_MODULE_1__.Promise((resolve, reject) => {
    let {
      xhr
    } = env;

    for (const prop in env) {
      if (prop in xhr) {
        try {
          xhr[prop] = env[prop];
        } catch (e) {}
      }
    }

    xhr.open(env.method.toUpperCase(), url);

    for (const header in env.headers) {
      xhr.setRequestHeader(header, env.headers[header]);
    }

    (0,_event__WEBPACK_IMPORTED_MODULE_2__.on)(xhr, 'load', () => {
      if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {
        // IE 11 does not support responseType 'json'
        if (env.responseType === 'json' && (0,_lang__WEBPACK_IMPORTED_MODULE_0__.isString)(xhr.response)) {
          xhr = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.assign)(copyXhr(xhr), {
            response: JSON.parse(xhr.response)
          });
        }

        resolve(xhr);
      } else {
        reject((0,_lang__WEBPACK_IMPORTED_MODULE_0__.assign)(Error(xhr.statusText), {
          xhr,
          status: xhr.status
        }));
      }
    });
    (0,_event__WEBPACK_IMPORTED_MODULE_2__.on)(xhr, 'error', () => reject((0,_lang__WEBPACK_IMPORTED_MODULE_0__.assign)(Error('Network Error'), {
      xhr
    })));
    (0,_event__WEBPACK_IMPORTED_MODULE_2__.on)(xhr, 'timeout', () => reject((0,_lang__WEBPACK_IMPORTED_MODULE_0__.assign)(Error('Network Timeout'), {
      xhr
    })));
    xhr.send(env.data);
  });
}

function getImage(src, srcset, sizes) {
  return new _promise__WEBPACK_IMPORTED_MODULE_1__.Promise((resolve, reject) => {
    const img = new Image();

    img.onerror = e => reject(e);

    img.onload = () => resolve(img);

    sizes && (img.sizes = sizes);
    srcset && (img.srcset = srcset);
    img.src = src;
  });
}

function copyXhr(source) {
  const target = {};

  for (const key in source) {
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/animation.js":
/*!*****************************************************!*\
  !*** ./node_modules/uikit/src/js/util/animation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "transition": () => (/* binding */ transition),
/* harmony export */   "Transition": () => (/* binding */ Transition),
/* harmony export */   "animate": () => (/* binding */ animate),
/* harmony export */   "Animation": () => (/* binding */ Animation)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./attr */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./promise */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./event */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./style */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./class */ "./node_modules/uikit/src/js/util/class.js");







function transition(element, props) {
  let duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 400;
  let timing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'linear';
  return _promise__WEBPACK_IMPORTED_MODULE_1__.Promise.all((0,_lang__WEBPACK_IMPORTED_MODULE_2__.toNodes)(element).map(element => new _promise__WEBPACK_IMPORTED_MODULE_1__.Promise((resolve, reject) => {
    for (const name in props) {
      const value = (0,_style__WEBPACK_IMPORTED_MODULE_3__.css)(element, name);

      if (value === '') {
        (0,_style__WEBPACK_IMPORTED_MODULE_3__.css)(element, name, value);
      }
    }

    const timer = setTimeout(() => (0,_event__WEBPACK_IMPORTED_MODULE_4__.trigger)(element, 'transitionend'), duration);
    (0,_event__WEBPACK_IMPORTED_MODULE_4__.once)(element, 'transitionend transitioncanceled', _ref => {
      let {
        type
      } = _ref;
      clearTimeout(timer);
      (0,_class__WEBPACK_IMPORTED_MODULE_5__.removeClass)(element, 'uk-transition');
      (0,_style__WEBPACK_IMPORTED_MODULE_3__.css)(element, {
        transitionProperty: '',
        transitionDuration: '',
        transitionTimingFunction: ''
      });
      type === 'transitioncanceled' ? reject() : resolve(element);
    }, {
      self: true
    });
    (0,_class__WEBPACK_IMPORTED_MODULE_5__.addClass)(element, 'uk-transition');
    (0,_style__WEBPACK_IMPORTED_MODULE_3__.css)(element, (0,_lang__WEBPACK_IMPORTED_MODULE_2__.assign)({
      transitionProperty: Object.keys(props).map(_style__WEBPACK_IMPORTED_MODULE_3__.propName).join(','),
      transitionDuration: "".concat(duration, "ms"),
      transitionTimingFunction: timing
    }, props));
  })));
}
const Transition = {
  start: transition,

  stop(element) {
    (0,_event__WEBPACK_IMPORTED_MODULE_4__.trigger)(element, 'transitionend');
    return _promise__WEBPACK_IMPORTED_MODULE_1__.Promise.resolve();
  },

  cancel(element) {
    (0,_event__WEBPACK_IMPORTED_MODULE_4__.trigger)(element, 'transitioncanceled');
  },

  inProgress(element) {
    return (0,_class__WEBPACK_IMPORTED_MODULE_5__.hasClass)(element, 'uk-transition');
  }

};
const animationPrefix = 'uk-animation-';
function animate(element, animation) {
  let duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;
  let origin = arguments.length > 3 ? arguments[3] : undefined;
  let out = arguments.length > 4 ? arguments[4] : undefined;
  return _promise__WEBPACK_IMPORTED_MODULE_1__.Promise.all((0,_lang__WEBPACK_IMPORTED_MODULE_2__.toNodes)(element).map(element => new _promise__WEBPACK_IMPORTED_MODULE_1__.Promise((resolve, reject) => {
    (0,_event__WEBPACK_IMPORTED_MODULE_4__.trigger)(element, 'animationcanceled');
    const timer = setTimeout(() => (0,_event__WEBPACK_IMPORTED_MODULE_4__.trigger)(element, 'animationend'), duration);
    (0,_event__WEBPACK_IMPORTED_MODULE_4__.once)(element, 'animationend animationcanceled', _ref2 => {
      let {
        type
      } = _ref2;
      clearTimeout(timer);
      type === 'animationcanceled' ? reject() : resolve(element);
      (0,_style__WEBPACK_IMPORTED_MODULE_3__.css)(element, 'animationDuration', '');
      (0,_class__WEBPACK_IMPORTED_MODULE_5__.removeClasses)(element, "".concat(animationPrefix, "\\S*"));
    }, {
      self: true
    });
    (0,_style__WEBPACK_IMPORTED_MODULE_3__.css)(element, 'animationDuration', "".concat(duration, "ms"));
    (0,_class__WEBPACK_IMPORTED_MODULE_5__.addClass)(element, animation, animationPrefix + (out ? 'leave' : 'enter'));

    if ((0,_lang__WEBPACK_IMPORTED_MODULE_2__.startsWith)(animation, animationPrefix)) {
      origin && (0,_class__WEBPACK_IMPORTED_MODULE_5__.addClass)(element, "uk-transform-origin-".concat(origin));
      out && (0,_class__WEBPACK_IMPORTED_MODULE_5__.addClass)(element, "".concat(animationPrefix, "reverse"));
    }
  })));
}
const inProgress = new RegExp("".concat(animationPrefix, "(enter|leave)"));
const Animation = {
  in: animate,

  out(element, animation, duration, origin) {
    return animate(element, animation, duration, origin, true);
  },

  inProgress(element) {
    return inProgress.test((0,_attr__WEBPACK_IMPORTED_MODULE_6__.attr)(element, 'class'));
  },

  cancel(element) {
    (0,_event__WEBPACK_IMPORTED_MODULE_4__.trigger)(element, 'animationcanceled');
  }

};

/***/ }),

/***/ "./node_modules/uikit/src/js/util/attr.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/util/attr.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "attr": () => (/* binding */ attr),
/* harmony export */   "hasAttr": () => (/* binding */ hasAttr),
/* harmony export */   "removeAttr": () => (/* binding */ removeAttr),
/* harmony export */   "data": () => (/* binding */ data)
/* harmony export */ });
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");

function attr(element, name, value) {
  if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isObject)(name)) {
    for (const key in name) {
      attr(element, key, name[key]);
    }

    return;
  }

  if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(value)) {
    element = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element);
    return element && element.getAttribute(name);
  } else {
    (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).forEach(element => {
      if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value)) {
        value = value.call(element, attr(element, name));
      }

      if (value === null) {
        removeAttr(element, name);
      } else {
        element.setAttribute(name, value);
      }
    });
  }
}
function hasAttr(element, name) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).some(element => element.hasAttribute(name));
}
function removeAttr(element, name) {
  element = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element);
  name.split(' ').forEach(name => element.forEach(element => element.hasAttribute(name) && element.removeAttribute(name)));
}
function data(element, attribute) {
  for (let i = 0, attrs = [attribute, "data-".concat(attribute)]; i < attrs.length; i++) {
    if (hasAttr(element, attrs[i])) {
      return attr(element, attrs[i]);
    }
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/class.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/util/class.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addClass": () => (/* binding */ addClass),
/* harmony export */   "removeClass": () => (/* binding */ removeClass),
/* harmony export */   "removeClasses": () => (/* binding */ removeClasses),
/* harmony export */   "replaceClass": () => (/* binding */ replaceClass),
/* harmony export */   "hasClass": () => (/* binding */ hasClass),
/* harmony export */   "toggleClass": () => (/* binding */ toggleClass)
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attr */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");




function addClass(element) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  apply(element, args, 'add');
}
function removeClass(element) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  apply(element, args, 'remove');
}
function removeClasses(element, cls) {
  (0,_attr__WEBPACK_IMPORTED_MODULE_2__.attr)(element, 'class', value => (value || '').replace(new RegExp("\\b".concat(cls, "\\b"), 'g'), ''));
}
function replaceClass(element) {
  (arguments.length <= 1 ? undefined : arguments[1]) && removeClass(element, arguments.length <= 1 ? undefined : arguments[1]);
  (arguments.length <= 2 ? undefined : arguments[2]) && addClass(element, arguments.length <= 2 ? undefined : arguments[2]);
}
function hasClass(element, cls) {
  [cls] = getClasses(cls);
  const nodes = (0,_lang__WEBPACK_IMPORTED_MODULE_3__.toNodes)(element);

  for (let n = 0; n < nodes.length; n++) {
    if (cls && nodes[n].classList.contains(cls)) {
      return true;
    }
  }

  return false;
}
function toggleClass(element, cls, force) {
  cls = getClasses(cls);
  const nodes = (0,_lang__WEBPACK_IMPORTED_MODULE_3__.toNodes)(element);

  for (let n = 0; n < nodes.length; n++) {
    const list = nodes[n].classList;

    for (let i = 0; i < cls.length; i++) {
      if ((0,_lang__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(force)) {
        list.toggle(cls[i]);
      } else if (supports.Force) {
        list.toggle(cls[i], !!force);
      } else {
        list[force ? 'add' : 'remove'](cls[i]);
      }
    }
  }
}

function apply(element, args, fn) {
  args = args.reduce((args, arg) => args.concat(getClasses(arg)), []);
  const nodes = (0,_lang__WEBPACK_IMPORTED_MODULE_3__.toNodes)(element);

  for (let n = 0; n < nodes.length; n++) {
    if (supports.Multiple) {
      nodes[n].classList[fn](...args);
    } else {
      args.forEach(cls => nodes[n].classList[fn](cls));
    }
  }
}

function getClasses(str) {
  return String(str).split(/\s|,/).filter(Boolean);
} // IE 11


let supports = {
  get Multiple() {
    return this.get('Multiple');
  },

  get Force() {
    return this.get('Force');
  },

  get(key) {
    const {
      classList
    } = document.createElement('_');
    classList.add('a', 'b');
    classList.toggle('c', false);
    supports = {
      Multiple: classList.contains('b'),
      Force: !classList.contains('c')
    };
    return supports[key];
  }

};

/***/ }),

/***/ "./node_modules/uikit/src/js/util/dimensions.js":
/*!******************************************************!*\
  !*** ./node_modules/uikit/src/js/util/dimensions.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dimensions": () => (/* binding */ dimensions),
/* harmony export */   "offset": () => (/* binding */ offset),
/* harmony export */   "position": () => (/* binding */ position),
/* harmony export */   "offsetPosition": () => (/* binding */ offsetPosition),
/* harmony export */   "height": () => (/* binding */ height),
/* harmony export */   "width": () => (/* binding */ width),
/* harmony export */   "boxModelAdjust": () => (/* binding */ boxModelAdjust),
/* harmony export */   "flipPosition": () => (/* binding */ flipPosition),
/* harmony export */   "toPx": () => (/* binding */ toPx)
/* harmony export */ });
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./style */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");


const dirs = {
  width: ['left', 'right'],
  height: ['top', 'bottom']
};
function dimensions(element) {
  const rect = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element).getBoundingClientRect() : {
    height: height(element),
    width: width(element),
    top: 0,
    left: 0
  };
  return {
    height: rect.height,
    width: rect.width,
    top: rect.top,
    left: rect.left,
    bottom: rect.top + rect.height,
    right: rect.left + rect.width
  };
}
function offset(element, coordinates) {
  const currentOffset = dimensions(element);

  if (element) {
    const {
      pageYOffset,
      pageXOffset
    } = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toWindow)(element);
    const offsetBy = {
      height: pageYOffset,
      width: pageXOffset
    };

    for (const dir in dirs) {
      for (const i in dirs[dir]) {
        currentOffset[dirs[dir][i]] += offsetBy[dir];
      }
    }
  }

  if (!coordinates) {
    return currentOffset;
  }

  const pos = (0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, 'position');
  (0,_lang__WEBPACK_IMPORTED_MODULE_0__.each)((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, ['left', 'top']), (value, prop) => (0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, prop, coordinates[prop] - currentOffset[prop] + (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)(pos === 'absolute' && value === 'auto' ? position(element)[prop] : value)));
}
function position(element) {
  let {
    top,
    left
  } = offset(element);
  const {
    ownerDocument: {
      body,
      documentElement
    },
    offsetParent
  } = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element);
  let parent = offsetParent || documentElement;

  while (parent && (parent === body || parent === documentElement) && (0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(parent, 'position') === 'static') {
    parent = parent.parentNode;
  }

  if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isElement)(parent)) {
    const parentOffset = offset(parent);
    top -= parentOffset.top + (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(parent, 'borderTopWidth'));
    left -= parentOffset.left + (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(parent, 'borderLeftWidth'));
  }

  return {
    top: top - (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, 'marginTop')),
    left: left - (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, 'marginLeft'))
  };
}
function offsetPosition(element) {
  const offset = [0, 0];
  element = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element);

  do {
    offset[0] += element.offsetTop;
    offset[1] += element.offsetLeft;

    if ((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, 'position') === 'fixed') {
      const win = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toWindow)(element);
      offset[0] += win.pageYOffset;
      offset[1] += win.pageXOffset;
      return offset;
    }
  } while (element = element.offsetParent);

  return offset;
}
const height = dimension('height');
const width = dimension('width');

function dimension(prop) {
  const propName = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.ucfirst)(prop);
  return (element, value) => {
    if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(value)) {
      if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isWindow)(element)) {
        return element["inner".concat(propName)];
      }

      if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isDocument)(element)) {
        const doc = element.documentElement;
        return Math.max(doc["offset".concat(propName)], doc["scroll".concat(propName)]);
      }

      element = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element);
      value = (0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, prop);
      value = value === 'auto' ? element["offset".concat(propName)] : (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)(value) || 0;
      return value - boxModelAdjust(element, prop);
    } else {
      return (0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, prop, !value && value !== 0 ? '' : +value + boxModelAdjust(element, prop) + 'px');
    }
  };
}

function boxModelAdjust(element, prop) {
  let sizing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'border-box';
  return (0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, 'boxSizing') === sizing ? dirs[prop].map(_lang__WEBPACK_IMPORTED_MODULE_0__.ucfirst).reduce((value, prop) => value + (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, "padding".concat(prop))) + (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)((0,_style__WEBPACK_IMPORTED_MODULE_1__.css)(element, "border".concat(prop, "Width"))), 0) : 0;
}
function flipPosition(pos) {
  for (const dir in dirs) {
    for (const i in dirs[dir]) {
      if (dirs[dir][i] === pos) {
        return dirs[dir][1 - i];
      }
    }
  }

  return pos;
}
function toPx(value) {
  let property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'width';
  let element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;
  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.isNumeric)(value) ? +value : (0,_lang__WEBPACK_IMPORTED_MODULE_0__.endsWith)(value, 'vh') ? percent(height((0,_lang__WEBPACK_IMPORTED_MODULE_0__.toWindow)(element)), value) : (0,_lang__WEBPACK_IMPORTED_MODULE_0__.endsWith)(value, 'vw') ? percent(width((0,_lang__WEBPACK_IMPORTED_MODULE_0__.toWindow)(element)), value) : (0,_lang__WEBPACK_IMPORTED_MODULE_0__.endsWith)(value, '%') ? percent(dimensions(element)[property], value) : (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)(value);
}

function percent(base, value) {
  return base * (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toFloat)(value) / 100;
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/dom.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/util/dom.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ready": () => (/* binding */ ready),
/* harmony export */   "empty": () => (/* binding */ empty),
/* harmony export */   "html": () => (/* binding */ html),
/* harmony export */   "prepend": () => (/* binding */ prepend),
/* harmony export */   "append": () => (/* binding */ append),
/* harmony export */   "before": () => (/* binding */ before),
/* harmony export */   "after": () => (/* binding */ after),
/* harmony export */   "remove": () => (/* binding */ remove),
/* harmony export */   "wrapAll": () => (/* binding */ wrapAll),
/* harmony export */   "wrapInner": () => (/* binding */ wrapInner),
/* harmony export */   "unwrap": () => (/* binding */ unwrap),
/* harmony export */   "fragment": () => (/* binding */ fragment),
/* harmony export */   "apply": () => (/* binding */ apply),
/* harmony export */   "$": () => (/* binding */ $),
/* harmony export */   "$$": () => (/* binding */ $$)
/* harmony export */ });
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./selector */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");




function ready(fn) {
  if (document.readyState !== 'loading') {
    fn();
    return;
  }

  (0,_event__WEBPACK_IMPORTED_MODULE_0__.once)(document, 'DOMContentLoaded', fn);
}
function empty(element) {
  element = $(element);
  element.innerHTML = '';
  return element;
}
function html(parent, html) {
  parent = $(parent);
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(html) ? parent.innerHTML : append(parent.hasChildNodes() ? empty(parent) : parent, html);
}
function prepend(parent, element) {
  parent = $(parent);

  if (parent.hasChildNodes()) {
    return insertNodes(element, element => parent.insertBefore(element, parent.firstChild));
  } else {
    return append(parent, element);
  }
}
function append(parent, element) {
  parent = $(parent);
  return insertNodes(element, element => parent.appendChild(element));
}
function before(ref, element) {
  ref = $(ref);
  return insertNodes(element, element => ref.parentNode.insertBefore(element, ref));
}
function after(ref, element) {
  ref = $(ref);
  return insertNodes(element, element => ref.nextSibling ? before(ref.nextSibling, element) : append(ref.parentNode, element));
}

function insertNodes(element, fn) {
  element = (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(element) ? fragment(element) : element;
  return element ? 'length' in element ? (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(element).map(fn) : fn(element) : null;
}

function remove(element) {
  (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(element).forEach(element => element.parentNode && element.parentNode.removeChild(element));
}
function wrapAll(element, structure) {
  structure = (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNode)(before(element, structure));

  while (structure.firstChild) {
    structure = structure.firstChild;
  }

  append(structure, element);
  return structure;
}
function wrapInner(element, structure) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)((0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(element).map(element => element.hasChildNodes ? wrapAll((0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(element.childNodes), structure) : append(element, structure)));
}
function unwrap(element) {
  (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(element).map(_filter__WEBPACK_IMPORTED_MODULE_2__.parent).filter((value, index, self) => self.indexOf(value) === index).forEach(parent => {
    before(parent, parent.childNodes);
    remove(parent);
  });
}
const fragmentRe = /^\s*<(\w+|!)[^>]*>/;
const singleTagRe = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
function fragment(html) {
  const matches = singleTagRe.exec(html);

  if (matches) {
    return document.createElement(matches[1]);
  }

  const container = document.createElement('div');

  if (fragmentRe.test(html)) {
    container.insertAdjacentHTML('beforeend', html.trim());
  } else {
    container.textContent = html;
  }

  return container.childNodes.length > 1 ? (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(container.childNodes) : container.firstChild;
}
function apply(node, fn) {
  if (!(0,_lang__WEBPACK_IMPORTED_MODULE_1__.isElement)(node)) {
    return;
  }

  fn(node);
  node = node.firstElementChild;

  while (node) {
    const next = node.nextElementSibling;
    apply(node, fn);
    node = next;
  }
}
function $(selector, context) {
  return isHtml(selector) ? (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNode)(fragment(selector)) : (0,_selector__WEBPACK_IMPORTED_MODULE_3__.find)(selector, context);
}
function $$(selector, context) {
  return isHtml(selector) ? (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(fragment(selector)) : (0,_selector__WEBPACK_IMPORTED_MODULE_3__.findAll)(selector, context);
}

function isHtml(str) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(str) && (str[0] === '<' || str.match(/^\s*</));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/env.js":
/*!***********************************************!*\
  !*** ./node_modules/uikit/src/js/util/env.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "inBrowser": () => (/* binding */ inBrowser),
/* harmony export */   "isIE": () => (/* binding */ isIE),
/* harmony export */   "isRtl": () => (/* binding */ isRtl),
/* harmony export */   "hasTouch": () => (/* binding */ hasTouch),
/* harmony export */   "pointerDown": () => (/* binding */ pointerDown),
/* harmony export */   "pointerMove": () => (/* binding */ pointerMove),
/* harmony export */   "pointerUp": () => (/* binding */ pointerUp),
/* harmony export */   "pointerEnter": () => (/* binding */ pointerEnter),
/* harmony export */   "pointerLeave": () => (/* binding */ pointerLeave),
/* harmony export */   "pointerCancel": () => (/* binding */ pointerCancel)
/* harmony export */ });
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attr */ "./node_modules/uikit/src/js/util/attr.js");
/* global DocumentTouch */

const inBrowser = typeof window !== 'undefined';
const isIE = inBrowser && /msie|trident/i.test(window.navigator.userAgent);
const isRtl = inBrowser && (0,_attr__WEBPACK_IMPORTED_MODULE_0__.attr)(document.documentElement, 'dir') === 'rtl';
const hasTouchEvents = inBrowser && 'ontouchstart' in window;
const hasPointerEvents = inBrowser && window.PointerEvent;
const hasTouch = inBrowser && (hasTouchEvents || window.DocumentTouch && document instanceof DocumentTouch || navigator.maxTouchPoints); // IE >=11

const pointerDown = hasPointerEvents ? 'pointerdown' : hasTouchEvents ? 'touchstart' : 'mousedown';
const pointerMove = hasPointerEvents ? 'pointermove' : hasTouchEvents ? 'touchmove' : 'mousemove';
const pointerUp = hasPointerEvents ? 'pointerup' : hasTouchEvents ? 'touchend' : 'mouseup';
const pointerEnter = hasPointerEvents ? 'pointerenter' : hasTouchEvents ? '' : 'mouseenter';
const pointerLeave = hasPointerEvents ? 'pointerleave' : hasTouchEvents ? '' : 'mouseleave';
const pointerCancel = hasPointerEvents ? 'pointercancel' : 'touchcancel';

/***/ }),

/***/ "./node_modules/uikit/src/js/util/event.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/util/event.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "on": () => (/* binding */ on),
/* harmony export */   "off": () => (/* binding */ off),
/* harmony export */   "once": () => (/* binding */ once),
/* harmony export */   "trigger": () => (/* binding */ trigger),
/* harmony export */   "createEvent": () => (/* binding */ createEvent),
/* harmony export */   "toEventTargets": () => (/* binding */ toEventTargets),
/* harmony export */   "isTouch": () => (/* binding */ isTouch),
/* harmony export */   "getEventPos": () => (/* binding */ getEventPos)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./env */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selector */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./filter */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");





function on() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  let [targets, type, selector, listener, useCapture] = getArgs(args);
  targets = toEventTargets(targets);

  if (listener.length > 1) {
    listener = detail(listener);
  }

  if (useCapture && useCapture.self) {
    listener = selfFilter(listener);
  }

  if (selector) {
    listener = delegate(selector, listener);
  }

  useCapture = useCaptureFilter(useCapture);
  type.split(' ').forEach(type => targets.forEach(target => target.addEventListener(type, listener, useCapture)));
  return () => off(targets, type, listener, useCapture);
}
function off(targets, type, listener) {
  let useCapture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  useCapture = useCaptureFilter(useCapture);
  targets = toEventTargets(targets);
  type.split(' ').forEach(type => targets.forEach(target => target.removeEventListener(type, listener, useCapture)));
}
function once() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  const [element, type, selector, listener, useCapture, condition] = getArgs(args);
  const off = on(element, type, selector, e => {
    const result = !condition || condition(e);

    if (result) {
      off();
      listener(e, result);
    }
  }, useCapture);
  return off;
}
function trigger(targets, event, detail) {
  return toEventTargets(targets).reduce((notCanceled, target) => notCanceled && target.dispatchEvent(createEvent(event, true, true, detail)), true);
}
function createEvent(e) {
  let bubbles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  let cancelable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  let detail = arguments.length > 3 ? arguments[3] : undefined;

  if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(e)) {
    const event = document.createEvent('CustomEvent'); // IE 11

    event.initCustomEvent(e, bubbles, cancelable, detail);
    e = event;
  }

  return e;
}

function getArgs(args) {
  if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isFunction)(args[2])) {
    args.splice(2, 0, false);
  }

  return args;
}

function delegate(selector, listener) {
  return e => {
    const current = selector[0] === '>' ? (0,_selector__WEBPACK_IMPORTED_MODULE_2__.findAll)(selector, e.currentTarget).reverse().filter(element => (0,_filter__WEBPACK_IMPORTED_MODULE_3__.within)(e.target, element))[0] : (0,_filter__WEBPACK_IMPORTED_MODULE_3__.closest)(e.target, selector);

    if (current) {
      e.current = current;
      listener.call(this, e);
    }
  };
}

function detail(listener) {
  return e => (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isArray)(e.detail) ? listener(e, ...e.detail) : listener(e);
}

function selfFilter(listener) {
  return function (e) {
    if (e.target === e.currentTarget || e.target === e.current) {
      return listener.call(null, e);
    }
  };
}

function useCaptureFilter(options) {
  return options && _env__WEBPACK_IMPORTED_MODULE_4__.isIE && !(0,_lang__WEBPACK_IMPORTED_MODULE_1__.isBoolean)(options) ? !!options.capture : options;
}

function isEventTarget(target) {
  return target && 'addEventListener' in target;
}

function toEventTarget(target) {
  return isEventTarget(target) ? target : (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNode)(target);
}

function toEventTargets(target) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isArray)(target) ? target.map(toEventTarget).filter(Boolean) : (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(target) ? (0,_selector__WEBPACK_IMPORTED_MODULE_2__.findAll)(target) : isEventTarget(target) ? [target] : (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(target);
}
function isTouch(e) {
  return e.pointerType === 'touch' || !!e.touches;
}
function getEventPos(e) {
  const {
    touches,
    changedTouches
  } = e;
  const {
    clientX: x,
    clientY: y
  } = touches && touches[0] || changedTouches && changedTouches[0] || e;
  return {
    x,
    y
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/fastdom.js":
/*!***************************************************!*\
  !*** ./node_modules/uikit/src/js/util/fastdom.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fastdom": () => (/* binding */ fastdom)
/* harmony export */ });
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./promise */ "./node_modules/uikit/src/js/util/promise.js");

/*
    Based on:
    Copyright (c) 2016 Wilson Page wilsonpage@me.com
    https://github.com/wilsonpage/fastdom
*/

const fastdom = {
  reads: [],
  writes: [],

  read(task) {
    this.reads.push(task);
    scheduleFlush();
    return task;
  },

  write(task) {
    this.writes.push(task);
    scheduleFlush();
    return task;
  },

  clear(task) {
    remove(this.reads, task);
    remove(this.writes, task);
  },

  flush
};

function flush() {
  let recursion = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  runTasks(fastdom.reads);
  runTasks(fastdom.writes.splice(0));
  fastdom.scheduled = false;

  if (fastdom.reads.length || fastdom.writes.length) {
    scheduleFlush(recursion + 1);
  }
}

const RECURSION_LIMIT = 4;

function scheduleFlush(recursion) {
  if (fastdom.scheduled) {
    return;
  }

  fastdom.scheduled = true;

  if (recursion && recursion < RECURSION_LIMIT) {
    _promise__WEBPACK_IMPORTED_MODULE_0__.Promise.resolve().then(() => flush(recursion));
  } else {
    requestAnimationFrame(() => flush());
  }
}

function runTasks(tasks) {
  let task;

  while (task = tasks.shift()) {
    try {
      task();
    } catch (e) {
      console.error(e);
    }
  }
}

function remove(array, item) {
  const index = array.indexOf(item);
  return ~index && array.splice(index, 1);
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/filter.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/util/filter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isVoidElement": () => (/* binding */ isVoidElement),
/* harmony export */   "isVisible": () => (/* binding */ isVisible),
/* harmony export */   "selInput": () => (/* binding */ selInput),
/* harmony export */   "isInput": () => (/* binding */ isInput),
/* harmony export */   "selFocusable": () => (/* binding */ selFocusable),
/* harmony export */   "isFocusable": () => (/* binding */ isFocusable),
/* harmony export */   "parent": () => (/* binding */ parent),
/* harmony export */   "filter": () => (/* binding */ filter),
/* harmony export */   "matches": () => (/* binding */ matches),
/* harmony export */   "closest": () => (/* binding */ closest),
/* harmony export */   "within": () => (/* binding */ within),
/* harmony export */   "parents": () => (/* binding */ parents),
/* harmony export */   "children": () => (/* binding */ children),
/* harmony export */   "index": () => (/* binding */ index)
/* harmony export */ });
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./env */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");


const voidElements = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  menuitem: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
};
function isVoidElement(element) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).some(element => voidElements[element.tagName.toLowerCase()]);
}
function isVisible(element) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).some(element => element.offsetWidth || element.offsetHeight || element.getClientRects().length);
}
const selInput = 'input,select,textarea,button';
function isInput(element) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).some(element => matches(element, selInput));
}
const selFocusable = "".concat(selInput, ",a[href],[tabindex]");
function isFocusable(element) {
  return matches(element, selFocusable);
}
function parent(element) {
  element = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element);
  return element && (0,_lang__WEBPACK_IMPORTED_MODULE_0__.isElement)(element.parentNode) && element.parentNode;
}
function filter(element, selector) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).filter(element => matches(element, selector));
}
const elProto = _env__WEBPACK_IMPORTED_MODULE_1__.inBrowser ? Element.prototype : {};
const matchesFn = elProto.matches || elProto.webkitMatchesSelector || elProto.msMatchesSelector || _lang__WEBPACK_IMPORTED_MODULE_0__.noop;
function matches(element, selector) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).some(element => matchesFn.call(element, selector));
}

const closestFn = elProto.closest || function (selector) {
  let ancestor = this;

  do {
    if (matches(ancestor, selector)) {
      return ancestor;
    }
  } while (ancestor = parent(ancestor));
};

function closest(element, selector) {
  if ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.startsWith)(selector, '>')) {
    selector = selector.slice(1);
  }

  return (0,_lang__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? closestFn.call(element, selector) : (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).map(element => closest(element, selector)).filter(Boolean);
}
function within(element, selector) {
  return !(0,_lang__WEBPACK_IMPORTED_MODULE_0__.isString)(selector) ? element === selector || ((0,_lang__WEBPACK_IMPORTED_MODULE_0__.isDocument)(selector) ? selector.documentElement : (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(selector)).contains((0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element)) // IE 11 document does not implement contains
  : matches(element, selector) || !!closest(element, selector);
}
function parents(element, selector) {
  const elements = [];

  while (element = parent(element)) {
    if (!selector || matches(element, selector)) {
      elements.push(element);
    }
  }

  return elements;
}
function children(element, selector) {
  element = (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(element);
  const children = element ? (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element.children) : [];
  return selector ? filter(children, selector) : children;
}
function index(element, ref) {
  return ref ? (0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNodes)(element).indexOf((0,_lang__WEBPACK_IMPORTED_MODULE_0__.toNode)(ref)) : children(parent(element)).indexOf(element);
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/index.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/util/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ajax": () => (/* reexport safe */ _ajax__WEBPACK_IMPORTED_MODULE_0__.ajax),
/* harmony export */   "getImage": () => (/* reexport safe */ _ajax__WEBPACK_IMPORTED_MODULE_0__.getImage),
/* harmony export */   "Animation": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.Animation),
/* harmony export */   "Transition": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.Transition),
/* harmony export */   "animate": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.animate),
/* harmony export */   "transition": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_1__.transition),
/* harmony export */   "attr": () => (/* reexport safe */ _attr__WEBPACK_IMPORTED_MODULE_2__.attr),
/* harmony export */   "data": () => (/* reexport safe */ _attr__WEBPACK_IMPORTED_MODULE_2__.data),
/* harmony export */   "hasAttr": () => (/* reexport safe */ _attr__WEBPACK_IMPORTED_MODULE_2__.hasAttr),
/* harmony export */   "removeAttr": () => (/* reexport safe */ _attr__WEBPACK_IMPORTED_MODULE_2__.removeAttr),
/* harmony export */   "addClass": () => (/* reexport safe */ _class__WEBPACK_IMPORTED_MODULE_3__.addClass),
/* harmony export */   "hasClass": () => (/* reexport safe */ _class__WEBPACK_IMPORTED_MODULE_3__.hasClass),
/* harmony export */   "removeClass": () => (/* reexport safe */ _class__WEBPACK_IMPORTED_MODULE_3__.removeClass),
/* harmony export */   "removeClasses": () => (/* reexport safe */ _class__WEBPACK_IMPORTED_MODULE_3__.removeClasses),
/* harmony export */   "replaceClass": () => (/* reexport safe */ _class__WEBPACK_IMPORTED_MODULE_3__.replaceClass),
/* harmony export */   "toggleClass": () => (/* reexport safe */ _class__WEBPACK_IMPORTED_MODULE_3__.toggleClass),
/* harmony export */   "boxModelAdjust": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.boxModelAdjust),
/* harmony export */   "dimensions": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.dimensions),
/* harmony export */   "flipPosition": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.flipPosition),
/* harmony export */   "height": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.height),
/* harmony export */   "offset": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.offset),
/* harmony export */   "offsetPosition": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.offsetPosition),
/* harmony export */   "position": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.position),
/* harmony export */   "toPx": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.toPx),
/* harmony export */   "width": () => (/* reexport safe */ _dimensions__WEBPACK_IMPORTED_MODULE_4__.width),
/* harmony export */   "$": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.$),
/* harmony export */   "$$": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.$$),
/* harmony export */   "after": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.after),
/* harmony export */   "append": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.append),
/* harmony export */   "apply": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.apply),
/* harmony export */   "before": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.before),
/* harmony export */   "empty": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.empty),
/* harmony export */   "fragment": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.fragment),
/* harmony export */   "html": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.html),
/* harmony export */   "prepend": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.prepend),
/* harmony export */   "ready": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.ready),
/* harmony export */   "remove": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.remove),
/* harmony export */   "unwrap": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.unwrap),
/* harmony export */   "wrapAll": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.wrapAll),
/* harmony export */   "wrapInner": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_5__.wrapInner),
/* harmony export */   "hasTouch": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.hasTouch),
/* harmony export */   "inBrowser": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.inBrowser),
/* harmony export */   "isIE": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.isIE),
/* harmony export */   "isRtl": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.isRtl),
/* harmony export */   "pointerCancel": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.pointerCancel),
/* harmony export */   "pointerDown": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.pointerDown),
/* harmony export */   "pointerEnter": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.pointerEnter),
/* harmony export */   "pointerLeave": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.pointerLeave),
/* harmony export */   "pointerMove": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.pointerMove),
/* harmony export */   "pointerUp": () => (/* reexport safe */ _env__WEBPACK_IMPORTED_MODULE_6__.pointerUp),
/* harmony export */   "createEvent": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.createEvent),
/* harmony export */   "getEventPos": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.getEventPos),
/* harmony export */   "isTouch": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.isTouch),
/* harmony export */   "off": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.off),
/* harmony export */   "on": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.on),
/* harmony export */   "once": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.once),
/* harmony export */   "toEventTargets": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.toEventTargets),
/* harmony export */   "trigger": () => (/* reexport safe */ _event__WEBPACK_IMPORTED_MODULE_7__.trigger),
/* harmony export */   "fastdom": () => (/* reexport safe */ _fastdom__WEBPACK_IMPORTED_MODULE_8__.fastdom),
/* harmony export */   "children": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.children),
/* harmony export */   "closest": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.closest),
/* harmony export */   "filter": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.filter),
/* harmony export */   "index": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.index),
/* harmony export */   "isFocusable": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.isFocusable),
/* harmony export */   "isInput": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.isInput),
/* harmony export */   "isVisible": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.isVisible),
/* harmony export */   "isVoidElement": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.isVoidElement),
/* harmony export */   "matches": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.matches),
/* harmony export */   "parent": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.parent),
/* harmony export */   "parents": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.parents),
/* harmony export */   "selFocusable": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.selFocusable),
/* harmony export */   "selInput": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.selInput),
/* harmony export */   "within": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_9__.within),
/* harmony export */   "Dimensions": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.Dimensions),
/* harmony export */   "assign": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.assign),
/* harmony export */   "camelize": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.camelize),
/* harmony export */   "clamp": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.clamp),
/* harmony export */   "each": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.each),
/* harmony export */   "endsWith": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.endsWith),
/* harmony export */   "findIndex": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.findIndex),
/* harmony export */   "getIndex": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.getIndex),
/* harmony export */   "hasOwn": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.hasOwn),
/* harmony export */   "hyphenate": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.hyphenate),
/* harmony export */   "includes": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.includes),
/* harmony export */   "intersectRect": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.intersectRect),
/* harmony export */   "isArray": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isArray),
/* harmony export */   "isBoolean": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isBoolean),
/* harmony export */   "isDocument": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isDocument),
/* harmony export */   "isElement": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isElement),
/* harmony export */   "isEmpty": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isEmpty),
/* harmony export */   "isEqual": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isEqual),
/* harmony export */   "isFunction": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isFunction),
/* harmony export */   "isNode": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isNode),
/* harmony export */   "isNumber": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isNumber),
/* harmony export */   "isNumeric": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isNumeric),
/* harmony export */   "isObject": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isObject),
/* harmony export */   "isPlainObject": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isPlainObject),
/* harmony export */   "isString": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isString),
/* harmony export */   "isUndefined": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isUndefined),
/* harmony export */   "isWindow": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.isWindow),
/* harmony export */   "last": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.last),
/* harmony export */   "memoize": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.memoize),
/* harmony export */   "noop": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.noop),
/* harmony export */   "pointInRect": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.pointInRect),
/* harmony export */   "sortBy": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.sortBy),
/* harmony export */   "startsWith": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.startsWith),
/* harmony export */   "swap": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.swap),
/* harmony export */   "toArray": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toArray),
/* harmony export */   "toBoolean": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toBoolean),
/* harmony export */   "toFloat": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toFloat),
/* harmony export */   "toMs": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toMs),
/* harmony export */   "toNode": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toNode),
/* harmony export */   "toNodes": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toNodes),
/* harmony export */   "toNumber": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toNumber),
/* harmony export */   "toWindow": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.toWindow),
/* harmony export */   "ucfirst": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.ucfirst),
/* harmony export */   "uniqueBy": () => (/* reexport safe */ _lang__WEBPACK_IMPORTED_MODULE_10__.uniqueBy),
/* harmony export */   "MouseTracker": () => (/* reexport safe */ _mouse__WEBPACK_IMPORTED_MODULE_11__.MouseTracker),
/* harmony export */   "mergeOptions": () => (/* reexport safe */ _options__WEBPACK_IMPORTED_MODULE_12__.mergeOptions),
/* harmony export */   "parseOptions": () => (/* reexport safe */ _options__WEBPACK_IMPORTED_MODULE_12__.parseOptions),
/* harmony export */   "isVideo": () => (/* reexport safe */ _player__WEBPACK_IMPORTED_MODULE_13__.isVideo),
/* harmony export */   "mute": () => (/* reexport safe */ _player__WEBPACK_IMPORTED_MODULE_13__.mute),
/* harmony export */   "pause": () => (/* reexport safe */ _player__WEBPACK_IMPORTED_MODULE_13__.pause),
/* harmony export */   "play": () => (/* reexport safe */ _player__WEBPACK_IMPORTED_MODULE_13__.play),
/* harmony export */   "positionAt": () => (/* reexport safe */ _position__WEBPACK_IMPORTED_MODULE_14__.positionAt),
/* harmony export */   "Deferred": () => (/* reexport safe */ _promise__WEBPACK_IMPORTED_MODULE_15__.Deferred),
/* harmony export */   "Promise": () => (/* reexport safe */ _promise__WEBPACK_IMPORTED_MODULE_15__.Promise),
/* harmony export */   "escape": () => (/* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_16__.escape),
/* harmony export */   "find": () => (/* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_16__.find),
/* harmony export */   "findAll": () => (/* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_16__.findAll),
/* harmony export */   "query": () => (/* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_16__.query),
/* harmony export */   "queryAll": () => (/* reexport safe */ _selector__WEBPACK_IMPORTED_MODULE_16__.queryAll),
/* harmony export */   "css": () => (/* reexport safe */ _style__WEBPACK_IMPORTED_MODULE_17__.css),
/* harmony export */   "getCssVar": () => (/* reexport safe */ _style__WEBPACK_IMPORTED_MODULE_17__.getCssVar),
/* harmony export */   "propName": () => (/* reexport safe */ _style__WEBPACK_IMPORTED_MODULE_17__.propName),
/* harmony export */   "getViewport": () => (/* reexport safe */ _viewport__WEBPACK_IMPORTED_MODULE_18__.getViewport),
/* harmony export */   "getViewportClientHeight": () => (/* reexport safe */ _viewport__WEBPACK_IMPORTED_MODULE_18__.getViewportClientHeight),
/* harmony export */   "isInView": () => (/* reexport safe */ _viewport__WEBPACK_IMPORTED_MODULE_18__.isInView),
/* harmony export */   "scrollIntoView": () => (/* reexport safe */ _viewport__WEBPACK_IMPORTED_MODULE_18__.scrollIntoView),
/* harmony export */   "scrollParents": () => (/* reexport safe */ _viewport__WEBPACK_IMPORTED_MODULE_18__.scrollParents),
/* harmony export */   "scrollTop": () => (/* reexport safe */ _viewport__WEBPACK_IMPORTED_MODULE_18__.scrollTop),
/* harmony export */   "scrolledOver": () => (/* reexport safe */ _viewport__WEBPACK_IMPORTED_MODULE_18__.scrolledOver)
/* harmony export */ });
/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax */ "./node_modules/uikit/src/js/util/ajax.js");
/* harmony import */ var _animation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animation */ "./node_modules/uikit/src/js/util/animation.js");
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attr */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./class */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var _dimensions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dimensions */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./env */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./event */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var _fastdom__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fastdom */ "./node_modules/uikit/src/js/util/fastdom.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./filter */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./mouse */ "./node_modules/uikit/src/js/util/mouse.js");
/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./options */ "./node_modules/uikit/src/js/util/options.js");
/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./player */ "./node_modules/uikit/src/js/util/player.js");
/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./position */ "./node_modules/uikit/src/js/util/position.js");
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./promise */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./selector */ "./node_modules/uikit/src/js/util/selector.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./style */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var _viewport__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./viewport */ "./node_modules/uikit/src/js/util/viewport.js");




















/***/ }),

/***/ "./node_modules/uikit/src/js/util/lang.js":
/*!************************************************!*\
  !*** ./node_modules/uikit/src/js/util/lang.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasOwn": () => (/* binding */ hasOwn),
/* harmony export */   "hyphenate": () => (/* binding */ hyphenate),
/* harmony export */   "camelize": () => (/* binding */ camelize),
/* harmony export */   "ucfirst": () => (/* binding */ ucfirst),
/* harmony export */   "startsWith": () => (/* binding */ startsWith),
/* harmony export */   "endsWith": () => (/* binding */ endsWith),
/* harmony export */   "includes": () => (/* binding */ includes),
/* harmony export */   "findIndex": () => (/* binding */ findIndex),
/* harmony export */   "isArray": () => (/* binding */ isArray),
/* harmony export */   "isFunction": () => (/* binding */ isFunction),
/* harmony export */   "isObject": () => (/* binding */ isObject),
/* harmony export */   "isPlainObject": () => (/* binding */ isPlainObject),
/* harmony export */   "isWindow": () => (/* binding */ isWindow),
/* harmony export */   "isDocument": () => (/* binding */ isDocument),
/* harmony export */   "isNode": () => (/* binding */ isNode),
/* harmony export */   "isElement": () => (/* binding */ isElement),
/* harmony export */   "isBoolean": () => (/* binding */ isBoolean),
/* harmony export */   "isString": () => (/* binding */ isString),
/* harmony export */   "isNumber": () => (/* binding */ isNumber),
/* harmony export */   "isNumeric": () => (/* binding */ isNumeric),
/* harmony export */   "isEmpty": () => (/* binding */ isEmpty),
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined),
/* harmony export */   "toBoolean": () => (/* binding */ toBoolean),
/* harmony export */   "toNumber": () => (/* binding */ toNumber),
/* harmony export */   "toFloat": () => (/* binding */ toFloat),
/* harmony export */   "toArray": () => (/* binding */ toArray),
/* harmony export */   "toNode": () => (/* binding */ toNode),
/* harmony export */   "toNodes": () => (/* binding */ toNodes),
/* harmony export */   "toWindow": () => (/* binding */ toWindow),
/* harmony export */   "toMs": () => (/* binding */ toMs),
/* harmony export */   "isEqual": () => (/* binding */ isEqual),
/* harmony export */   "swap": () => (/* binding */ swap),
/* harmony export */   "assign": () => (/* binding */ assign),
/* harmony export */   "last": () => (/* binding */ last),
/* harmony export */   "each": () => (/* binding */ each),
/* harmony export */   "sortBy": () => (/* binding */ sortBy),
/* harmony export */   "uniqueBy": () => (/* binding */ uniqueBy),
/* harmony export */   "clamp": () => (/* binding */ clamp),
/* harmony export */   "noop": () => (/* binding */ noop),
/* harmony export */   "intersectRect": () => (/* binding */ intersectRect),
/* harmony export */   "pointInRect": () => (/* binding */ pointInRect),
/* harmony export */   "Dimensions": () => (/* binding */ Dimensions),
/* harmony export */   "getIndex": () => (/* binding */ getIndex),
/* harmony export */   "memoize": () => (/* binding */ memoize)
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);


const objPrototype = Object.prototype;
const {
  hasOwnProperty
} = objPrototype;
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
const hyphenateRe = /\B([A-Z])/g;
const hyphenate = memoize(str => str.replace(hyphenateRe, '-$1').toLowerCase());
const camelizeRe = /-(\w)/g;
const camelize = memoize(str => str.replace(camelizeRe, toUpper));
const ucfirst = memoize(str => str.length ? toUpper(null, str.charAt(0)) + str.slice(1) : '');

function toUpper(_, c) {
  return c ? c.toUpperCase() : '';
}

const strPrototype = String.prototype;

const startsWithFn = strPrototype.startsWith || function (search) {
  return this.lastIndexOf(search, 0) === 0;
};

function startsWith(str, search) {
  return startsWithFn.call(str, search);
}

const endsWithFn = strPrototype.endsWith || function (search) {
  return this.substr(-search.length) === search;
};

function endsWith(str, search) {
  return endsWithFn.call(str, search);
}
const arrPrototype = Array.prototype;

const includesFn = function (search, i) {
  return !!~this.indexOf(search, i);
};

const includesStr = strPrototype.includes || includesFn;
const includesArray = arrPrototype.includes || includesFn;
function includes(obj, search) {
  return obj && (isString(obj) ? includesStr : includesArray).call(obj, search);
}

const findIndexFn = arrPrototype.findIndex || function (predicate) {
  for (let i = 0; i < this.length; i++) {
    if (predicate.call(arguments[1], this[i], i, this)) {
      return i;
    }
  }

  return -1;
};

function findIndex(array, predicate) {
  return findIndexFn.call(array, predicate);
}
const {
  isArray
} = Array;
function isFunction(obj) {
  return typeof obj === 'function';
}
function isObject(obj) {
  return obj !== null && typeof obj === 'object';
}
const {
  toString
} = objPrototype;
function isPlainObject(obj) {
  return toString.call(obj) === '[object Object]';
}
function isWindow(obj) {
  return isObject(obj) && obj === obj.window;
}
function isDocument(obj) {
  return nodeType(obj) === 9;
}
function isNode(obj) {
  return nodeType(obj) >= 1;
}
function isElement(obj) {
  return nodeType(obj) === 1;
}

function nodeType(obj) {
  return !isWindow(obj) && isObject(obj) && obj.nodeType;
}

function isBoolean(value) {
  return typeof value === 'boolean';
}
function isString(value) {
  return typeof value === 'string';
}
function isNumber(value) {
  return typeof value === 'number';
}
function isNumeric(value) {
  return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));
}
function isEmpty(obj) {
  return !(isArray(obj) ? obj.length : isObject(obj) ? Object.keys(obj).length : false);
}
function isUndefined(value) {
  return value === void 0;
}
function toBoolean(value) {
  return isBoolean(value) ? value : value === 'true' || value === '1' || value === '' ? true : value === 'false' || value === '0' ? false : value;
}
function toNumber(value) {
  const number = Number(value);
  return isNaN(number) ? false : number;
}
function toFloat(value) {
  return parseFloat(value) || 0;
}
const toArray = Array.from || (value => arrPrototype.slice.call(value));
function toNode(element) {
  return toNodes(element)[0];
}
function toNodes(element) {
  return element && (isNode(element) ? [element] : toArray(element).filter(isNode)) || [];
}
function toWindow(element) {
  if (isWindow(element)) {
    return element;
  }

  element = toNode(element);
  return element ? (isDocument(element) ? element : element.ownerDocument).defaultView : window;
}
function toMs(time) {
  return !time ? 0 : endsWith(time, 'ms') ? toFloat(time) : toFloat(time) * 1000;
}
function isEqual(value, other) {
  return value === other || isObject(value) && isObject(other) && Object.keys(value).length === Object.keys(other).length && each(value, (val, key) => val === other[key]);
}
function swap(value, a, b) {
  return value.replace(new RegExp("".concat(a, "|").concat(b), 'g'), match => match === a ? b : a);
}
const assign = Object.assign || function (target) {
  target = Object(target);

  for (let i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {
    const source = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];

    if (source !== null) {
      for (const key in source) {
        if (hasOwn(source, key)) {
          target[key] = source[key];
        }
      }
    }
  }

  return target;
};
function last(array) {
  return array[array.length - 1];
}
function each(obj, cb) {
  for (const key in obj) {
    if (false === cb(obj[key], key)) {
      return false;
    }
  }

  return true;
}
function sortBy(array, prop) {
  return array.slice().sort((_ref, _ref2) => {
    let {
      [prop]: propA = 0
    } = _ref;
    let {
      [prop]: propB = 0
    } = _ref2;
    return propA > propB ? 1 : propB > propA ? -1 : 0;
  });
}
function uniqueBy(array, prop) {
  const seen = new Set();
  return array.filter(_ref3 => {
    let {
      [prop]: check
    } = _ref3;
    return seen.has(check) ? false : seen.add(check) || true;
  } // IE 11 does not return the Set object
  );
}
function clamp(number) {
  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  return Math.min(Math.max(toNumber(number) || 0, min), max);
}
function noop() {}
function intersectRect() {
  for (var _len = arguments.length, rects = new Array(_len), _key = 0; _key < _len; _key++) {
    rects[_key] = arguments[_key];
  }

  return [['bottom', 'top'], ['right', 'left']].every(_ref4 => {
    let [minProp, maxProp] = _ref4;
    return Math.min(...rects.map(_ref5 => {
      let {
        [minProp]: min
      } = _ref5;
      return min;
    })) - Math.max(...rects.map(_ref6 => {
      let {
        [maxProp]: max
      } = _ref6;
      return max;
    })) > 0;
  });
}
function pointInRect(point, rect) {
  return point.x <= rect.right && point.x >= rect.left && point.y <= rect.bottom && point.y >= rect.top;
}
const Dimensions = {
  ratio(dimensions, prop, value) {
    const aProp = prop === 'width' ? 'height' : 'width';
    return {
      [aProp]: dimensions[prop] ? Math.round(value * dimensions[aProp] / dimensions[prop]) : dimensions[aProp],
      [prop]: value
    };
  },

  contain(dimensions, maxDimensions) {
    dimensions = assign({}, dimensions);
    each(dimensions, (_, prop) => dimensions = dimensions[prop] > maxDimensions[prop] ? this.ratio(dimensions, prop, maxDimensions[prop]) : dimensions);
    return dimensions;
  },

  cover(dimensions, maxDimensions) {
    dimensions = this.contain(dimensions, maxDimensions);
    each(dimensions, (_, prop) => dimensions = dimensions[prop] < maxDimensions[prop] ? this.ratio(dimensions, prop, maxDimensions[prop]) : dimensions);
    return dimensions;
  }

};
function getIndex(i, elements) {
  let current = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  let finite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  elements = toNodes(elements);
  const {
    length
  } = elements;
  i = isNumeric(i) ? toNumber(i) : i === 'next' ? current + 1 : i === 'previous' ? current - 1 : elements.indexOf(toNode(i));

  if (finite) {
    return clamp(i, 0, length - 1);
  }

  i %= length;
  return i < 0 ? i + length : i;
}
function memoize(fn) {
  const cache = Object.create(null);
  return key => cache[key] || (cache[key] = fn(key));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/mouse.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/util/mouse.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MouseTracker": () => (/* binding */ MouseTracker)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");



function MouseTracker() {}
MouseTracker.prototype = {
  positions: [],

  init() {
    this.positions = [];
    let position;
    this.unbind = (0,_event__WEBPACK_IMPORTED_MODULE_1__.on)(document, 'mousemove', e => position = (0,_event__WEBPACK_IMPORTED_MODULE_1__.getEventPos)(e));
    this.interval = setInterval(() => {
      if (!position) {
        return;
      }

      this.positions.push(position);

      if (this.positions.length > 5) {
        this.positions.shift();
      }
    }, 50);
  },

  cancel() {
    this.unbind && this.unbind();
    this.interval && clearInterval(this.interval);
  },

  movesTo(target) {
    if (this.positions.length < 2) {
      return false;
    }

    const p = target.getBoundingClientRect();
    const {
      left,
      right,
      top,
      bottom
    } = p;
    const [prevPosition] = this.positions;
    const position = (0,_lang__WEBPACK_IMPORTED_MODULE_2__.last)(this.positions);
    const path = [prevPosition, position];

    if ((0,_lang__WEBPACK_IMPORTED_MODULE_2__.pointInRect)(position, p)) {
      return false;
    }

    const diagonals = [[{
      x: left,
      y: top
    }, {
      x: right,
      y: bottom
    }], [{
      x: left,
      y: bottom
    }, {
      x: right,
      y: top
    }]];
    return diagonals.some(diagonal => {
      const intersection = intersect(path, diagonal);
      return intersection && (0,_lang__WEBPACK_IMPORTED_MODULE_2__.pointInRect)(intersection, p);
    });
  }

}; // Inspired by http://paulbourke.net/geometry/pointlineplane/

function intersect(_ref, _ref2) {
  let [{
    x: x1,
    y: y1
  }, {
    x: x2,
    y: y2
  }] = _ref;
  let [{
    x: x3,
    y: y3
  }, {
    x: x4,
    y: y4
  }] = _ref2;
  const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1); // Lines are parallel

  if (denominator === 0) {
    return false;
  }

  const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;

  if (ua < 0) {
    return false;
  } // Return an object with the x and y coordinates of the intersection


  return {
    x: x1 + ua * (x2 - x1),
    y: y1 + ua * (y2 - y1)
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/options.js":
/*!***************************************************!*\
  !*** ./node_modules/uikit/src/js/util/options.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mergeOptions": () => (/* binding */ mergeOptions),
/* harmony export */   "parseOptions": () => (/* binding */ parseOptions)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");


const strats = {};
strats.events = strats.created = strats.beforeConnect = strats.connected = strats.beforeDisconnect = strats.disconnected = strats.destroy = concatStrat; // args strategy

strats.args = function (parentVal, childVal) {
  return childVal !== false && concatStrat(childVal || parentVal);
}; // update strategy


strats.update = function (parentVal, childVal) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.sortBy)(concatStrat(parentVal, (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isFunction)(childVal) ? {
    read: childVal
  } : childVal), 'order');
}; // property strategy


strats.props = function (parentVal, childVal) {
  if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isArray)(childVal)) {
    childVal = childVal.reduce((value, key) => {
      value[key] = String;
      return value;
    }, {});
  }

  return strats.methods(parentVal, childVal);
}; // extend strategy


strats.computed = strats.methods = function (parentVal, childVal) {
  return childVal ? parentVal ? (0,_lang__WEBPACK_IMPORTED_MODULE_1__.assign)({}, parentVal, childVal) : childVal : parentVal;
}; // data strategy


strats.data = function (parentVal, childVal, vm) {
  if (!vm) {
    if (!childVal) {
      return parentVal;
    }

    if (!parentVal) {
      return childVal;
    }

    return function (vm) {
      return mergeFnData(parentVal, childVal, vm);
    };
  }

  return mergeFnData(parentVal, childVal, vm);
};

function mergeFnData(parentVal, childVal, vm) {
  return strats.computed((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isFunction)(parentVal) ? parentVal.call(vm, vm) : parentVal, (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isFunction)(childVal) ? childVal.call(vm, vm) : childVal);
} // concat strategy


function concatStrat(parentVal, childVal) {
  parentVal = parentVal && !(0,_lang__WEBPACK_IMPORTED_MODULE_1__.isArray)(parentVal) ? [parentVal] : parentVal;
  return childVal ? parentVal ? parentVal.concat(childVal) : (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isArray)(childVal) ? childVal : [childVal] : parentVal;
} // default strategy


function defaultStrat(parentVal, childVal) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(childVal) ? parentVal : childVal;
}

function mergeOptions(parent, child, vm) {
  const options = {};

  if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isFunction)(child)) {
    child = child.options;
  }

  if (child.extends) {
    parent = mergeOptions(parent, child.extends, vm);
  }

  if (child.mixins) {
    for (let i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }

  for (const key in parent) {
    mergeKey(key);
  }

  for (const key in child) {
    if (!(0,_lang__WEBPACK_IMPORTED_MODULE_1__.hasOwn)(parent, key)) {
      mergeKey(key);
    }
  }

  function mergeKey(key) {
    options[key] = (strats[key] || defaultStrat)(parent[key], child[key], vm);
  }

  return options;
}
function parseOptions(options) {
  let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  try {
    return !options ? {} : (0,_lang__WEBPACK_IMPORTED_MODULE_1__.startsWith)(options, '{') ? JSON.parse(options) : args.length && !(0,_lang__WEBPACK_IMPORTED_MODULE_1__.includes)(options, ':') ? {
      [args[0]]: options
    } : options.split(';').reduce((options, option) => {
      const [key, value] = option.split(/:(.*)/);

      if (key && !(0,_lang__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value)) {
        options[key.trim()] = value.trim();
      }

      return options;
    }, {});
  } catch (e) {
    return {};
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/player.js":
/*!**************************************************!*\
  !*** ./node_modules/uikit/src/js/util/player.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "play": () => (/* binding */ play),
/* harmony export */   "pause": () => (/* binding */ pause),
/* harmony export */   "mute": () => (/* binding */ mute),
/* harmony export */   "isVideo": () => (/* binding */ isVideo)
/* harmony export */ });
/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./event */ "./node_modules/uikit/src/js/util/event.js");
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./promise */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");



function play(el) {
  if (isIFrame(el)) {
    call(el, {
      func: 'playVideo',
      method: 'play'
    });
  }

  if (isHTML5(el)) {
    try {
      el.play().catch(_lang__WEBPACK_IMPORTED_MODULE_0__.noop);
    } catch (e) {}
  }
}
function pause(el) {
  if (isIFrame(el)) {
    call(el, {
      func: 'pauseVideo',
      method: 'pause'
    });
  }

  if (isHTML5(el)) {
    el.pause();
  }
}
function mute(el) {
  if (isIFrame(el)) {
    call(el, {
      func: 'mute',
      method: 'setVolume',
      value: 0
    });
  }

  if (isHTML5(el)) {
    el.muted = true;
  }
}
function isVideo(el) {
  return isHTML5(el) || isIFrame(el);
}

function isHTML5(el) {
  return el && el.tagName === 'VIDEO';
}

function isIFrame(el) {
  return el && el.tagName === 'IFRAME' && (isYoutube(el) || isVimeo(el));
}

function isYoutube(el) {
  return !!el.src.match(/\/\/.*?youtube(-nocookie)?\.[a-z]+\/(watch\?v=[^&\s]+|embed)|youtu\.be\/.*/);
}

function isVimeo(el) {
  return !!el.src.match(/vimeo\.com\/video\/.*/);
}

function call(el, cmd) {
  enableApi(el).then(() => post(el, cmd));
}

function post(el, cmd) {
  try {
    el.contentWindow.postMessage(JSON.stringify((0,_lang__WEBPACK_IMPORTED_MODULE_0__.assign)({
      event: 'command'
    }, cmd)), '*');
  } catch (e) {}
}

const stateKey = '_ukPlayer';
let counter = 0;

function enableApi(el) {
  if (el[stateKey]) {
    return el[stateKey];
  }

  const youtube = isYoutube(el);
  const vimeo = isVimeo(el);
  const id = ++counter;
  let poller;
  return el[stateKey] = new _promise__WEBPACK_IMPORTED_MODULE_1__.Promise(resolve => {
    youtube && (0,_event__WEBPACK_IMPORTED_MODULE_2__.once)(el, 'load', () => {
      const listener = () => post(el, {
        event: 'listening',
        id
      });

      poller = setInterval(listener, 100);
      listener();
    });
    (0,_event__WEBPACK_IMPORTED_MODULE_2__.once)(window, 'message', resolve, false, _ref => {
      let {
        data
      } = _ref;

      try {
        data = JSON.parse(data);
        return data && (youtube && data.id === id && data.event === 'onReady' || vimeo && Number(data.player_id) === id);
      } catch (e) {}
    });
    el.src = "".concat(el.src).concat((0,_lang__WEBPACK_IMPORTED_MODULE_0__.includes)(el.src, '?') ? '&' : '?').concat(youtube ? 'enablejsapi=1' : "api=1&player_id=".concat(id));
  }).then(() => clearInterval(poller));
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/position.js":
/*!****************************************************!*\
  !*** ./node_modules/uikit/src/js/util/position.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "positionAt": () => (/* binding */ positionAt)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _dimensions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dimensions */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");
/* harmony import */ var _viewport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewport */ "./node_modules/uikit/src/js/util/viewport.js");




const dirs = {
  width: ['x', 'left', 'right'],
  height: ['y', 'top', 'bottom']
};
function positionAt(element, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary) {
  elAttach = getPos(elAttach);
  targetAttach = getPos(targetAttach);
  const flipped = {
    element: elAttach,
    target: targetAttach
  };

  if (!element || !target) {
    return flipped;
  }

  const dim = (0,_dimensions__WEBPACK_IMPORTED_MODULE_1__.offset)(element);
  const targetDim = (0,_dimensions__WEBPACK_IMPORTED_MODULE_1__.offset)(target);
  const position = targetDim;
  moveTo(position, elAttach, dim, -1);
  moveTo(position, targetAttach, targetDim, 1);
  elOffset = getOffsets(elOffset, dim.width, dim.height);
  targetOffset = getOffsets(targetOffset, targetDim.width, targetDim.height);
  elOffset['x'] += targetOffset['x'];
  elOffset['y'] += targetOffset['y'];
  position.left += elOffset['x'];
  position.top += elOffset['y'];

  if (flip) {
    let boundaries = (0,_viewport__WEBPACK_IMPORTED_MODULE_2__.scrollParents)(element).map(_viewport__WEBPACK_IMPORTED_MODULE_2__.getViewport);

    if (boundary && !(0,_lang__WEBPACK_IMPORTED_MODULE_3__.includes)(boundaries, boundary)) {
      boundaries.unshift(boundary);
    }

    boundaries = boundaries.map(el => (0,_dimensions__WEBPACK_IMPORTED_MODULE_1__.offset)(el));
    (0,_lang__WEBPACK_IMPORTED_MODULE_3__.each)(dirs, (_ref, prop) => {
      let [dir, align, alignFlip] = _ref;

      if (!(flip === true || (0,_lang__WEBPACK_IMPORTED_MODULE_3__.includes)(flip, dir))) {
        return;
      }

      boundaries.some(boundary => {
        const elemOffset = elAttach[dir] === align ? -dim[prop] : elAttach[dir] === alignFlip ? dim[prop] : 0;
        const targetOffset = targetAttach[dir] === align ? targetDim[prop] : targetAttach[dir] === alignFlip ? -targetDim[prop] : 0;

        if (position[align] < boundary[align] || position[align] + dim[prop] > boundary[alignFlip]) {
          const centerOffset = dim[prop] / 2;
          const centerTargetOffset = targetAttach[dir] === 'center' ? -targetDim[prop] / 2 : 0;
          return elAttach[dir] === 'center' && (apply(centerOffset, centerTargetOffset) || apply(-centerOffset, -centerTargetOffset)) || apply(elemOffset, targetOffset);
        }

        function apply(elemOffset, targetOffset) {
          const newVal = (0,_lang__WEBPACK_IMPORTED_MODULE_3__.toFloat)((position[align] + elemOffset + targetOffset - elOffset[dir] * 2).toFixed(4));

          if (newVal >= boundary[align] && newVal + dim[prop] <= boundary[alignFlip]) {
            position[align] = newVal;
            ['element', 'target'].forEach(el => {
              flipped[el][dir] = !elemOffset ? flipped[el][dir] : flipped[el][dir] === dirs[prop][1] ? dirs[prop][2] : dirs[prop][1];
            });
            return true;
          }
        }
      });
    });
  }

  (0,_dimensions__WEBPACK_IMPORTED_MODULE_1__.offset)(element, position);
  return flipped;
}

function moveTo(position, attach, dim, factor) {
  (0,_lang__WEBPACK_IMPORTED_MODULE_3__.each)(dirs, (_ref2, prop) => {
    let [dir, align, alignFlip] = _ref2;

    if (attach[dir] === alignFlip) {
      position[align] += dim[prop] * factor;
    } else if (attach[dir] === 'center') {
      position[align] += dim[prop] * factor / 2;
    }
  });
}

function getPos(pos) {
  const x = /left|center|right/;
  const y = /top|center|bottom/;
  pos = (pos || '').split(' ');

  if (pos.length === 1) {
    pos = x.test(pos[0]) ? pos.concat('center') : y.test(pos[0]) ? ['center'].concat(pos) : ['center', 'center'];
  }

  return {
    x: x.test(pos[0]) ? pos[0] : 'center',
    y: y.test(pos[1]) ? pos[1] : 'center'
  };
}

function getOffsets(offsets, width, height) {
  const [x, y] = (offsets || '').split(' ');
  return {
    x: x ? (0,_lang__WEBPACK_IMPORTED_MODULE_3__.toFloat)(x) * ((0,_lang__WEBPACK_IMPORTED_MODULE_3__.endsWith)(x, '%') ? width / 100 : 1) : 0,
    y: y ? (0,_lang__WEBPACK_IMPORTED_MODULE_3__.toFloat)(y) * ((0,_lang__WEBPACK_IMPORTED_MODULE_3__.endsWith)(y, '%') ? height / 100 : 1) : 0
  };
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/promise.js":
/*!***************************************************!*\
  !*** ./node_modules/uikit/src/js/util/promise.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Promise": () => (/* binding */ Promise),
/* harmony export */   "Deferred": () => (/* binding */ Deferred)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_immediate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.immediate.js */ "./node_modules/core-js/modules/web.immediate.js");
/* harmony import */ var core_js_modules_web_immediate_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_immediate_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");



/* global setImmediate */


const Promise = _env__WEBPACK_IMPORTED_MODULE_2__.inBrowser && window.Promise || PromiseFn;
class Deferred {
  constructor() {
    this.promise = new Promise((resolve, reject) => {
      this.reject = reject;
      this.resolve = resolve;
    });
  }

}
/**
 * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)
 */

const RESOLVED = 0;
const REJECTED = 1;
const PENDING = 2;
const async = _env__WEBPACK_IMPORTED_MODULE_2__.inBrowser && window.setImmediate || setTimeout;

function PromiseFn(executor) {
  this.state = PENDING;
  this.value = undefined;
  this.deferred = [];
  const promise = this;

  try {
    executor(x => {
      promise.resolve(x);
    }, r => {
      promise.reject(r);
    });
  } catch (e) {
    promise.reject(e);
  }
}

PromiseFn.reject = function (r) {
  return new PromiseFn((resolve, reject) => {
    reject(r);
  });
};

PromiseFn.resolve = function (x) {
  return new PromiseFn((resolve, reject) => {
    resolve(x);
  });
};

PromiseFn.all = function all(iterable) {
  return new PromiseFn((resolve, reject) => {
    const result = [];
    let count = 0;

    if (iterable.length === 0) {
      resolve(result);
    }

    function resolver(i) {
      return function (x) {
        result[i] = x;
        count += 1;

        if (count === iterable.length) {
          resolve(result);
        }
      };
    }

    for (let i = 0; i < iterable.length; i += 1) {
      PromiseFn.resolve(iterable[i]).then(resolver(i), reject);
    }
  });
};

PromiseFn.race = function race(iterable) {
  return new PromiseFn((resolve, reject) => {
    for (let i = 0; i < iterable.length; i += 1) {
      PromiseFn.resolve(iterable[i]).then(resolve, reject);
    }
  });
};

const p = PromiseFn.prototype;

p.resolve = function resolve(x) {
  const promise = this;

  if (promise.state === PENDING) {
    if (x === promise) {
      throw new TypeError('Promise settled with itself.');
    }

    let called = false;

    try {
      const then = x && x.then;

      if (x !== null && (0,_lang__WEBPACK_IMPORTED_MODULE_3__.isObject)(x) && (0,_lang__WEBPACK_IMPORTED_MODULE_3__.isFunction)(then)) {
        then.call(x, x => {
          if (!called) {
            promise.resolve(x);
          }

          called = true;
        }, r => {
          if (!called) {
            promise.reject(r);
          }

          called = true;
        });
        return;
      }
    } catch (e) {
      if (!called) {
        promise.reject(e);
      }

      return;
    }

    promise.state = RESOLVED;
    promise.value = x;
    promise.notify();
  }
};

p.reject = function reject(reason) {
  const promise = this;

  if (promise.state === PENDING) {
    if (reason === promise) {
      throw new TypeError('Promise settled with itself.');
    }

    promise.state = REJECTED;
    promise.value = reason;
    promise.notify();
  }
};

p.notify = function notify() {
  async(() => {
    if (this.state !== PENDING) {
      while (this.deferred.length) {
        const [onResolved, onRejected, resolve, reject] = this.deferred.shift();

        try {
          if (this.state === RESOLVED) {
            if ((0,_lang__WEBPACK_IMPORTED_MODULE_3__.isFunction)(onResolved)) {
              resolve(onResolved.call(undefined, this.value));
            } else {
              resolve(this.value);
            }
          } else if (this.state === REJECTED) {
            if ((0,_lang__WEBPACK_IMPORTED_MODULE_3__.isFunction)(onRejected)) {
              resolve(onRejected.call(undefined, this.value));
            } else {
              reject(this.value);
            }
          }
        } catch (e) {
          reject(e);
        }
      }
    }
  });
};

p.then = function then(onResolved, onRejected) {
  return new PromiseFn((resolve, reject) => {
    this.deferred.push([onResolved, onRejected, resolve, reject]);
    this.notify();
  });
};

p.catch = function (onRejected) {
  return this.then(undefined, onRejected);
};

/***/ }),

/***/ "./node_modules/uikit/src/js/util/selector.js":
/*!****************************************************!*\
  !*** ./node_modules/uikit/src/js/util/selector.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "query": () => (/* binding */ query),
/* harmony export */   "queryAll": () => (/* binding */ queryAll),
/* harmony export */   "find": () => (/* binding */ find),
/* harmony export */   "findAll": () => (/* binding */ findAll),
/* harmony export */   "escape": () => (/* binding */ escape)
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attr */ "./node_modules/uikit/src/js/util/attr.js");
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./env */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");





function query(selector, context) {
  return find(selector, getContext(selector, context));
}
function queryAll(selector, context) {
  return findAll(selector, getContext(selector, context));
}

function getContext(selector) {
  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(selector) && isContextSelector(selector) || (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isDocument)(context) ? context : context.ownerDocument;
}

function find(selector, context) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNode)(_query(selector, context, 'querySelector'));
}
function findAll(selector, context) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(_query(selector, context, 'querySelectorAll'));
}

function _query(selector) {
  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;
  let queryFn = arguments.length > 2 ? arguments[2] : undefined;

  if (!selector || !(0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(selector)) {
    return selector;
  }

  selector = selector.replace(contextSanitizeRe, '$1 *');

  if (isContextSelector(selector)) {
    selector = splitSelector(selector).map(selector => {
      let ctx = context;

      if (selector[0] === '!') {
        const selectors = selector.substr(1).trim().split(' ');
        ctx = (0,_filter__WEBPACK_IMPORTED_MODULE_2__.closest)((0,_filter__WEBPACK_IMPORTED_MODULE_2__.parent)(context), selectors[0]);
        selector = selectors.slice(1).join(' ').trim();
      }

      if (selector[0] === '-') {
        const selectors = selector.substr(1).trim().split(' ');
        const prev = (ctx || context).previousElementSibling;
        ctx = (0,_filter__WEBPACK_IMPORTED_MODULE_2__.matches)(prev, selector.substr(1)) ? prev : null;
        selector = selectors.slice(1).join(' ');
      }

      if (!ctx) {
        return null;
      }

      return "".concat(domPath(ctx), " ").concat(selector);
    }).filter(Boolean).join(',');
    context = document;
  }

  try {
    return context[queryFn](selector);
  } catch (e) {
    return null;
  }
}

const contextSelectorRe = /(^|[^\\],)\s*[!>+~-]/;
const contextSanitizeRe = /([!>+~-])(?=\s+[!>+~-]|\s*$)/g;
const isContextSelector = (0,_lang__WEBPACK_IMPORTED_MODULE_1__.memoize)(selector => selector.match(contextSelectorRe));
const selectorRe = /.*?[^\\](?:,|$)/g;
const splitSelector = (0,_lang__WEBPACK_IMPORTED_MODULE_1__.memoize)(selector => selector.match(selectorRe).map(selector => selector.replace(/,$/, '').trim()));

function domPath(element) {
  const names = [];

  while (element.parentNode) {
    const id = (0,_attr__WEBPACK_IMPORTED_MODULE_3__.attr)(element, 'id');

    if (id) {
      names.unshift("#".concat(escape(id)));
      break;
    } else {
      let {
        tagName
      } = element;

      if (tagName !== 'HTML') {
        tagName += ":nth-child(".concat((0,_filter__WEBPACK_IMPORTED_MODULE_2__.index)(element) + 1, ")");
      }

      names.unshift(tagName);
      element = element.parentNode;
    }
  }

  return names.join(' > ');
}

const escapeFn = _env__WEBPACK_IMPORTED_MODULE_4__.inBrowser && window.CSS && CSS.escape || function (css) {
  return css.replace(/([^\x7f-\uFFFF\w-])/g, match => "\\".concat(match));
};

function escape(css) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(css) ? escapeFn.call(null, css) : '';
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/style.js":
/*!*************************************************!*\
  !*** ./node_modules/uikit/src/js/util/style.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "css": () => (/* binding */ css),
/* harmony export */   "getCssVar": () => (/* binding */ getCssVar),
/* harmony export */   "propName": () => (/* binding */ propName)
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./env */ "./node_modules/uikit/src/js/util/env.js");
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom */ "./node_modules/uikit/src/js/util/dom.js");
/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./class */ "./node_modules/uikit/src/js/util/class.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");





const cssNumber = {
  'animation-iteration-count': true,
  'column-count': true,
  'fill-opacity': true,
  'flex-grow': true,
  'flex-shrink': true,
  'font-weight': true,
  'line-height': true,
  'opacity': true,
  'order': true,
  'orphans': true,
  'stroke-dasharray': true,
  'stroke-dashoffset': true,
  'widows': true,
  'z-index': true,
  'zoom': true
};
function css(element, property, value) {
  let priority = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toNodes)(element).map(element => {
    if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isString)(property)) {
      property = propName(property);

      if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value)) {
        return getStyle(element, property);
      } else if (!value && !(0,_lang__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value)) {
        element.style.removeProperty(property);
      } else {
        element.style.setProperty(property, (0,_lang__WEBPACK_IMPORTED_MODULE_1__.isNumeric)(value) && !cssNumber[property] ? "".concat(value, "px") : value, priority);
      }
    } else if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isArray)(property)) {
      const styles = getStyles(element);
      return property.reduce((props, property) => {
        props[property] = styles[propName(property)];
        return props;
      }, {});
    } else if ((0,_lang__WEBPACK_IMPORTED_MODULE_1__.isObject)(property)) {
      priority = value;
      (0,_lang__WEBPACK_IMPORTED_MODULE_1__.each)(property, (value, property) => css(element, property, value, priority));
    }

    return element;
  })[0];
}

function getStyles(element, pseudoElt) {
  return (0,_lang__WEBPACK_IMPORTED_MODULE_1__.toWindow)(element).getComputedStyle(element, pseudoElt);
}

function getStyle(element, property, pseudoElt) {
  return getStyles(element, pseudoElt)[property];
}

const parseCssVar = (0,_lang__WEBPACK_IMPORTED_MODULE_1__.memoize)(name => {
  /* usage in css: .uk-name:before { content:"xyz" } */
  const element = (0,_dom__WEBPACK_IMPORTED_MODULE_2__.append)(document.documentElement, (0,_dom__WEBPACK_IMPORTED_MODULE_2__.fragment)('<div>'));
  (0,_class__WEBPACK_IMPORTED_MODULE_3__.addClass)(element, "uk-".concat(name));
  const value = getStyle(element, 'content', ':before');
  (0,_dom__WEBPACK_IMPORTED_MODULE_2__.remove)(element);
  return value;
});
const propertyRe = /^\s*(["'])?(.*?)\1\s*$/;
function getCssVar(name) {
  return (_env__WEBPACK_IMPORTED_MODULE_4__.isIE ? parseCssVar(name) : getStyles(document.documentElement).getPropertyValue("--uk-".concat(name))).replace(propertyRe, '$2');
} // https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-setproperty

const propName = (0,_lang__WEBPACK_IMPORTED_MODULE_1__.memoize)(name => vendorPropName(name));
const cssPrefixes = ['webkit', 'moz', 'ms'];

function vendorPropName(name) {
  name = (0,_lang__WEBPACK_IMPORTED_MODULE_1__.hyphenate)(name);
  const {
    style
  } = document.documentElement;

  if (name in style) {
    return name;
  }

  let i = cssPrefixes.length,
      prefixedName;

  while (i--) {
    prefixedName = "-".concat(cssPrefixes[i], "-").concat(name);

    if (prefixedName in style) {
      return prefixedName;
    }
  }
}

/***/ }),

/***/ "./node_modules/uikit/src/js/util/viewport.js":
/*!****************************************************!*\
  !*** ./node_modules/uikit/src/js/util/viewport.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isInView": () => (/* binding */ isInView),
/* harmony export */   "scrollTop": () => (/* binding */ scrollTop),
/* harmony export */   "scrollIntoView": () => (/* binding */ scrollIntoView),
/* harmony export */   "scrolledOver": () => (/* binding */ scrolledOver),
/* harmony export */   "scrollParents": () => (/* binding */ scrollParents),
/* harmony export */   "getViewport": () => (/* binding */ getViewport),
/* harmony export */   "getViewportClientHeight": () => (/* binding */ getViewportClientHeight)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./style */ "./node_modules/uikit/src/js/util/style.js");
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./promise */ "./node_modules/uikit/src/js/util/promise.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/uikit/src/js/util/filter.js");
/* harmony import */ var _dimensions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dimensions */ "./node_modules/uikit/src/js/util/dimensions.js");
/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lang */ "./node_modules/uikit/src/js/util/lang.js");






function isInView(element) {
  let offsetTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  let offsetLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  if (!(0,_filter__WEBPACK_IMPORTED_MODULE_1__.isVisible)(element)) {
    return false;
  }

  return (0,_lang__WEBPACK_IMPORTED_MODULE_2__.intersectRect)(...scrollParents(element).map(parent => {
    const {
      top,
      left,
      bottom,
      right
    } = (0,_dimensions__WEBPACK_IMPORTED_MODULE_3__.offset)(getViewport(parent));
    return {
      top: top - offsetTop,
      left: left - offsetLeft,
      bottom: bottom + offsetTop,
      right: right + offsetLeft
    };
  }).concat((0,_dimensions__WEBPACK_IMPORTED_MODULE_3__.offset)(element)));
}
function scrollTop(element, top) {
  if ((0,_lang__WEBPACK_IMPORTED_MODULE_2__.isWindow)(element) || (0,_lang__WEBPACK_IMPORTED_MODULE_2__.isDocument)(element)) {
    element = getScrollingElement(element);
  } else {
    element = (0,_lang__WEBPACK_IMPORTED_MODULE_2__.toNode)(element);
  }

  element.scrollTop = top;
}
function scrollIntoView(element) {
  let {
    offset: offsetBy = 0
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const parents = (0,_filter__WEBPACK_IMPORTED_MODULE_1__.isVisible)(element) ? scrollParents(element) : [];
  return parents.reduce((fn, scrollElement, i) => {
    const {
      scrollTop,
      scrollHeight,
      offsetHeight
    } = scrollElement;
    const maxScroll = scrollHeight - getViewportClientHeight(scrollElement);
    const {
      height: elHeight,
      top: elTop
    } = (0,_dimensions__WEBPACK_IMPORTED_MODULE_3__.offset)(parents[i - 1] || element);
    let top = Math.ceil(elTop - (0,_dimensions__WEBPACK_IMPORTED_MODULE_3__.offset)(getViewport(scrollElement)).top - offsetBy + scrollTop);

    if (offsetBy > 0 && offsetHeight < elHeight + offsetBy) {
      top += offsetBy;
    } else {
      offsetBy = 0;
    }

    if (top > maxScroll) {
      offsetBy -= top - maxScroll;
      top = maxScroll;
    } else if (top < 0) {
      offsetBy -= top;
      top = 0;
    }

    return () => scrollTo(scrollElement, top - scrollTop).then(fn);
  }, () => _promise__WEBPACK_IMPORTED_MODULE_4__.Promise.resolve())();

  function scrollTo(element, top) {
    return new _promise__WEBPACK_IMPORTED_MODULE_4__.Promise(resolve => {
      const scroll = element.scrollTop;
      const duration = getDuration(Math.abs(top));
      const start = Date.now();

      (function step() {
        const percent = ease((0,_lang__WEBPACK_IMPORTED_MODULE_2__.clamp)((Date.now() - start) / duration));
        scrollTop(element, scroll + top * percent); // scroll more if we have not reached our destination

        if (percent === 1) {
          resolve();
        } else {
          requestAnimationFrame(step);
        }
      })();
    });
  }

  function getDuration(dist) {
    return 40 * Math.pow(dist, .375);
  }

  function ease(k) {
    return 0.5 * (1 - Math.cos(Math.PI * k));
  }
}
function scrolledOver(element) {
  let heightOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  if (!(0,_filter__WEBPACK_IMPORTED_MODULE_1__.isVisible)(element)) {
    return 0;
  }

  const [scrollElement] = scrollParents(element, /auto|scroll/, true);
  const {
    scrollHeight,
    scrollTop
  } = scrollElement;
  const clientHeight = getViewportClientHeight(scrollElement);
  const viewportTop = (0,_dimensions__WEBPACK_IMPORTED_MODULE_3__.offsetPosition)(element)[0] - scrollTop - (0,_dimensions__WEBPACK_IMPORTED_MODULE_3__.offsetPosition)(scrollElement)[0];
  const viewportDist = Math.min(clientHeight, viewportTop + scrollTop);
  const top = viewportTop - viewportDist;
  const dist = Math.min(element.offsetHeight + heightOffset + viewportDist, scrollHeight - (viewportTop + scrollTop), scrollHeight - clientHeight);
  return (0,_lang__WEBPACK_IMPORTED_MODULE_2__.clamp)(-1 * top / dist);
}
function scrollParents(element) {
  let overflowRe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /auto|scroll|hidden/;
  let scrollable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  const scrollEl = getScrollingElement(element);
  let ancestors = (0,_filter__WEBPACK_IMPORTED_MODULE_1__.parents)(element).reverse();
  ancestors = ancestors.slice(ancestors.indexOf(scrollEl) + 1);
  const fixedIndex = (0,_lang__WEBPACK_IMPORTED_MODULE_2__.findIndex)(ancestors, el => (0,_style__WEBPACK_IMPORTED_MODULE_5__.css)(el, 'position') === 'fixed');

  if (~fixedIndex) {
    ancestors = ancestors.slice(fixedIndex);
  }

  return [scrollEl].concat(ancestors.filter(parent => overflowRe.test((0,_style__WEBPACK_IMPORTED_MODULE_5__.css)(parent, 'overflow')) && (!scrollable || parent.scrollHeight > getViewportClientHeight(parent)))).reverse();
}
function getViewport(scrollElement) {
  return scrollElement === getScrollingElement(scrollElement) ? window : scrollElement;
} // iOS 12 returns <body> as scrollingElement

function getViewportClientHeight(scrollElement) {
  return (scrollElement === getScrollingElement(scrollElement) ? document.documentElement : scrollElement).clientHeight;
}

function getScrollingElement(element) {
  const {
    document
  } = (0,_lang__WEBPACK_IMPORTED_MODULE_2__.toWindow)(element);
  return document.scrollingElement || document.documentElement;
}

/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var TypeError = global.TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-possible-prototype.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var String = global.String;
var TypeError = global.TypeError;

module.exports = function (argument) {
  if (typeof argument == 'object' || isCallable(argument)) return argument;
  throw TypeError("Can't set " + String(argument) + ' as a prototype');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/advance-string-index.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/advance-string-index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var String = global.String;
var TypeError = global.TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw TypeError(String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis([].slice);


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Object = global.Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-prototype-getter.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-prototype-getter.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "./node_modules/core-js/internals/create-iterator-constructor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-iterator-constructor.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js").IteratorPrototype);
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-iterator.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "./node_modules/core-js/internals/create-iterator-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
          redefine(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
  }
  Iterators[NAME] = defaultIterator;

  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-iterables.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/dom-iterables.js ***!
  \*********************************************************/
/***/ ((module) => {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-token-list-prototype.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/dom-token-list-prototype.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;

module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ios.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-node.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-node.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ ((module) => {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
  options.name        - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(/*! ../modules/es.regexp.exec */ "./node_modules/core-js/modules/es.regexp.exec.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

var SPECIES = wellKnownSymbol('species');
var RegExpPrototype = RegExp.prototype;

module.exports = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = uncurryThis(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    redefine(String.prototype, KEY, methods[0]);
    redefine(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-apply.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/function-apply.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var uncurryThis = NATIVE_BIND && bind.bind(call, call);

module.exports = NATIVE_BIND ? function (fn) {
  return fn && uncurryThis(fn);
} : function (fn) {
  return fn && function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return func == null ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-substitution.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/get-substitution.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var floor = Math.floor;
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice(str, 0, position);
      case "'": return stringSlice(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var Object = global.Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "./node_modules/core-js/internals/native-weak-map.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = uncurryThis(store.get);
  var wmhas = uncurryThis(store.has);
  var wmset = uncurryThis(store.set);
  set = function (it, metadata) {
    if (wmhas(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget(store, it) || {};
  };
  has = function (it) {
    return wmhas(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ ((module) => {

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

module.exports = function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var Object = global.Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators-core.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterators-core.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable(IteratorPrototype[ITERATOR])) {
  redefine(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/native-symbol.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/native-symbol.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/native-weak-map.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/native-weak-map.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var TypeError = global.TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-prototype-of.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var Object = global.Object;
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/object-set-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable no-proto -- safe */
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var TypeError = global.TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/redefine.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/redefine.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var name = options && options.name !== undefined ? options.name : key;
  var state;
  if (isCallable(value)) {
    if (String(name).slice(0, 7) === 'Symbol(') {
      name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
    }
    if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
      createNonEnumerableProperty(value, 'name', name);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-exec-abstract.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-exec-abstract.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");

var TypeError = global.TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (isCallable(exec)) {
    var result = call(exec, R, S);
    if (result !== null) anObject(result);
    return result;
  }
  if (classof(R) === 'RegExp') return call(regexpExec, R, S);
  throw TypeError('RegExp#exec called on incompatible receiver');
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-exec.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-exec.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var regexpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "./node_modules/core-js/internals/regexp-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "./node_modules/core-js/internals/regexp-sticky-helpers.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").get);
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "./node_modules/core-js/internals/regexp-unsupported-ncg.js");

var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt = uncurryThis(''.charAt);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call(nativeExec, re1, 'a');
  call(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState(re);
    var str = toString(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = call(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace(flags, 'y', '');
      if (indexOf(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = call(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice(match.input, charsAdded);
        match[0] = stringSlice(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      call(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-flags.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-flags.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-sticky-helpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-sticky-helpers.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp = global.RegExp;

var UNSUPPORTED_Y = fails(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
  return !$RegExp('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

module.exports = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY,
  UNSUPPORTED_Y: UNSUPPORTED_Y
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-dot-all.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-unsupported-ncg.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-ncg.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var TypeError = global.TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-global.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/set-global.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-to-string-tag.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn(target, TO_STRING_TAG)) {
    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.21.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.21.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/string-multibyte.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/string-multibyte.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/task.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/task.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/core-js/internals/validate-arguments-length.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "./node_modules/core-js/internals/engine-is-ios.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var Dispatch = global.Dispatch;
var Function = global.Function;
var MessageChannel = global.MessageChannel;
var String = global.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var location, defer, channel, port;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  location = global.location;
} catch (error) { /* empty */ }

var run = function (id) {
  if (hasOwn(queue, id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(String(id), location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(handler) {
    validateArgumentsLength(arguments.length, 1);
    var fn = isCallable(handler) ? handler : Function(handler);
    var args = arraySlice(arguments, 1);
    queue[++counter] = function () {
      apply(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    isCallable(global.postMessage) &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ ((module) => {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- safe
  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var Object = global.Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TypeError = global.TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/to-string.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-string.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

var String = global.String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return String(argument);
};


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var String = global.String;

module.exports = function (argument) {
  try {
    return String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js/internals/native-symbol.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/validate-arguments-length.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/validate-arguments-length.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var TypeError = global.TypeError;

module.exports = function (passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
  return passed;
};


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js/internals/native-symbol.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var symbolFor = Symbol && Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else if (USE_SYMBOL_AS_UID && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.iterator.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "./node_modules/core-js/internals/define-iterator.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.exec.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.exec.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var exec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.replace.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.replace.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "./node_modules/core-js/internals/advance-string-index.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var getSubstitution = __webpack_require__(/*! ../internals/get-substitution */ "./node_modules/core-js/internals/get-substitution.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "./node_modules/core-js/internals/regexp-exec-abstract.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;
var concat = uncurryThis([].concat);
var push = uncurryThis([].push);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);
      return replacer
        ? call(replacer, searchValue, O, replaceValue)
        : call(nativeReplace, toString(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        push(results, result);
        if (!global) break;

        var matchStr = toString(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString(result[0]);
        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat([matched], captures, position, S);
          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);
          var replacement = toString(apply(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');


/***/ }),

/***/ "./node_modules/core-js/modules/web.immediate.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/web.immediate.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var task = __webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js");

var FORCED = !global.setImmediate || !global.clearImmediate;

// http://w3c.github.io/setImmediate/
$({ global: true, bind: true, enumerable: true, forced: FORCED }, {
  // `setImmediate` method
  // http://w3c.github.io/setImmediate/#si-setImmediate
  setImmediate: task.set,
  // `clearImmediate` method
  // http://w3c.github.io/setImmediate/#si-clearImmediate
  clearImmediate: task.clear
});


/***/ }),

/***/ "./node_modules/uikit/src/images/components/close-icon.svg":
/*!*****************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/close-icon.svg ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" xmlns=\"http://www.w3.org/2000/svg\">\n    <line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"1\" y1=\"1\" x2=\"13\" y2=\"13\" />\n    <line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13\" y1=\"1\" x2=\"1\" y2=\"13\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/close-large.svg":
/*!******************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/close-large.svg ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n    <line fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" x1=\"1\" y1=\"1\" x2=\"19\" y2=\"19\" />\n    <line fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" x1=\"19\" y1=\"1\" x2=\"1\" y2=\"19\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/marker.svg":
/*!*************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/marker.svg ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<rect x=\"9\" y=\"4\" width=\"1\" height=\"11\" />\n\t<rect x=\"4\" y=\"9\" width=\"11\" height=\"1\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/navbar-toggle-icon.svg":
/*!*************************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/navbar-toggle-icon.svg ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect y=\"9\" width=\"20\" height=\"2\" />\n    <rect y=\"3\" width=\"20\" height=\"2\" />\n    <rect y=\"15\" width=\"20\" height=\"2\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/overlay-icon.svg":
/*!*******************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/overlay-icon.svg ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect x=\"19\" y=\"0\" width=\"1\" height=\"40\" />\n    <rect x=\"0\" y=\"19\" width=\"40\" height=\"1\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/pagination-next.svg":
/*!**********************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/pagination-next.svg ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"7\" height=\"12\" viewBox=\"0 0 7 12\" xmlns=\"http://www.w3.org/2000/svg\">\n    <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" points=\"1 1 6 6 1 11\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/pagination-previous.svg":
/*!**************************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/pagination-previous.svg ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"7\" height=\"12\" viewBox=\"0 0 7 12\" xmlns=\"http://www.w3.org/2000/svg\">\n    <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" points=\"6 1 1 6 6 11\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/search-icon.svg":
/*!******************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/search-icon.svg ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9\" cy=\"9\" r=\"7\" />\n    <path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M14,14 L18,18 L14,14 Z\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/search-large.svg":
/*!*******************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/search-large.svg ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.8\" cx=\"17.5\" cy=\"17.5\" r=\"16.5\" />\n    <line fill=\"none\" stroke=\"#000\" stroke-width=\"1.8\" x1=\"38\" y1=\"39\" x2=\"29\" y2=\"30\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/search-navbar.svg":
/*!********************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/search-navbar.svg ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10.5\" cy=\"10.5\" r=\"9.5\" />\n    <line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"23\" y1=\"23\" x2=\"17\" y2=\"17\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/slidenav-next-large.svg":
/*!**************************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/slidenav-next-large.svg ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"25\" height=\"40\" viewBox=\"0 0 25 40\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"2\" points=\"4.002,38.547 22.527,20.024 4,1.5 \" />\r\n</svg>\r\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/slidenav-next.svg":
/*!********************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/slidenav-next.svg ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"14\" height=\"24\" viewBox=\"0 0 14 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" points=\"1.225,23 12.775,12 1.225,1 \" />\r\n</svg>\r\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/slidenav-previous-large.svg":
/*!******************************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/slidenav-previous-large.svg ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"25\" height=\"40\" viewBox=\"0 0 25 40\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"2\" points=\"20.527,1.5 2,20.024 20.525,38.547 \" />\r\n</svg>\r\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/slidenav-previous.svg":
/*!************************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/slidenav-previous.svg ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"14\" height=\"24\" viewBox=\"0 0 14 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" points=\"12.775,1 1.225,12 12.775,23 \" />\r\n</svg>\r\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/spinner.svg":
/*!**************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/spinner.svg ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle fill=\"none\" stroke=\"#000\" cx=\"15\" cy=\"15\" r=\"14\" />\n</svg>\n");

/***/ }),

/***/ "./node_modules/uikit/src/images/components/totop.svg":
/*!************************************************************!*\
  !*** ./node_modules/uikit/src/images/components/totop.svg ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<svg width=\"18\" height=\"10\" viewBox=\"0 0 18 10\" xmlns=\"http://www.w3.org/2000/svg\">\n    <polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" points=\"1 9 9 1 17 9 \" />\n</svg>\n");

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,